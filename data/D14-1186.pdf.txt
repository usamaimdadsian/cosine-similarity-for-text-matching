Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 1774–1778,
October 25-29, 2014, Doha, Qatar.
c©2014 Association for Computational Linguistics
Joint Learning of Chinese Words, Terms and Keywords
Ziqiang Cao
1
Sujian Li
1
Heng Ji
2
1
Key Laboratory of Computational Linguistics, Peking University, MOE, China
2
Computer Science Department, Rensselaer Polytechnic Institute, USA
{ziqiangyeah, lisujian}@pku.edu.cn jih@rpi.edu
Abstract
Previous work often used a pipelined
framework where Chinese word segmen-
tation is followed by term extraction and
keyword extraction. Such framework suf-
fers from error propagation and is un-
able to leverage information in later mod-
ules for prior components. In this paper,
we propose a four-level Dirichlet Process
based model (DP-4) to jointly learn the
word distributions from the corpus, do-
main and document levels simultaneously.
Based on the DP-4 model, a sentence-wise
Gibbs sampler is adopted to obtain proper
segmentation results. Meanwhile, terms
and keywords are acquired in the sampling
process. Experimental results have shown
the effectiveness of our method.
1 Introduction
For Chinese language which does not contain ex-
plicitly marked word boundaries, word segmenta-
tion (WS) is usually the first important step for
many Natural Language Processing (NLP) tasks
including term extraction (TE) and keyword ex-
traction (KE). Generally, Chinese terms and key-
words can be regarded as words which are repre-
sentative of one domain or one document respec-
tively. Previous work of TE and KE normally used
the pipelined approaches which first conducted
WS and then extracted important word sequences
as terms or keywords.
It is obvious that the pipelined approaches are
prone to suffer from error propagation and fail to
leverage information for word segmentation from
later stages. Here, we provide one example in the
disease domain, to demonstrate the common prob-
lems in current pipelined approaches and propose
the basic idea of our joint learning of words, terms
and keywords.
Example: @ÏÇ(thrombocytopenia) (with)
{? (heparinoid) 	(have) sû(relation).
This is a correctly segmented Chinese sen-
tence. The document containing the example sen-
tence mainly talks about the property of ”{?
 (heparinoid)” which can be regarded as one key-
word of the document. At the same time, the
word@ÏÇ(thrombocytopenia) appears fre-
quently in the disease domain and can be treated
as a domain-specific term.
However, for such a simple sentence, current
segmentation tools perform poorly. The segmen-
tation result with the state-of-the-art Conditional
Random Fields (CRFs) approach (Zhao et al.,
2006) is as follows:
@(blood platelet) Ï(reduction) Ç(symptom)
{(of same kind) ?(liver) 	(always)sû(relation)
where @ÏÇ is segmented into three com-
mon Chinese words and {? is mixed with its
neighbors.
In a text processing pipeline of WS, TE and
KE, it is obvious that imprecise WS results will
make the overall system performance unsatisfy-
ing. At the same time, we can hardly make use of
domain-level and document-level information col-
lected in TE and KE to promote the performance
of WS. Thus, one question comes to our minds:
can words, terms and keywords be jointly learned
with consideration of all the information from the
corpus, domain, and document levels?
Recently, the hierarchical Dirichlet process
(HDP) model has been used as a smoothed bigram
model to conduct word segmentation (Goldwater
et al., 2006; Goldwater et al., 2009). Meanwhile,
one strong point of the HDP based models is that
they can model the diversity and commonality in
multiple correlated corpora (Ren et al., 2008; Xu
et al., 2008; Zhang et al., 2010; Li et al., 2012;
Chang et al., 2014). Inspired by such existing
work, we propose a four-level DP based model,
1774
0G1GwH mwH imjw imwH1mwH NmmwH3? ?????jmN2?1?0? M| |V
Figure 1: DP-4 Model
named DP-4, to adapt to three levels: corpus, do-
main and document. In our model, various DPs
are designed to reflect the smoothed word distri-
butions in the whole corpus, different domains and
different documents. Same as the DP based seg-
mentation models, our model can be easily used
as a semi-supervised framework, through exerting
on the corpus level the word distributions learned
from the available segmentation results. Refer-
ring to the work of Mochihashi et al. (2009), we
conduct word segmentation using a sentence-wise
Gibbs sampler, which combines the Gibbs sam-
pling techniques with the dynamic programming
strategy. During the sampling process, the impor-
tance values of segmented words are measured in
domains and documents respectively, and words,
terms and keywords are jointly learned.
2 DP-4 Model
Goldwater et al. (2006) applied the HDP model on
the word segmentation task. In essence, Goldwa-
ter’s model can be viewed as a bigram language
model with a unigram back-off. With the lan-
guage model, word segmentation is implemented
by a character-based Gibbs sampler which repeat-
edly samples the possible word boundary posi-
tions between two neighboring words, conditioned
on the current values of all other words. How-
ever, Goldwater’s model can be deemed as mod-
eling the whole corpus only, and does not distin-
guish between domains and documents. To jointly
learn the word information from the corpus, do-
main and document levels, we extend Goldwater’s
model by adding two levels (domain level and doc-
ument level) of DPs, as illustrated in Figure 1.
2.1 Model Description
M DPs (H
m
w
;1 ? m ? M ) are designed specif-
ically to word w to model the bigram distribu-
tions in each domain and these DPs share an
overall base measure H
w
, which is drawn from
DP (?
0
, G
1
) and gives the bigram distribution for
the whole corpus. Assuming the m
th
domain in-
cludes N
m
documents, we use H
m
j
w
(1 ? j ?
N
m
) to model the bigram distribution of the i
th
document in the domain. Usually, given a do-
main, the bigram distributions of different docu-
ments are not conditionally independent and simi-
lar documents exhibit similar bigram distributions.
Thus, the bigram distribution of one document is
generated according to both the bigram distribu-
tion of the domain and the bigram distributions
of other documents in the same domain. That is,
H
m
j
w
? g(?
3
, H
m
w
, H
m
?j
w
) where H
m
?j
w
repre-
sents the bigram distributions of the documents in
the m
th
domain except the j
th
document. Assum-
ing the j
th
document in the m
th
domain contains
N
j
m
words, each word is drawn according toH
m
j
w
.
That is, w
m
j
i
? H
m
j
w
(1 ? i ? N
j
m
). Thus, our
four-level DP model can be summarized formally
as follows:
G
1
? DP (?
0
, G
0
) ;H
w
? DP (?
1
, G
1
)
H
m
w
? DP (?
2
, H
w
) ;H
m
j
w
? g
(
?
3
, H
m
w
, H
m
?j
w
)
w
m
j
i
|w
i?1
= w ? H
d
w
Here, we provide for our model the Chinese
Restaurant Process (CRP) metaphor, which can
create a partition of items into groups. In our
model, the word type of the previous word w
i?1
corresponds to a restaurant and the current word
w
i
corresponds to a customer. Each domain is
analogous to a floor in a restaurant and a room de-
notes a document. Now, we can see that there are
|V | restaurants and each restaurant consists of M
floors. Them
th
floor containsN
m
rooms and each
room has an infinite number of tables with infinite
seating capacity. Customers enter a specific room
on a specific floor of one restaurant and seat them-
selves at a table with the label of a word type. Dif-
ferent from the standard HDP, each customer sits
at an occupied table with probability proportional
to both the numbers of customers already seated
there and the numbers of customers with the same
word type seated in the neighboring rooms, and at
an unoccupied table with probability proportional
to both the constant ?
3
and the probability that the
1775
customers with the same word type are seated on
the same floor.
2.2 Model Inference
It is important to build an accurate G
0
which de-
termines the prior word distribution p
0
(w). Sim-
ilar to the work of Mochihashi et al. (2009), we
consider the dependence between characters and
calculate the prior distribution of a word w
i
using
the string frequency statistics (Krug, 1998):
p
0
(w
i
) =
n
s
(w
i
)
?
n
s
(.)
(1)
where n
s
(w
i
) counts the character string com-
posed of w
i
and the symbol “.” represents any
word in the vocabulary V .
Then, with the CRP metaphor, we can obtain the
expected word unigram and bigram distributions
on the corpus level according to G
1
and H
w
:
p
1
(w
i
) =
n (w
i
) + ?
0
p
0
(w
i
)
?
n (.) + ?
0
(2)
p
2
(w
i
|w
i?1
= w) =
n
w
(w
i
) + ?
1
p
1
(w
i
)
?
n
w
(.) + ?
1
(3)
where the subscript numbers indicate the corre-
sponding DP levels. n(w
i
) denotes the number of
w
i
and n
w
(w
i
) denotes the number of the bigram
< w,w
i
> occurring in the corpus. Next, we can
easily get the bigram distribution on the domain
level by extending to the third DP.
p
m
3
(w
i
|w
i?1
= w) =
n
m
w
(w
i
) + ?
2
p
2
(w
i
|w
i?1
)
?
n
m
w
(.) + ?
2
(4)
where n
m
w
(w
i
) is the number of the bigram <
w,w
i
> occurring in the m
th
domain.
To model the bigram distributions on the docu-
ment level, it is beneficial to consider the influence
of related documents in the same domain (Wan
and Xiao, 2008). Here, we only consider the in-
fluence from theK most similar documents with a
simple similarity metric s(d
1
, d
2
) which calculates
the Chinese character overlap ratio of two docu-
ments d
1
and d
2
. Let d
j
m
denote the j
th
document
in the m
th
domain and d
j
m
[k](1 ? k ? K) the K
most similar documents. d
j
m
can be deemed to be
“lengthened” by d
j
m
[k](1 ? k ? K). Therefore,
we estimate the count of w
i
in d
j
m
as:
t
d
j
m
w
(w
i
) = n
d
j
m
w
(w
i
)+
?
k
s(d
j
m
[k], d
j
m
)n
d
j
m
[k]
w
(w
i
)
(5)
where n
d
j
m
[k]
w
(w
i
) denotes the count of the bigram
< w,w
i
> occurring in d
j
m
[k]. Next, we model
the bigram distribution in d
j
m
as a DP with the base
measure H
m
w
:
p
d
j
m
4
(w
i
|w
i?1
= w) =
t
d
j
m
w
(w
i
) + ?
3
p
m
3
(w
i
|w
i?1
)
?
t
d
j
m
w
(.) + ?
3
(6)
With CRP, we can also easily estimate the un-
igram probabilities p
m
3
(w
i
) and p
d
j
m
4
(w
i
) respec-
tively on the domain and document levels, through
combining all the restaurants.
To measure whether a word is eligible to be a
term, the score function TH
m
(·) is defined as:
TH
m
(w
i
) =
p
m
3
(w
i
)
p
1
(w
i
)
(7)
This equation is inspired by the work of Nazar
(2011), which extracts terms with consideration of
both the frequency in the domain corpus and the
frequency in the general reference corpus. Similar
to Eq. 7, we define the functionKH
d
j
m
(·) to judge
whether w
i
is an appropriate keyword.
KH
d
j
m
(w
i
) =
p
d
j
m
4
(w
i
)
p
1
(w
i
)
(8)
During each sampling, we make use of Eqs. (7)
and (8) to identify the most possible terms and
keywords. Once a word is identified as a term
or keyword, it will drop out of the sampling pro-
cess in the following iterations. Its CRP explana-
tion is that some customers (terms and keywords)
find their proper tables and keep sitting there after-
wards.
2.3 Sentence-wise Gibbs Sampler
The character-based Gibbs sampler for word seg-
mentation (Goldwater et al., 2006) is extremely
slow to converge, since there exists high correla-
tion between neighboring words. Here, we intro-
duce the sentence-wise Gibbs sampling technique
as well as efficient dynamic programming strat-
egy proposed by Mochihashi et al. (2009). The
basic idea is that we randomly select a sentence
in each sampling process and use the Viterbi al-
gorithm (Viterbi, 1967) to find the optimal seg-
mentation results according to the word distribu-
tions derived from other sentences. Different from
Mochihashi’s work, once terms or keywords are
1776
identified, we do not consider them in the segmen-
tation process. Due to space limitation, the algo-
rithm is not detailed here and can be referred in
(Mochihashi et al., 2009).
3 Experiment
3.1 Data and Setting
It is indeed difficult to find a standard evaluation
corpus for our joint tasks, especially in different
domains. As a result, we spent a lot of time to col-
lect and annotate a new corpus
1
composed of ten
domains (including Physics, Computer, Agricul-
ture, Sports, Disease, Environment, History, Art,
Politics and Economy) and each domain is com-
posed of 200 documents. On average each doc-
ument consists of about 4800 Chinese characters.
For these 2000 documents, three annotators have
manually checked the segmented words, terms and
keywords as the gold standard results for evalu-
ation. As we know, there exists a large amount
of manually-checked segmented text for the gen-
eral domain, which can be used as the training data
for further segmentation. As with other nonpara-
metric Bayesian models (Goldwater et al., 2006;
Mochihashi et al., 2009), our DP-4 model can be
easily amenable to semi-supervised learning by
imposing the word distributions of the segmented
text on the corpus level. The news texts pro-
vided by Peking University (named PKU corpus)
2
is used as the training data. This corpus contains
about 1,870,000 Chinese characters and has been
manually segmented into words.
In our experiments, the concentration coeffi-
cient (?
0
) is finally set to 20 and the other three
(?
1?3
) are set to 15. The parameter K which con-
trols the number of similar documents is set to 3.
3.2 Performance Evaluation
The following baselines are implemented for com-
parison of segmentation results: (1) Forward max-
imum matching (FMM) algorithm with a vocab-
ulary compiled from the PKU corpus; (2) Re-
verse maximum matching (RMM) algorithm with
the compiled vocabulary; (3) Conditional Random
Fields (CRFs)
3
based supervised algorithm trained
from the PKU corpus; (4) HDP based semi-
supervised algorithm (Goldwater et al., 2006) us-
1
Nine domains are from http://www.datatang.
com/data/44139 and we add an extra Disease domain.
2
http://icl.pku.edu.cn
3
We adopt CRF++(http://crfpp.googlecode.
com/svn/trunk/doc/index.html)
ing the PKU corpus. The strength of Mochi-
hashi et al. (2009)’s NPYLM based segmentation
model is its speed due to the sentence-wise sam-
pling technique, and its performance is similar to
Goldwater et al. (2006)’s model. Thus, we do not
consider the NPYLM based model for compari-
son here. Then, the segmentation results of FMM,
RMM, CRF, and HDP methods are used respec-
tively for further extracting terms and keywords.
We use the mutual information to identify the can-
didate terms or keywords composed of more than
two segmented words. As for DP-4, this recogni-
tion process has been done implicitly during sam-
pling. To measure the candidate terms or key-
words, we refer to the metric in Nazar (2011) to
calculate their importance in some specific domain
or document.
The metrics of F
1
and the out-of-vocabulary
Recall (OOV-R) are used to evaluate the segmenta-
tion results, referring to the gold standard results.
The second and third columns of Table 1 show the
F
1
and OOV-R scores averaged on the 10 domains
for all the compared methods. Our method sig-
nificantly outperforms FMM, RMM and HDP ac-
cording to t-test (p-value ? 0.05). From the seg-
mentation results, we can see that the FMM and
RMM methods are highly dependent on the com-
piled vocabulary and their identified OOV words
are mainly the ones composed of a single Chinese
character. The HDP method is heavily influenced
by the segmented text, but it also exhibits the abil-
ity of learning new words. Our method only shows
a slight advantage over the CRF approach. We
check our segmentation results and find that the
performance of the DP-4 model is depressed by
the identified terms and keywords which may be
composed of more than two words in the gold
standard results, because the DP-4 model always
treats the term or keyword as a single word. For
example, in the gold standard, ”­W?((Lingnan
Culture)” is segmented into two words ”­W” and
”?”, ”pn¥ã(data interface)” is segmented
into ”pn” and ”¥ã” and so on. In fact, our seg-
mentation results correctly treat ”­W?” and ”p
n¥ã” as words.
To evaluate the TE and KE performance, the top
50 (TE-50) and 100 (TE-100) accuracy are mea-
sured for the identified terms of one domain, while
the top 5 (KE-5) and 10 (KE-10) accuracy for the
keywords in one document, are shown in the right
four columns of Table 1. We can see that DP-
1777
4 performs significantly better than all the other
methods in TE and KE results.
As for the ten domains, we find our approach
behaves much better than the other approaches on
the following three domains: Disease, Physics and
Computer. It is because the language of these
three domains is much different from that of the
general domain (PKU corpus), while the rest do-
mains are more similar to the general domain.
Method F1 OOV-R TE-50 TE-100 KE-5 KE-10
FMM 0.796 0.136 0.420 0.360 0.476 0.413
RMM 0.794 0.136 0.424 0.352 0.478 0.414
HDP 0.808 0.356 0.672 0.592 0.552 0.506
CRF 0.817 0.330 0.624 0.560 0.543 0.511
DP-4 0.821 0.374 0.704 0.640 0.571 0.545
Table 1: Comparison of WS, TE and KE Perfor-
mance (averaged on the 10 domains).
4 Conclusion
This paper proposes a four-level DP based model
to construct the word distributions from the cor-
pus, domain and document levels simultaneously,
through which Chinese words, terms and key-
words can be learned jointly and effectively. In
the future, we plan to explore how to combine
more features such as part-of-speech tags into our
model.
Acknowledgments
We thank the three anonymous reviewers for
their helpful comments. This work was par-
tially supported by National High Technology Re-
search and Development Program of China (No.
2012AA011101), National Key Basic Research
Program of China (No. 2014CB340504), Na-
tional Natural Science Foundation of China (No.
61273278), and National Key Technology R&D
Program (No: 2011BAH10B04-03). The contact
author of this paper, according to the meaning
given to this role by Peking University, is Sujian
Li.
References
Baobao Chang, Wenzhe Pei, and Miaohong Chen.
2014. Inducing word sense with automatically
learned hidden concepts. In Proceedings of COL-
ING 2014, pages 355–364, Dublin, Ireland, August.
Sharon Goldwater, Thomas L. Griffiths, and Mark
Johnson. 2006. Contextual dependencies in un-
supervised word segmentation. In Proceedings of
the 21st International Conference on Computational
Linguistics and the 44th annual meeting of the Asso-
ciation for Computational Linguistics, pages 673–
680.
Sharon Goldwater, Thomas L. Griffiths, and Mark
Johnson. 2009. A bayesian framework for word
segmentation: Exploring the effects of context.
Cognition, 112(1):21–54.
Manfred Krug. 1998. String frequency: A cognitive
motivating factor in coalescence, language process-
ing, and linguistic change. Journal of English Lin-
guistics, 26(4):286–320.
Jiwei Li, Sujian Li, Xun Wang, Ye Tian, and Baobao
Chang. 2012. Update summarization using a multi-
level hierarchical dirichlet process model. In Pro-
ceedings of Coling 2012, pages 1603–1618, Mum-
bai, India.
Daichi Mochihashi, Takeshi Yamada, and Naonori
Ueda. 2009. Bayesian unsupervised word segmen-
tation with nested pitman-yor language modeling.
In Proceedings of the Joint Conference of the 47th
Annual Meeting of the ACL and the 4th International
Joint Conference on Natural Language Processing
of the AFNLP: Volume 1-Volume 1, pages 100–108.
Rogelio Nazar. 2011. A statistical approach to term
extraction. IJES, International Journal of English
Studies, 11(2):159–182.
Lu Ren, David B. Dunson, and Lawrence Carin. 2008.
The dynamic hierarchical dirichlet process. In Pro-
ceedings of the 25th international conference on
Machine learning, pages 824–831.
Andrew J. Viterbi. 1967. Error bounds for convolu-
tional codes and an asymptotically optimum decod-
ing algorithm. IEEE Transactions on Information
Theory, pages 260–269.
Xiaojun Wan and Jianguo Xiao. 2008. Single
document keyphrase extraction using neighborhood
knowledge. In AAAI, volume 8, pages 855–860.
Tianbing Xu, Zhongfei Zhang, Philip S. Yu, and
Bo Long. 2008. Dirichlet process based evolution-
ary clustering. In ICDM’08, pages 648–657.
Jianwen Zhang, Yangqiu Song, Changshui Zhang, and
Shixia Liu. 2010. Evolutionary hierarchical dirich-
let processes for multiple correlated time-varying
corpora. In Proceedings of the 16th ACM SIGKDD
International Conference on Knowledge Discovery
and Data Mining, pages 1079–1088, New York, NY,
USA.
Hai Zhao, Chang-Ning Huang, and Mu Li. 2006. An
improved chinese word segmentation system with
conditional random field. In Proceedings of the Fifth
SIGHAN Workshop on Chinese Language Process-
ing, volume 1082117.
1778
