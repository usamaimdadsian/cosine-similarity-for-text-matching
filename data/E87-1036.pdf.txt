DECLARATIVE NOOEL FOR DEPENDENCY PARSING - 
k V IEV  INTO BLACKBOARD METHOOOLOGY 
Vatkonen, K., J ipp inen ,  H., Lehtota,  A. and Ytltammi, N. 
KIELIKOHE-pr~ject, SITRA Foundation 
P.O.Box 329, SF-00121Hets ink i  
FinLand 
teL.  in t i  + 358 0 641 877 
ABSTRACT 
This paper presents  a dec la ra t ive ,  dependency 
const ra in t  model fo r  pars ing an in fLect ionaL  f ree  word 
order  Language, t |ke  F inn ish.  The s t ruc ture  of  
Finnish sentences is  descr ibed as par t ia l  dependency 
t rees of  depth one. Parsing becomes a 
nondetermin is t tc  search problem in the fo res t  of  
par t ia l  parse t rees .  The search process is  able to 
so lve a lso  ambigu i t ies  and tong-d is tance dependencies. 
Parsing is  controLLed by a blackboard system. A 
~orking parser  fo r  F innish has been implemented based 
on the modeL. 
1 |RTROOUCT|OB 
The development of  our computat ional  model fo r  
dependency pars ing has progressed in three para l le l  
and in ter re la ted  phases: 
(1) The development of  a perspicuous high Level 
grammar spec i f i ca t ion  Language which grasps wel l  
regu lar i t ies  and idiosyncracies of in f lec t iona l  f ree  
word order  Languages. 
(2) The acqu is i t ion  of  a grammar using that  Language 
as the descr ip t ion  media. 
(3) The development of  a pars ing s t ra tegy  and a 
compi ler  fo r  the spec i f i ca t ion  Language. 
In our f i r s t  approach the pars ing process is descr ibed 
as a sequence of  tocat dec is ions  (Netimarkka et at .  
1984). A pa i r  of  adjacent s t ruc tures  of  an input 
sentence is connected i f  there ex is ts  a va l id  b inary  
dependency re la t ion  between them. B inary  re la t ions  
are boolean express ions of  the morphological  and 
syntact i c  res t r i c t ions  on argument s t ruc tures .  In 
that  f i r s t  vers ion  dependency sructures  were modelled 
procedura l ly  with f in i te  two-way automata (Lehtota  et 
a t .  1985). Grammar descr ip t ions  turned out to be 
complicated to handle,  and due to pure ly  Local 
dec is ions  some gtobat phenomena, such as tong-d is tance 
dependencies, were not analyzed. 
A new grammar descr ip t ion  formal ism and computat ional  
method was developed: a dec la ra t ive  high Level 
Language FUMDPL (J~ppinen et a t .  1986) fo r  a grammar, 
and an under ly ing  blackboard-based pars ing method 
(Vatkonen and Lehtota,  1986). Recent ly,  we have 
augmented the dependency parsing model to cover a lso  
tong-d is tance dependencies. According to the 
augmented model we have implemented a blackboard-based 
dependency parser  ADP (Augmented Dependency Parser ) .  
In th i s  paper we shor t ly  descr ibe  our model and focus 
on the pars ing s t ra tegy .  For the grammar development 
environment and the compi la t ion  of  the high \[ever 
descr ip t ion  Language• see Lehtota et  a t .  (1985 e 
1986). 
Our pars ing method belongs to the c lass  of  const ra in t  
systems: a user spec i f ies  the const ra in ts  ho ld ing in 
the problem domain, and a goat fo r  the computat ion.  
The in terpreter  must search fo r  the goa l .  The resu l t  
fo l lows  ind i rec t ly  from the search process,  in our 
model b inary  re la t ions  spec i fy  const ra in ts  on argument 
structures. The goal is  to f ind  a matching Local 
environment descr ip t ion  fo r  each word of  an input 
sentence. As a s ide e f fec t  of  the recogn i t ion  
corresponding par t ia l  dependency t rees  are bu i l t .  The 
par t ia l  dependency t rees  ere Linked in to  a parse t ree  
cover ing the whole sentence (F igure  1).  
PROOLEM SPAC(: p | r t t • l  dependency t r luu  
of depth one 
GOAL: • complete  
por • l  t ree 
W4 
~L 6 /~o w5 
Sentence 
W I W z W 3 W 4 . .  W n 
Figure 1. Pars ing as a search process in a fo res t  of 
par t ia l  dependency t rees .  
218 
2 GRANNAR OESCR|PTION 
For the development of  a grammar notat ion  
id iosyncrac ies  of the ob ject  Language had to be 
observed. Finnish is a re la t ive ly  f ree  word order 
language. The syntactic-semantic knowledge ts o f ten  
expressed in the in f lec t ions  of  the words. 
Furthermore, the parser  was needed to work as a 
pract i ca l  toot  fo r  rea l  product ion app l i ca t ions ,  so 
the process of  pars ing was taken as a s tar t ing  po int  
instead of  sentence generat ion .  
A grammar descr ip t ion  cons is ts  of four  par ts :  
(1) Type def in i t ions :  L ingu is t i c  p roper t ies ,  features  
and categor ies .  
(2) A lex icon  fo r  assoc ia t ing  features  with words. 
(3) B inary  dependency re la t ions  that  may hold between 
regents and the i r  dependents. 
(4) Funct ional  8¢hemmta fo r  de f in ing  the Local 
environments of  regents .  
2.1 Type def in i t ions  
i n  the type def in i t ion  part  a grammar wr i te r  def ines  
the types and the i r  va lues used in a grammar 
descr ip t ion .  This corresponds to the c lass i f i ca t ion  
of L ingu is t i c  p roper t ies .  There are three kinds of  
types:  CATEGORIES, FEATURES end PROPERTIES. In 
add i t ion  to th i s  the s t ruc ture  of  the tex ica l  ent r ies  
is descr ibed in th i s  par t .  
CATEGORY statement assigns names in h ie rarch ies .  For 
example, a category SyntCat fo r  word classes could be 
def ined as 
(CATEGORY: SyntCat 
< (Word) 
(Noun I Word) 
(Proper I Noun) 
(Common I Noun) 
(Pronoun I Word) 
(PersPron I Pron) 
(OemPron I Pron) 
( ;n tPron  I Pron) 
In a FEATURE statement • feature  name and t t s  values 
are def ined.  Values can be mutuaLLy exc lus ive :  
adding of the complement value automaticaLLy destroys 
the o ld va lue.  
(FEATURE: SyntFeet 
< (Locat ive)  ;a name of a place 
( In fAt t r )  ;a noun, that  may have an 
tn f in i t tv ia l  a t t r ibute  
(CountMessure) ;a countable measure noun 
°e .  
PROPERTY values are Like FEATURES except that they may 
have defau l t  va lues.  For example: 
(PROPERTY: Polar  < ( Pos ) Neg >) 
In th i s  type de f in i t ion  po la r i ty  is pos i t i ve  by 
de fau l t .  
2.2 Lexicon 
The parser  is  preceded by a morphoLogicaL analyzer  
(J~ppinen and Ytitammi 1986). The morphological  
anatyzer  produces fo r  each word i t s  morphological  
in terpretat ion  inc lud ing  tex icat  in fo rmat ion .  The 
parser  assoc iates  de fau l t  features  fo r  words. Those 
words which have idiosyncratic features ,  ms a l l  verbs 
do, are in the parser~s Lexicon. Some example ent r ies  
of  the parser ' s  lex icon :  
NETRi (Common (SubstNeasure))  
HELSINKI (Proper (Locat ive) )  
AJATELLA (TrProcV ( In fObj  Psnt i sOb j ) )  
"Net r i "  (meter)  is s measure un i t  fo r  common nouns. 
"Nets ink{"  ts s proper noun and a name of  a place.  
"A ja te t la"  ( to  th ink)  Js a t rans i t i ve  verb that  may 
have in f in i t tv ta t  or  par t i c ip le  ob jec ts .  
2.3 B inary  dependency re ta t ions  
The dependency pars ing model aims at prov id ing  
analyzed sentences with the i r  dependency t rees .  
According to th i s  approach two elements of  • sentence 
are d i rec t ly  re la ted  in a dependency re la t ion  t f  one 
depends on another .  The two elements ere cat ted the 
regent R (or  head or governer)  and the dependent 0 (or  
mod i f ie r ) .  B inary  re la t ions  de f ine  a l l  permit ted 
dependency re la t ions  that  may ex is t  between two words 
in Finnish sentences. For example, the b inary  
re la t ion  Subject is  the fo l low ing  boolean express ion 
of  the morphological  end syntact i c  features  of a 
f in i te  verb and i t s  nominal sub jec t :  
(RELATION: Sub ject  (D := Sub ject )  
((R = Verb Act  
(< lad  Cond Imper Pot I lpar t i s  > (PersonP O)(PersonN D) 
- Negat ive - Aux i l i a ry )  
(Auxil iary llpertis Nom - Negative) 
(Negative • limper Pr • (S 2P) Neg >) 
(Cond Pr S 3P) (Pot Pr Neg) 
( I Ipar t i s  Nom)> - Aux i l i a ry )>)  
(D • PersPron Nom)) . . .  
R must be an act ive  verb.  Further res t r i c t ions  fo r  i t  
219 
appear w i th in  angle brackets that  ind icates  a 
d i s junct ion .  Negation is expressed by " - " .  (PersonP 
D) (PersonH D) ind icates  an agreement tes t .  O must be 
e personal pronoun in nominative case in th i s  
fragment. 
In our computational  model words of  an input sentence 
appear as complexes of  the i r  morphologica l ,  
syntact i ca l  end semantic p roper t ies .  We ca l l  th i s  
complex a const i tuent .  I f  • b inary  re la t ion  holds 
between R and D, they ere ad jo ined in to  a s ing le  
const i tuent .  This ts what we mean by a funct iona l  
descr ip t ion .  I t  can be s ta ted  fo rmal ly  as mopping 
f (R,D) -> R I 
where R' stands fo r  the regent R a f te r  that  i t  has 
bound D. Function f is de f ined  by the corresponding 
b inary  re la t ion .  This funct ion  abst rac t ion  should be 
d i s t ingu ished  from grammatical funct ions ,  even though 
in our grammar spec i f i ca t ion  dependency re la t ions  a lso  
est imate grammatical funct ions .  
2.4 Funct ional  schemata 
In funct iona l  schemata the Local environment of  a 
regent is  descr ibed by dependency funct ions .  
Funct ional  schemata can be seen as par t ia l  dependency 
t ree  descr ip t ions .  A s impl i f ied  schema for  verb 
phrases, when a regent is  • t rans i t i ve  verb and i t  is  
preceeded by s negat ive  aux i l i a ry  verb,  could be 
def ined aS 
(SCHEHA: NegTronsVerb 
WHEN (AND (R • ProcVerb Act T rans i t ive )  
(LEFT • Aux i l i a ry  Negat ive) )  
FUNCTIONS (NULTIPLE Adverb ia l )  
(OBLIGATORY Negation Subject Object)  
(LEFT Negation Subject Object Adverb ia l )  
(RIGHT Object Subject Adverb ia l )  
HARK (R := VerbP)) 
This scheme is  able to recognize end bu i ld ,  fo r  
instance,  per t le t  dependency t rees  shown in Figure 2. 
¥mr~ WMrt~ Ver~ 
svb~ eeg eb} subl nag e~v e~| eaj s~ j  mql 
Figure 2. Example t rees  bu i l t  by a schema NegTransVerb. 
There ere three par ts  in the s impl i f ied  schema 
NegTransVerb: WHEN. FUMCTIOIIS end HARK. WHEN per t  
descr ibes  features  fo r  the regent and i t s  context .  
FUNCTIONS par t  descr ibes  the dependents fo r  the 
regent .  NULT|PLE c lause ind icates  which dependents 
may ex is t  mul t ip le  times. OBLIGATORY names ob l igatory  
dependents. LEFT end RIGHT give the s t ruc ture  of the 
le f t  and r ight  context  of the regent.  
The f ree  word order  is a l lowed by de fau l t  because of 
the par t i cu la r  in terpretat ion  of  the clauses LEFT and 
RIGHT. The def in i t ion  only ind icates  which dependents 
ex is t  in the named context ,  not the i r  mutual order .  
ALl the permutat ions ere at toued.  There is a lso means 
of  f i x ing  yard order ing .  ORDER clause ind icates  
mutual o rder ing  of  dependents. For example, a grammar 
wr i te r  may def ine  fo r  the simple NP#s 
(ORDER Ad jAt t r  GenAttr R Re lAt t r )  
For th i s  par t i cu la r  regent the most immediate Left  
netghbour must be a genet ive  a t t r ibute .  The next to  
that  is  an ad jec t ive  a t t r ibute .  The r ight  netghbour 
is a re la t ive  c lause.  
For tong-distmnce dependencies the Local dec is ion  
s t ra tegy  must be augmented. The b inding of 
|ong-dJstance dependents has two phases: the 
recogn i t ion  end the actual  b ind ing.  
In t rans format iona l  grammar, tong-d is tance 
dependencies ere dea l t  with by assuming that  in the 
deep s t ructure  the missing word is  in the place i t  
would be in the corresponding simple sentence. I t  is  
then moved or de le ted  by a t rans format ion .  The 
essent ia l  po in t  is  that  tong-d is tance dependency is  
caused by an element which has moved from the Local 
environment of  • regent to the Local environment of  
another regent .  Hence a moved element must be 
recognized by the funct iona l  schema assoc iated with 
that  Lat ter  regent .  The b ind ing,  then, is  done Later 
on by the schema of  the former regent .  
In the recogn i t ion  phase the tong-d is tance dependents 
are recognized and bound "sway" (captured) ,  so that  
the cur rent  regent can govern i t s  environment.  
A f te r  th i s  capture the poss ib le  Long-distance 
dependent remains wa i t ing  fo r  b ind ing by another 
scheme. 
Captur ing dependency funct ions  are marked tn the 
CAPTURE c lause:  
(CAPTURE DistantNember) 
The dependency funct ion  DistentNember is  general  
enough to capture a l l  poss ib le  tong-d is tant  
dependents. For the actual  b inding of  tong-d is tance 
dependents, one must mark in the c lause DISTANT the 
dependents which may be d i s tant :  
(DISTANT Object)  
220 
3 BLACKBOARD-BASED CONTROL FOB DEPENDENCY PARSING 
BLackboard ts a problem-so lv ing model fo r  expert  
systems (Hayes-Both et at .  1983, Ni i  1986). We have 
adopted that  concept end ut i l i zed  i t  fo r  pars ing 
purposes. Our blackboard model app l i ca t ion  is ra ther  
simple (F igure 3) .  
There are three main components: • b lackboard,  m 
cont ro l  part  end knowledge sources. The blackboard 
contains the ac t ive  environment descr ip t ion  fo r  a 
regent.  According to the s t ruc tura l  knowledge in that  
environment descr ip t ion  corresponding par t ia l  parse 
t ree  is  bu i l t  in the blackboard.  Also a l l  other  
changes in the s ta te  of  computation are marked in the 
blackboard.  
Functional schemata and b inary  dependency re la t ions  
are independent and separate knowledge sources; no 
communication happens between them. Art data f low 
takes place through the blackboard.  Which module of  
knowledge to appty is  determined dynemicalty,  one step 
at • t ime, resu l t ing  in the incremental generat ion of  
par t ia l  so lu t ions .  
In funct iona l  schemata s grammar writer has descr ibed 
Local environments fo r  regents by dependency 
funct ions .  The schemata are compiled in to  an in terna l  
LXSP-form. At s time, on ly  one of  the schemata is  
chosen as an act ive  environment descr ip t ion  fo r  the 
cur rent  regent .  The act ivated  schema is  matched with 
the environment of  the regent by b inary  re la t ion  
tes ts .  The b inary  re la t ions  respond to the changes in 
the blackboard according to the s t ruc tura l  descr ip t ion  
in the ac t ive  schema and the proper t ies  of  the regent 
and dependent candidates.  At the same the par t ia l  
dependency t ree  is  bu i l t  by corresponding dependency 
funct ion  app l i ca t ions .  When s schema has been fu l l y  
matched end the ac t ive  regent bound to i t s  dependents 
through funct ion  Links, the Local par t ia l  dependency 
parse is  complete. 
A scheduler  fo r  knowledge sources cont ro l s  the whole 
system. It monitors  the changes on the blackboard and 
decides Mhat act ions  to take next .  The scheduler 
employs • f in i te  two-way automaton fo r  recogn i t ion  of  
the dependents. 
I 
BLACKBOARD KNOWLEDGE 
SOURCES 
,...,,v. i i,._.x.i environment description Functional schemata 
Partial solutions (local dependenc U 
trees) 
. . . .  I ~  - "* l  dependencu 
Other computational state uoLa --I relations 
- -  oon, o, ,,0 0o,o \] 
CONTROL 
f igure  3. A blackboard model fo r  dependency pars ing.  
221 
3.1 The blackboard-based cont ro l  s t ra tegy  fo r  
dependency pars ing 
For the format de f in i t ion  of the pars ing process we 
descr ibe the input sentence as a sequence 
(c (1 ) ,c (2 ) , . . . , c ( i -1 ) ,  c ( i ) ,  c ( i+ l ) , . . . , c (n ) )  of  word 
const i tuents .  With each const i tuent  c ( i )  there is  
assoc iated a set ( s ( i ,1 ) , . . . , s ( i ,m) )  of  funct iona l  
schemata. The general  pars ing s t ra tegy  fo r  each word 
const i tuent  c ( t )  can be modelled using • t rans i t ion  
network. During pars ing there ere f i ve  poss ib le  
computat ional  s ta tes  fo r  each const i tuent  c ( i ) :  
Sl The in i t ia l  s ta te .  One of  the schemata 
assoc iated with c t t )  is  ac t ivated .  
S2 Le f t  dependent•  ere searched fo r  c ( i ) .  
$3 c ( i )  is  wa i t ing  fo r  the bu i ld ing  of  the r ight  
context .  
1) A schema candidate s ( iek )  assoc iated with c ( t )  is  
ac t ivated ,  i .e .  the const i tuent  c ( t )  take •  the rote  
of a regent .  Fol lowing the environment descr ip t ion  in 
s ( i , k ) ,  dependents fo r  c ( i )  are searched from i t s  
immediate neighbourhood. Go to the step 2 with j • 
i -1 .  
2) The search of  le f t  dependents. There are two 
subcases: 
2a) There are no le f t  neighbours ( j  = 0),  none is  
expected fo r  c ( i ) ,  or c ( j )  ( j  < i )  ex i s ts  and is 
in the • ta ts  $3. 
Go to the step 3 with j = j+ l .  
2b) c ( j )  ( j  x i )  ex i s ts  and is  in the s ta te  SS. 
B inary  re la t ion  tes ts  are done. In the case o? a 
• ucces the l ipp ing  f (c ( i ) ,  c ( j ) )  -> c ( i ) '  takes 
p lace.  Repeat the • tap  2 with j - j -1  end c ( i )  = 
c t i ) , .  
S4 
S5 
Right dependent• are searched fo r  c ( i ) .  
The f ina l  s ta te .  The schema assoc iated with c ( i )  
has been fu l l y  matched and becomes inact ive ,  c ( i )  
is the head of  the completed (par t ia l )  dependency 
t ree .  
At any time, on ly  one schema is  ac t ive ,  i .e .  on ly  one 
const i tuent  c ( i )  may be in the s ta te  B2 or S4. Only s 
completed const i tuent  (one in the • ta le  S5) is  a l lowed 
to be bound as s dependent fo r  • regent .  There may be 
s number of  const i tuents  s imul taneous ly  in the s ta te  
S3. We ca l l  these pending const i tuent •  (implemented 
as a • tack  PENDING). 
3) Bu i ld ing  the r ight  context  of  the regent .  There 
are two subcases: 
3a) There ere no r ight  neighbours ( j  • n) or none 
is  expected fo r  c ( i ) .  Go to the • tap  5. 
3b) c ( j )  ( j  • i )  ex i s ts .  Go to the step 1 with 
c ( i )  : c ( i+ l )  and PENDING = push (c ( i ) ,  PEND%MG). 
4) The search of  r ight  dependents. B inary re la t ion  
tes ts  are done. in the case of  succes the mapping 
f (c ( i ) ,  c ( j ) )  -> c ( i )  ~ takes p lace.  Repeat the step 3 
with j = j+ l  and c ( i )  = c ( i ) ' .  
5) The f ina l  s ta te .  There are two subcases: 
The pars ing process • ta r ts  with c(1) •nd proceeds to 
the r ight .  In i t ia l l y  a l l  const i tuents  c (1 ) , . . , c (n )  
are in the • ta ts  e l .  A sentence is  welt formed i f  in 
the end of  the pars ing process the resu l t  i •  • • i ng le  
const i tuent  that  has reached the s ta te  S$ and conta in •  
a l l  o ther  const i tuents  bound In i t •  dependency t ree .  
For each const i tuent  c ( i )  the pars ing process can be 
descr ibed by the fo l low ing  f ive  steps.  Parsing begins 
from the • tap  1 with i , k  = 1. 
5a) The environment descr ip t ion  has been matched. 
i f  there remains no unbound c ( j ) ' s  ( j  < i or j > 
i )  the sentence is parsed. I f  c ( i+ l )  ex i s ts  go to  
the step 1 with i = i+1. i f  c ( i+ l )  doesn ' t  ex i s t  
or the steps fo l lowed prev ious case returned a 
fa i lu re ,  go to the step 4 with c ( i )  • pop 
(PENDING). 
5b) The environment descr ip t ion  h • •  not been 
matched. Return a fa i lu re .  
2b 4 
. . . . . . . . . . .  
Figure 4. The t rans i t ion  network model of  the 
cont ro l  s t ra tegy .  
222 
3.2 The implementat ion of  the cont ro l  a t ra tegy  
The cont ro l  system has two leve ls :  the basic level  
employs a generat two-way automaton and the upper 
leve l  uses a blackboard system. There is a ctear  
correspondence between the grammar descr ip t ion  and the 
cont ro l  system: the two-way automaton makes local  
dec is ions  according to the b inary  re la t ions .  These 
local  dec is ions  are cont ro l led  by the blackboard 
system which u t i l i zes  the environment descr ip t ions  
wr i t ten  in the schemata. This two- leve l  cont ro l  model 
has cer ta in  advantages. The two-way automaton is  
computat iona l ty  e f f i c ient  in loca l  dec is ions .  On the 
other hand, the blackboard system is  able to u t i l i ze  
global  knowledge of  the input sentence. 
ChronoLogicat backt rack ing 
To account fo r  ambigu i t ies  there are three kinds of  
backtrack ing po ints  in the cont ro l  system. 
Backtracking may be done in regard to choice of 
dependency funct ions ,  homographic word forms, or 
assoc iated schemata. Backtracking is chrono log ica l .  
In our system a const i tuent  c ( | )  may conta in  several  
d i f fe rent  morphotact ic  in terpretat ions  of  a word form. 
Function backtrack ing takes place i f  there are several  
poss ib le  b inary  re la t ions  between a given const i tuent  
pa i r .  The precond i t ions  of  the schemata may a l low 
mul t ip le  schema candidates fo r  a given const i tuent .  
A l l  a l te rnat ives  are gone through one by one, i f  
necessary, in chrono log ica l  backtrack ing.  As a 
resu l t ,  the system may perform an exhaust ive search 
and produce a l l  poss ib le  so lu t ions .  
Register  fo r  tong-d is tance dependencies 
The recogn i t ion  of  poss ib le  fond-d is tant  dependencies 
is  done by the capture funct ion .  An element is  bound 
as a poss ib le  "d i s tant  member" in the context  where 
the capture funct ion  f i res .  An element is  a lso  moved 
to the spec ia l  reg is ter  fo r  s set o f  d i s tant  elements. 
The actual  b inding is  done by the d i s tant  funct ion  
from another schema. In chrono log ica l  backtrack ing 
a lso  d i s tant  b indings are undone. 
The s t ra tegy  of  local  dec is ions  cont ro l led  by g lobal  
knowledge of  the input sentence y ie lds  a s t rong ly  
data -dr iven ,  ta f t - to - r ight  and bottom-up parse whereby 
par t ia l  dependency t rees are bu i l t  proceeding from 
middle to out .  
3.3 EZANPLES 
To v |suat i ze  our d iscuss ion ,  a funct iona l  schema 
IntrllapNegVP is  descr ibed in F igure 5. A grammar 
wr i te r  has dec lared in WHEN-part that  R must be a 
t rans i t i ve  process verb in ac t ive  tense snd Imperat ive 
mood. In i t s  ta f t  context  there must be a negat ive 
verb in imperat ive mood and of  the textcat  form "E l "  
("NOT"). There is  one ob l igatory  dependency re ts t ion  
HegVerb. Adverb ia l s  may ex is t  mul t ip le  times. A 
grammar wr i te r  has wr i t ten  in clauses LEFT and RIGHT 
the le f t  and r ight  context  b inary  re la t ions  of  the 
regent .  A f te r  the schema has fu l l y  matched, the 
regent is  marked VerbP and features  PersonH and 
PersonP of  the dependent recognized as HegVerb are 
marked fo r  the regent .  
($CHEHA: lntrlmperNegVP 
WHEN (AND 
(R : ProcVerb Act Imper (NOT VerbTr)) 
(Le f t  = 'E% Imper)) 
FUNCTIONS (OBLIGATORY NegVerb) 
(NULTIPLE AdverbiaL) 
(LEFT NegVerb Adverbial Connect) 
(RIGHT AdverbiaL) 
)lARK (R : -  VerbP (RecNegVerb (PersonP PersonH))) 
) 
F igure S. A funct iona l  schema lntrlmperMegVP 
A fu t t  t race  of  pars ing the sentence "~t i  eksy 
mets~ss~l" (Don' t  get los t  in s fo res t )  appears in 
F igure 6. Parsing s tar ts  from the ta f t  Can arrow).  
Next t ins  ind icates  the se lected schema and dependents 
that  are tes ted .  The f i r s t  word " i tS"  is  ident i f ied  
ms a negat ive imperat ive verb with no dependents 
(schema DummyVP ok) .  The imperat ive verb "eksy" ( to  
get los t )  is then t r ied  by the schema 
IntrlmperNegVP. The b inary  re la t ion  NegVerb holds 
between the two verbs,  and the corresponding 
dependency funct ion  ad jo ins  them. The othen funct ions  
fa i l .  Dependents are searched next from the r ight  
context .  The cont ro l  proceeds to the word "mets~ss~" 
( fo res t ) .  For that  word no dependents are found and 
the system returns  to the unf in i shed  regent "eksy" .  
The schema IntrlmperNegVP has onty two re la t ions  
remaining: Connect and Adverb|at .  The word 
"nets~ss~" is  bound as an adverb ia l .  The schema has 
been fu l l y  matched and the Input sentence is 
complete ly  parsed. 
223 
> i t~ eksy mets iss i l  
NORFO: 
( ( ( ( " i t i "  EI Verb Act Imper Pr S /2P / ) ) )  
( ( ( "eksy"  EKSY~ Verb Act Imper Pr S /2P / ) ) )  
( ( ( "mets i ss i "  METSX Noun SG In ) ) )  
( ( ( " ! "  EXCLAMATION)))) 
:> ( i t i )  (eksy) (mets iss i )  
Schema: OummyVP n i t  
OummyVP ok 
( i t i )  :> (eksy) (mets iss i )  
Schema: lntrlmperNegVP (Negverb Adverbial  Connect) 
NegVerb ok 
Adverbial fa i led  
Connect fa i led  
( ( i t i )  eksy) => (mets iss i )  
Schema: Tr iv iatSP (DefPart R) 
DefPart fa i led  
Tr iv ia lSP ok 
returning to unf inished const i tuent . . .  
( ( i l i )  eksy) <= (mets iss i )  
Schema: IntrlmperNegVP (Connect Adverbia l )  
Adverbial  ok 
IntrlmperNegVP ok 
=> ( ( i t i )  eksy (mets tss i ) )  PARSED 
The parse took 0.87 seconds CPU-time on VAX-11/751. 
Figure 6. An example of parsing.  
The second example shows how our parser solves the 
fo l lowing sentence (adopted from Karttunen, 1986b) 
which has a tong-distance dependency: 
En mini tenn is t i  a|o ruveta petaamaan. 
not I tennis intend s tar t  play 
I do not intend to s ta r t  to play tennis .  
The object  of the subordinated in f in i t i v ia t  clause 
( " tenn is t i " )  has been raised in the main clause thus 
creat ing a gap. The parse t ree  of the sentence is in 
Figure 7. 
aid 
Predicate 
I 
. . . . . . . . .  • . . . . . . . . .  • . . . . . . . . .  ÷ . . . . . . . . .  • 
I I I I 
en mini tenni$tl ruvetl 
Negation Subject Distant(I) Object 
i 
i 
peteamaen 
Adverbial 
I 
. . . . . . . . . .  + 
I 
tennilti 
Object(I) 
Figure 7. An example of a tong-distance dependency. 
In the parsing process the schema NO-VP has matched 
the environment of the verb "a|o"  ( intend)  and the 
schema O-LocativeVP of the verb "peLaamaan" (p lay) .  
(SCHEMA: NO-VP 
ASSUME (R :, Negative) 
FUNCTIONS (OBLIGATORY Object Negation) 
(KULTIPLE Adverb|at OistentMember) 
(LEFT Auxiliary Negation Object Adverbial Connector) 
(RIGHT Object Adverbial Cor~'na) 
(CAPTURE OistantNember) 
CLAUSE READY 
CHEC~ (VerbObjCongr Negation Object) 
MARK (R := ProcVP Predicate (Negation (PersonP PersonN))) 
) 
(SCHEHA: 
FUNCTIONS 
MARK 
) 
O-LocativeVP 
(OBLIGATORY Object) 
(HULTIPLE Adverbial OistentNember) 
(RIGHT Object Adverbial) 
(LEFT Object Adverbiat) 
(CAPTURE P|stantRember) 
(DISTANT Object Adverb|it) 
(R :s LocetlveVP Pred|cete) 
The schema NO-VP has captured the word " tenn is t i "  as a 
DistantNember. The schema O-LocattveVP has Later on 
bound i t  as a removed Object.  
4 COl iPARISON 
The not ion of un i f i ca t ion  has recent ly  emerged as a 
common descr ip t ive  device in many L ingu is t i c  theor ies 
Like FUG, PATR-\[\[ and HPSG (Shieber 1986). Another 
popular approach has been to apply a t t r ibute  grammars 
o r ig ina l ly  developed as a theory for  formal Languages 
(gnuth 1968). LFG and OCG can be viewed as a t t r ibute  
grammar systems. The trend has been towards s t r i c t ly  
dec la ra t ive  descr ipt ions  of syntact i c  s t ruc ture .  
Syntact ic  rules are of ten expressed in the form of 
complex feature  sets .  
Our ADP system also uses features ,  but d i f fe rs  both 
from the un i f i ca t ion -based  approach and a t t r ibute  
grammar approach. The basic d i f fe rence  is ,  of course, 
that  there is ne i ther  un i f i ca t ion  nor correspondence 
to a t t r ibute  grammars in our system. We use a pattern 
matching via binary re la t ion  tes ts .  Through 
blackboard approach we have gained a f lex ib le  cont ro l .  
Blackboard system can convenient ly  take into account 
global knowledge of the sentence. In our model 
dependents become "hidden" from fur ther  processing 
once they have been found. A regent so le ly  represents 
the const i tuents  hanging below. This makes the 
parsing process simpler as the number of const i tuents  
decreases during parsing. There ere, however, some 
cases where some informat ion must be raised from the 
dependent to the regent (e .g .  from conjuncts to the 
con junct ion) ,  so that the regent could represent the 
whole const i tuent .  
224 
5 CONCLUSION 
In our system l ingu is t i c  knowledge and processing 
mechanisms are separated. Structura l  information of 
the funct ional  schemata is interpreted by the 
blackboard scheduler as control  knowledge, according 
to which dependencies are searched. The d i f ference 
between local and global decis ions is c lear ly  
separated. Locat decis ions cont ro l led  by global  
knowledge of the input sentence has made i t  poss ib le 
to f ind  so lut ions for problems that are d i f f i cu l t  to 
solve in t rad i t iona l  parsing systems. ADP f inds a l l  
so lut ions for  an ambiguous sentence. Augmented search 
process covers tong-distance dependencies as wel l .  
D i f fe rent  c r i te r ia  have been expressed for grammar 
formalisms (Winogrsd 1983, Karttunen 1986a): 
persp icu i ty ,  nond i rec t ions t i ty ,  correspondence with 
meanings, mul t ip le  dimensions of pat tern ing,  
order-independency, declarat iveness and monotontc~ty. 
Our model rates welt in most of these c r i te r ia .  
Persp icu i ty ,  correspondence with meanings and 
dectarsttveness are sa t i s f ied  in the way the 
funct ional  schemata describe local  environments for  
regents. The funct ional  descr ip t ion  is monotonic and 
al lows mul t ip le  dimensions of pat tern ing .  
There is s process of parsing as s s ta r t ing  point  in 
the grammar spec i f i ca t ion ,  so i t  lacks 
nond i rec t ionat i ty .  The weakest point  is the 
order-dependent contro l  mechanism, a lbe i t  the grammar 
descr ip t ion  is order- lndependent.  Plans for  the 
general,  order-independent control  s t rategy have been 
done. 
ADP has been implemented in FranzLisp. Experiments 
w~tn a non- t r iv ia l  set of Finnish sentence structures 
has been performed on VAX 11/751 system. An average 
time for  parsing a s ix  word sentence is between 0.5 
and 2.0 seconds for  the f i r s t  parse. At the moment 
the grammar descr ip t ion  contains common sentence 
structures qu i te  wel l .  There are 66 binary re la t ions ,  
188 funct ional  schemata and 1800 lexicon ent r ies .  The 
lexicon of the morphological analyzer contains 35 000 
words. 
ACKNOWLEDGENENT$ 
This research has been supported by SlTRA Foundation. 
REFERENCES 
Hayes-Roth, F., Waterman, D. and Lenat, D. 1983 
Buitding Expert Systems. Addison-Wesley Publ ishing 
Company, Reading. 
Jappinen, H. and Ytitammi, N. 1986 Associat ive Nodel 
of Norphotogicat Analysis:  an Empirical Inquiry .  
Computational L ingu is t i cs ,  Volume 12, Number 4, 
October-December 1986, pp. 257-272. 
Jappinen, H., Lehtola, A. and Vatkonen, K. 1986 
Functional Structures for Parsing Dependency 
Constraints.  Proceedings of COLING861ACL, Bonn, pp. 
461-463. 
Karttunen, L. and Kay, H. 1985 Parsing in a free 
word order Language. In Dowry, Karttunen and Zwicky 
(Eds.) ,  Natural Language Parsing, Cambridge Un ivers i ty  
Press. 
garttunen, L. 1986a The Relevance of Computational 
L ingu is t i cs .  A paper presented at the Conference on 
Finnish L ingu is t i cs .  
Karttunen, L. 1986b Radical Lexicatism. A paper 
presented at a Conference on A l te rnat ive  Conceptions 
of Phrase Structure,  New York. 
Knuth, D. 1968 Semantics of Context-Free Languages. 
Nathematicat Systems Theory 2(1968a), pp. 127-145. 
Lehtots, A., J ippinen, H. and Netimarkka, E. 1985 
Language-based Environment for  Natural Language 
Parsing. Proceedings of the 2nd European Conference 
of ACL, Geneva, pp. 98-106. 
Lehtots, A. and Vatkonen, K. 1986 Knowledge 
Representation Formalisms and Netsdescr ipt ions for the 
In terpreta t ion  of Finnish. Proceedings of the Third 
Finnish Symposium on Theoret ical  Computer Science, pp. 
64-87. 
Netimarkka, E., J ipptnen, H., and Lehtots, A. 1984 
Parsing an in f lec t iona l  free word order language with 
two-way f in i te  automata. Proceedings of the 6th 
European Conference on Ar t i f i c ia l  In te l l igence ,  Piss, 
pp. 167-176. Also in O'Shea, T. tEd.) ,  Advances in 
Ar t i f i c ia l  In te l l igence ,  North-Hol land. 
N i i ,  N. 1986 Blackboard Systems: The Blackboard 
Nodet of Problem Solving and the Evolut ion of 
gtackboard Arch i tec tures .  The AI Nagazine, Summer 
1986, pp. 38-53, August 1986, pp. 82-106. 
Shieber, S. 1986 An Int roduct ion  to Uni f icat ion-Based 
Approaches to Grammar. CSLI Lecture Notes Series, No. 
4. 
Vatkonen, K. and Lehtola,  A. 1986 Blackboard Control 
for  Dependency Parsing. A paper presented in Nordisk 
seminar am maskinoversattetse,  9.-11.10 1986, 
Un ivers i ty  of Copenhagen, 12 p. ( in  p r in t ) .  
Winograd, T. 1983 Language as a Cognit ive Process. 
Volume I :  Syntax. Addison-Wesley. 
225 
