Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 1207–1216,
Lisbon, Portugal, 17-21 September 2015.
c
©2015 Association for Computational Linguistics.
Semi-supervised Chinese Word Segmentation based on Bilingual
Information
Wei Chen
Institute of Automation,
Chinese Academy of Sciences,
Beijing, 100190, China
wei.chen.media@ia.ac.cn
Bo Xu
Institute of Automation,
Chinese Academy of Sciences,
Beijing, 100190, China
xubo@ia.ac.cn
Abstract
This paper presents a bilingual semi-
supervised Chinese word segmentation
(CWS) method that leverages the nat-
ural segmenting information of English
sentences. The proposed method in-
volves learning three levels of features,
namely, character-level, phrase-level and
sentence-level, provided by multiple sub-
models. We use a sub-model of condi-
tional random fields (CRF) to learn mono-
lingual grammars, a sub-model based on
character-based alignment to obtain ex-
plicit segmenting knowledge, and anoth-
er sub-model based on transliteration sim-
ilarity to detect out-of-vocabulary (OOV)
words. Moreover, we propose a sub-model
leveraging neural network to ensure the
proper treatment of the semantic gap and
a phrase-based translation sub-model to s-
core the translation probability of the Chi-
nese segmentation and its corresponding
English sentences. A cascaded log-linear
model is employed to combine these fea-
tures to segment bilingual unlabeled data,
the results of which are used to justify the
original supervised CWS model. The eval-
uation shows that our method results in su-
perior results compared with those of the
state-of-the-art monolingual and bilingual
semi-supervised models that have been re-
ported in the literature.
1 Introduction
Chinese word segmentation (CWS) is generally
accepted to be a necessary first step in most Chi-
nese NLP tasks because Chinese sentences are
written in continuous sequences of characters with
no explicit delimiters (e.g., the spaces in English).
Many studies have been conducted in this area, re-
sulting in extensive investigation of the problem of
CWS using machine learning techniques in recent
years. However, the reliability of CWS that can
be achieved using machine learning techniques re-
lies heavily on the availability of a large amount of
high-quality, manually segmented data. Because
hand-labeling individual words and word bound-
aries is very difficult (Jiao et al., 2006), producing
segmented Chinese texts is very time-consuming
and expensive. Although a number of manual-
ly segmented datasets have been constructed by
various organizations, it is not feasible to com-
bine them into a single complete dataset because
of their incompatibility due to the use of various
segmenting standards. Thus, it is difficult to build
a large-scale manually segmented corpus, and the
resulting lack of such a corpus is detrimental to
further enhancement of the accuracy of CWS.
To address the scarcity of manually segment-
ed corpora, a number of semi-supervised CWS
approaches have been intensively investigated in
recent years. These approaches attempt to ei-
ther learn the predicted label distribution (Jiao et
al., 2006) or extract mutual information ((Liang
et al., 2005); (Sun and Xu, 2011); (Zeng et al.,
2013a)) from large-scale monolingual unlabeled
data to update the baseline model (from manual-
ly segmented corpora). In addition to these tech-
niques, several co-training approaches (Zeng et
al., 2013b) using character-based and word-based
models have also been employed. However, be-
cause monolingual unlabeled data contain limit-
ed natural segmenting information, in most semi-
supervised methods, the objective function tend-
s to be optimized based on the personal experi-
ence and knowledge of the researchers. This prac-
tice means that these methods can typically yield
high performance in certain specialized domain-
s, but they lack generalizability. In contrast with
these methods, we propose to leverage bilingual
unlabeled data, i.e., a Chinese-English corpus with
sentence alignment. Because English sentences
1207
Figure 1: The examples of different segmentation
on the same Chinese sentences guided by the En-
glish sentences
are naturally segmented, extracting information
from a bilingual corpus is a much more objective
task. As the example presented in Fig 1 shows,
the English sentences that correspond to Chinese
text can easily help guide better segmentation, and
thus, the learning of segmenting information from
bilingual data is a very promising approach.
In this paper, to obtain high-quality segment-
ing information from bilingual unlabeled data, we
leverage multilevel features using the following
steps: first, we integrate character-level features
calculated using a conditional random field (CRF)
model, which is used to capture the monolingual
grammars. Then, we employ a statistical align-
er to perform character-based alignment. Given
the results of this character-based alignment, we
apply several phrase-level features to extract ex-
plicit and implicit segmenting information: (1) we
use two types of English-Chinese co-occurrence
features (one-to-many and many-to-many) to learn
the explicit segmenting information of the English
sentences, (2) we use the transliteration similarity
feature to detect out-of-vocabulary (OOV) words
using a phrase-based translation model, and (3) we
employ a neural network to calculate the seman-
tic gap between the Chinese and English words
to ensure that the Chinese segmentation follows
the semantic meanings of the corresponding En-
glish sentences as closely as possible. Finally, we
employ another phrase-based translation model to
perform a sentence-level calculation of the trans-
lation probability of the Chinese segmentation and
its corresponding English sentences. After obtain-
ing these multilevel features, we normalize them
and combine them into two log-linear models in
a cascaded structure, which is illustrated in Fig
2. Finally, we segment the bilingual unlabeled da-
ta using the proposed model and use the segmen-
tation of those data to justify the original super-
Figure 2: The structure of cascaded log-linear
model with multilevel features
vised CWS model, which was trained on a stan-
dard manually segmented corpus.
In fact, several semi-supervised CWS methods
have previously been proposed that leverage bilin-
gual unlabeled data ((Xu et al., 2008); (Chang
et al., 2008); (Ma and Way, 2009);(Chung et al.,
2009); (Xi et al., 2012)). However, most were de-
veloped for statistical machine translation (SMT),
causing them to focus on decreasing the perplex-
ity of the bilingual data and the word alignmen-
t process rather than on achieving more accurate
segmentation. These methods achieve significan-
t improvement in SMT performance but are not
very suitable for common NLP tasks because in
many situations, they ignore the standard gram-
mars to satisfy the needs of SMT. By contrast,
we employ various types of features to capture
both monolingual standard grammars and bilin-
gual segmenting information, which allows our
semi-supervised CWS model to be very efficient
at other NLP tasks and endows it with higher gen-
eralizability.
Our evaluation also shows that our method sig-
nificantly outperforms the state-of-the-art mono-
lingual and bilingual semi-supervised approaches.
2 Related Work
First, we review related work on monolingual
supervised and semi-supervised CWS methods.
Then, we review bilingual semi-supervised CWS.
2.1 Monolingual Supervised and
Semi-supervised CWS Methods
Considerable efforts have been made in the NLP
community in the study of Chinese word segmen-
tation. The most popular supervised approach
treats word segmentation as a sequence labeling
problem, as first proposed by (Xue et al., 2003).
Most previous systems have addressed this task
using linear statistical models with carefully de-
signed features ((Peng et al., 2004); (Asahara et
1208
al., 2005); (Zhang and Clark, 2007); (Zhao et
al., 2010)). However, the primary shortcoming
of these approaches is that they rely heavily on a
large amount of labeled data, which is very time-
consuming and expensive to produce. Thus, the s-
cale of available manually labeled data has placed
considerable limitations on the further enhance-
ment of supervised CWS methods.
To address this problem, a number of semi-
supervised CWS approaches have been intensive-
ly investigated in recent years. For example,
(Sun and Xu, 2011) enhanced their segmenta-
tion results by interpolating statistics-based fea-
tures derived from unlabeled data into a CRF mod-
el. (Zeng et al., 2013a) introduced a graph-based
semi-supervised joint model of Chinese word seg-
mentation and part-of-speech tagging and regular-
ized the learning of a linear CRF model based on
the label distributions derived from unlabeled da-
ta. However, because monolingual unlabeled data
lack natural segmenting information, most previ-
ous semi-supervised CWS methods have required
certain assumptions to be made regarding their ob-
jective functions based on the researchers’ person-
al experiences. By contrast, we leverage bilingual
unlabeled data that contain the natural segmenta-
tion that is present in English sentences and can
therefore extract linguistic knowledge without any
manual assumptions or bias.
2.2 Bilingual Semi-supervised CWS Methods
Some previous work ((Xu et al., 2008); (Chang
et al., 2008); (Ma and Way, 2009);(Chung et al.,
2009); (Xi et al., 2012)) has been performed on
leveraging bilingual unlabeled data to achieve bet-
ter segmentation, although most such studies have
focused on statistical machine translation (SMT).
These approaches leverage the mappings of indi-
vidual English words to one or more consecutive
Chinese characters either to construct a Chinese
word dictionary for maximum-matching segmen-
tation (Xu et al., 2004) or to form a labeled dataset
for training a sequence labeling model (Peng et al.,
2004). (Zeng et al., 2014) also used such map-
pings to bias a supervised segmentation model to-
ward a better solution for SMT. However, because
most of these approaches focus on SMT perfor-
mance, they emphasize decreasing the perplexity
of the bilingual data and word alignment rather
than improving the CWS accuracy. Thus, they
sometimes ignore the standard grammars during
segmentation in favor of satisfying the needs of
SMT, thereby causing these methods to be rather
unsuitable for other NLP tasks. By contrast, we
propose to use various types of features to capture
syntactic and semantic information and a cascaded
log-linear model to maintain balance between the
monolingual grammars and the bilingual knowl-
edge.
3 Multilevel Features
In this section, we describe the three levels of fea-
tures used in our approach. We propose to use
character-level features to capture monolingual
grammars and phrase-level and sentence-level fea-
tures to obtain bilingual segmenting information.
Moreover, we describe a cascaded log-linear mod-
el by proposing both inner and outer log-linear
models.
3.1 Character-level Feature
The conditional random field (CRF) (Lafferty et
al., 2001) model was first used for CWS tasks by
(Xue et al., 2003) who treated the CWS task as a
sequence tagging problem and demonstrated this
model’s effectiveness in detecting OOV words.
In this paper, we score the character-level fea-
ture in the same manner defined by (Xue et al.,
2003). For the jth character c
j
in the sentence
c
J
1
= c
1
...c
J
, the score can be calculated as fol-
lows:
f
CRF
(j) =
?
k
?
k
f
k
(y
j?1
, y
j
, c
J
1
, j) (1)
where f
k
(y
j?1
, y
j
, c
J
1
, j) is a feature function
and ?
k
is a learned weight that corresponds to the
feature f
k
. j represents the index of the character
in the sentence. y
j?1
and y
j
represent the tags of
the previous and current characters, respectively.
We do not introduce the CRF-based CWS mod-
el in detail here, but more information can be ob-
tained from (Lafferty et al., 2001) and (Xue et al.,
2003).
3.2 Phrase-level Features
In this section, we first describe English-Chinese
character-based alignment. Then, we propose sev-
eral phrase-level features to obtain explicit and im-
plicit segmenting information from the character-
based alignment. Finally, we describe the in-
ner log-linear model that is used to combine the
character-level and phrase-level features.
1209
3.2.1 English-Chinese Character-based
Alignment
To avoid introducing omissions and mistakes in-
to the linguistic information in the initial segmen-
tations of the bilingual data, we perform a statis-
tical character-based alignment: First, every Chi-
nese character in the bitexts is separated by white
spaces so that individual characters are recognized
as unique /words0 or alignment targets. Then,
they are associated with English words using a s-
tatistical word aligner.
By representing the English and Chinese sen-
tences as e
I
1
= e
1
e
2
...e
I
and c
J
1
= c
1
c
2
...c
J
, re-
spectively, where e
i
and c
j
represent single ele-
ments of the sentences, we define their alignment
as a
K
1
, of which each element is a span a
k
=<
s, t > and represents the alignment of the English
word e
s
with the Chinese character c
t
. Then, the
corpus of unlabeled bilingual data can be repre-
sented as the set of sentence tuples <e
I
1
, c
J
1
, a
K
1
>
To obtain the character-based alignment, we
employ an open-source toolkit Pialign
1
((Neubig
et al., 2011); (Neubig et al., 2012)) which us-
es Bayesian learning and inversion transduction
grammars.
3.2.2 Features Obtained from the
Character-based Alignment
Given the English-Chinese character-based align-
ment a
K
1
, we extract several phrase-level features
to optimize the segmentation. For the jth char-
acter in c
J
1
, we assume that one of the segmen-
tations of the substring c
j
1
can be represented as
w
N+1
1
= w
1
w
2
w
3
...w
N+1
= c
j
1
1
c
j
2
j
1
+1
...c
j
j
N
+1
.
Then, we calculate the scores of each Chinese
word w
n
= c
j
n
j
m
(j
m
= j
n?1
+ 1) in w
N+1
1
us-
ing the following features.
English-Chinese One-to-Many Alignment
To evaluate the probability that a sequence of
Chinese characters c
j
n
j
m
= c
j
m
c
j
m
+1
...c
j
n
should
be combined into a word w
n
based on the corre-
sponding English sentence, we integrate the fea-
ture of English-Chinese one-to-many alignmen-
t (one English word is aligned with multiple Chi-
nese characters). First, for any English word e
i
in
e
I
1
, the phrase tuple < e
i
, c
j
n
j
m
> can be defined as
an aligned One-to-Many phrase tuple if it satisfies
the following conditions:
(1) < i, j
m
> ? a
K
1
, < i, j
n
> ? a
K
1
(2) ?j
?
/? [j
m
, j
n
], < i, j
?
>/? a
K
1
1
http://www.phontron.com/pialign/
(3) ?i
?
6= i§?j? ? [j
m
, j
n
], < i
?
, j
?
>/? a
K
1
Then, for any phrase tuple < e
i
, c
j
n
j
m
> that sat-
isfies these conditions, the span < i, j
m
, j
n
> is
defined as a One-to-Many span and as a member
of the set A
One
.
Thus, for each span < i, j
m
, j
n
>, the One-to-
Many score can be calculated as follows:
s(< i, j
m
, j
n
>) =
{
t(c
j
n
j
m
|e
i
) if < i, j
m
, j
n
>? A
One
0 else
(2)
where t(c
j
n
j
m
|e
i
) represents the translation proba-
bility of the phrase tuple c
j
n
j
m
|e
i
.
Finally, the score for the feature of English-
Chinese One-to-Many alignment for w
n
= c
j
n
j
m
is
derived as follows:
f
One?to?Many
(n) = argmax
i?[1,I]
s(< i, j
m
, j
n
>) (3)
English-Chinese Many-to-Many Alignment
The second phrase-level feature, called English-
Chinese Many-to-Many Alignment (multiple En-
glish words are aligned with multiple Chinese
characters), is used to evaluate the probability that
a space should be inserted between c
n
and c
n+1
.
Similar to One-to-Many alignment, for any se-
quence of English words e
i
2
i
1
and the Chinese word
w
n
= c
j
n
j
m
, the phrase tuple < e
i
2
i
1
, c
j
n
j
1
> is de-
fined as an aligned Many-to-Many phrase tuple if
it satisfies the following conditions:
(1) j
1
? j
m
, and j
1
is the beginning character
of a word in w
n
1
(1) < i
1
, j
1
>? a
K
1
, < i
2
, j
m
>? a
K
1
(2) ?j
?
/? [j
1
, j
m
], ?i
?
? [i
1
, i
2
], < i
?
, j
?
>/? a
K
1
(3) ?j
?
? [j
1
, j
m
], ?i
?
/? [i
1
, i
2
], < i
?
, j
?
>/? a
K
1
Then, for any phrase tuple< e
i
2
i
1
, c
j
n
j
m
> that sat-
isfies these conditions, the span < i
1
, i
2
, j
1
, j
n
>
is defined as a Many-to-Many span and as a mem-
ber of the set A
Many
.
Thus, for each span < i
1
, i
2
, j
1
, j
n
>, the
Many-to-Many score can be calculated as follows:
s(< i
1
, i
2
, j
1
, j
n
>) =
?
??
??
t(c
j
n
j
1
|e
i
2
i
1
)
if < i
1
, i
2
, j
1
, j
n
>? A
Many
0 else
(4)
where t(c
j
n
j
1
|e
i
2
i
1
) represents the translation proba-
bility of the phrase tuple < e
i
2
i
1
, c
j
n
j
1
>.
1210
Finally, the score for the feature of English-
Chinese Many-to-Many alignment for w
n
= c
j
n
j
m
is derived as follows:
f
Many?to?Many
(n) = argmax
i
1
?[1,I]i
2
?[i
1
,I]j
1
?j
m
s(i
1
, i
2
, j
1
, j
n
)
(5)
Transliteration Feature
To account for named entities (NEs), which suf-
fer from sparsity and thus make it difficult to cal-
culate the probabilities discussed above, we intro-
duce a transliteration feature to evaluate the simi-
larities between the pronunciations of Chinese and
English words because many NEs are translated
via transliteration. To perform this task, we first
introduce an initial NE dictionary and convert each
dictionary item—for example, we convert ”Ow
d/Alice” into ”ai l i s i/a l i c e” —by transform-
ing the Chinese word into its pronunciation (rep-
resented by the function F
py
(·)) and splitting the
English word into its constituent letters (represent-
ed by the function F
let
(·)). Then, we train two
phrase-based translation models (Chinese-English
and English-Chinese) on the data obtained from
the converted NE dictionary.
Specifically, we apply two standard log-linear
phrase-based SMT models. The GIZA++ align-
er is adopted to obtain word alignments (Och
and Ney, 2000) from the converted NE dictio-
nary. The heuristic strategy of grow-diag-final-and
(Koehn et al., 2003) is used to combine the bidi-
rectional alignments to extract phrase translations
and to reorder tables. A 5-gram language mod-
el with Kneser-Ney smoothing is trained using S-
RILM (Stolcke et al., 2002) on the target language.
Moses (Koehn et al., 2007) is used as a decoder.
Minimum error rate training (MERT) (Och et al.,
2003) is applied to tune the feature parameters on
the development dataset.
Given these two phrase-based translation mod-
els, we calculate each span < i, j
m
, j
n
> in A
One
for the Chinese word w
n
using the following for-
mula:
S
tr
(< i, j
m
, j
n
>) = S
ch?en
(< i, j
m
, j
n
>)
+S
en?ch
(< i, j
m
, j
n
>)
(6)
where S
ch?en
(<i, j
m
, j
n
>) = D
Lev
(F
let
e
i
,
PT
ch?en
(F
py
(c
j
n
j
m
))) means that the pronuncia-
tion conversion in the Chinese-English direction
is performed as follows: First, the English word
e
i
is split into its constituent letters; Second, the
sequence of Chinese characters c
j
n
j
m
is converted
into its pronunciation; Third, this pronunciation is
input into the Chinese-English phrase-based trans-
lation model, and the corresponding translation re-
sult is obtained; And finally, the Levenshtein dis-
tance between the English letters and the transla-
tion result is returned.
S
en?ch
(<i, j
m
, j
n
>) can be calculated in ex-
actly the same way.
We set any span that does not belong to A
One
to zero, and the transliteration feature score of a
word w
n
= c
j
n
j
m
is derived as follows:
f
transliteration
(n) = argmax
i?[1,I]
S
tr
(< i, j
m
, j
n
>) (7)
English-Chinese semantic gap feature
To guarantee that the semantic meanings of the
Chinese segmentation match those of the corre-
sponding English sentences as closely as possible,
we propose to use a feature based on the English-
Chinese semantic gap to ensure the retention of se-
mantic meaning during the segmentation process.
First, we pre-train word embeddings using the
open-source toolkit Word2Vec (Mikolov et al.,
2013) on the Chinese (segmented using character-
level features only) and English sentences sepa-
rately, thereby obtaining the vocabularies V
ch
and
V
en
and their corresponding embedding matrixes
L
ch
? R
n×|V
ch
|
andL
en
? R
n×|V
en
|
. Given a Chi-
nese word w
n
with an index i in the vocabulary, it
is then straightforward to retrieve the word’s vec-
tor representation via simple multiplication with a
binary vector d that is equal to zero at all positions
except that with index i:
X
i
= L
ch
d
i
? R
n
(8)
Because the word embeddings for the two lan-
guages (L
ch
and L
en
) are learned separately and
located in different vector spaces, we suppose that
a transformation exists between these two seman-
tic embedding spaces. Thus, we collect all the
One-to-Many phrase tuples < e
1
, c
j
2
j
1
> that sat-
isfy e
1
? V
en
and c
j
2
j
1
? V
ch
from the entire corpus
of bilingual data. Then, we insert the word embed-
ding tuple of each One-to-Many phrase tuple into
the set A
embed
. Let us consider a word embedding
tuple < p
s
, p
t
> in A
embed
as an example. We
define a bidirectional semantic distance using the
parameter ? as follows:
1211
Esem
(p
s
, p
t
; ?) = E
sem
(p
s
|p
t
, ?) + E
sem
(p
t
|p
s
, ?) (9)
Here, E
sem
(p
s
|p
t
, ?) = E
sem
(p
t
, f(W
ch
en
p
s
+
b
ch
en
)) represents the transformation of p
s
and is
performed as follows: We first multiply a parame-
ter matrix W
ch
en
by p
s
, and after adding a bias term
b
ch
en
, we apply an element-wise activation function
f = tanh(·). Finally, we calculate their Euclidean
distance:
E
sem
(p
s
|p
t
, ?) =
1
2
||p
t
? f(W
ch
en
p
s
+ b
ch
en
)||
2
(10)
E
sem
(p
t
|p
s
, ?) can be calculated in exactly the
same way.
Given the definition of the semantic distance of
each word-embedding tuple inA
embed
, we wish to
minimize the following objective function:
J =
?
<p
s
,p
t
>?A
embed
E
sem
(p
s
, p
t
; ?) (11)
We apply the Stochastic Gradient Descent (S-
GD) algorithm to optimize each parameter and ul-
timately obtain the optimized parameters ?
?
.
Using ?
?
, we can calculate the semantic gap for
any possible span for w
n
, such as < i, j
m
, j
n
>,
as follows:
S
gap
(< i, j
m
, j
n
>) =
?
?
??
?
??
1
E
sem
(p
?
s
|p
?
t
,?
?
)
if e
i
? V
en
c
j
n
j
m
? V
ch
< i, j
m
, j
n
>? A
One
0 else
(12)
where p
?
s
and p
?
t
are the word vector representation
of e
i
and c
j
n
j
m
, respectively. Thus, the semantic gap
feature score of the word w
n
= c
j
n
j
m
is derived as
follows:
f
sem
(w
n
) = argmax
i?[1,I]
S
gap
(< i, j
m
, j
n
>) (13)
3.2.3 Normalization and the Inner
Log-Linear Model
Because the output scores of each sub-model de-
scribed above are not probabilistic and they vary
by orders of magnitude, we must first normalize
the output scores of each sub-model. After nor-
malization, the scores have means and standard
deviations of zero. We represent the normalization
function by Norm(·).
Thus, for the substring c
j
1
(j ? [1, J)) in c
J
1
of
the sentence tuple <e
I
1
, c
J
1
, a
K
1
>, assuming that
one of its candidate segmentations is w
N+1
1
=
w
1
w
2
w
3
...w
N+1
= c
j
1
1
c
j
2
j
1
+1
...c
j
j
N
+1
, the feature
score of the inner log-linear model is derived as
follows:
f
inner
=
?
j
?
?[1,j]
Norm(f
CRF
(j
?
))+
?
1
?
n?[1,N+1]
(
?
k
Norm(f
k
(n)))
(14)
where f
k
(n) represents the phrase-level features.
Then, we tune the weight ?
1
from 0 to 1 in equal
increments of 0.1 to optimize its value.
3.3 Sentence-level Features
In this section, we describe the sentence-level fea-
tures calculated using the phrase-based translation
model and the outer log-linear model that is used
to combine the sentence-level features with the
features in the inner log-linear model.
3.3.1 Features Obtained from the
Phrase-based Translation Model
Let us consider the last character c
J
in c
J
1
and as-
sume that its candidate segmentation (according
to the inner log-linear model only) is w
N+1
1
=
w
1
w
2
w
3
...w
N+1
. We now add a sentence-level
feature to incorporate into the inner log-linear
model. This sentence-level feature is obtained us-
ing a phrase-based translation model. We segmen-
t the Chinese sentences from the bilingual unla-
beled data using character-level features only and
train a phrase-based translation model on the bilin-
gual data that is similar to the phrase-based trans-
lation model used for the transliteration features.
Unlike the usage of the phrase-based translation
model in the case of the transliteration features,
here, we input both the source and target sentences
and achieve the output of translation probability.
Thus, we perform a force decoding for the sen-
tence tuple <w
N+1
1
, e
I
1
> and obtain the set of de-
coding paths P(w
N+1
1
), where each element acts
as a decoding path that can translate w
N+1
1
into
e
I
1
. Finally, we define the sentence-level feature
score of <w
N+1
1
, e
I
1
> as follows:
1212
fsent
(w
N+1
1
) = argmax
p(w
N+1
1
)?P (w
N+1
1
)
F
trans
(p(w
N+1
1
))
(15)
where F
trans
(·) returns the translation score of
the given decoding path based on the phrase-based
translation model.
3.3.2 The Outer Log-Linear Model
Finally, we normalize the sentence-level features
in a manner similar to that described previously
and construct the outer log-linear model by com-
bining the inner log-linear model and the sentence-
level features as follows:
f
outer
= f
inner
+ ?
2
Norm(f
sent
(w
N+1
1
)) (16)
Then, we also tune the weight ?
2
from 0 to 1 in
equal increments of 0.1 to optimize its value.
3.3.3 Decoder
A traditional viterbi beam search procedure is ap-
plied in the decoder to seek the segmented se-
quence with the highest score. Given a sentence
tuple < e
I
1
, c
J
1
, a
K
1
>, the decoding procedure will
proceed in a left-right fashion using a dynamic
programming approach. At each position j in the
sequence c
J
1
, we maintain a vector of size N to s-
tore the top N candidate segmentations of subse-
quence c
j
1
which are scored using the inner log-
linear model (j ? [1, J)) or the outer log-linear
model (j = J). Finally, we return the best seg-
mentation.
4 Justifying the Original CWS Model
We justify the original CWS model (the CRF-
based model trained on manually segmented data)
using the new CRF model trained on the segmen-
tation of unlabeled bilingual data. To avoid over-
weakening the influence of the small-scale manu-
ally segmented data, we again utilized a log-linear
model to balance their weights. The formula can
be described as follows:
f
new mono
=
?
k
1
?
k
1
f
k
1
(y
j?1
, y
j
, c
J
1
, j)
+?
3
?
k
2
?
k
2
f
k
2
(y
j?1
, y
j
, c
J
1
, j)
(17)
where ?
3
represents the weights of the second CR-
F model, which are set via minimum error rate
training using the developing dataset, and ?
k
i
(i
=1, 2) represents the learned weights of the fea-
tures of the CRF models.
5 The Datasets
In this paper, we conduct our experiments on the
corpus of People’s daily of 1998 (from January to
June) as the standard (manually segmented) train-
ing corpus, the corpus of Bakeoff-2 CWS evalua-
tion as the developing and testing dataset. As the
corpus of Bakeoff-2 is made up of several sets pro-
vided by different organizations, we only select t-
wo sets whose segmenting standards are similar to
the training corpus. For each set, we take 3000
sentences as the developing dataset and the others
as the testing dataset. The statistics of every set
and the standard training corpus are shown in Ta-
ble 1.
Data Set of sent. of words
Training 120K 7.28M
AS 708K 5.45M
PKU 19K 1.1M
Table 1: Statistics of training and testing datasets
Moreover, the bilingual unlabeled data is
formed by a large in-house Chinese-English par-
allel corpus (Tian et al., 2014). There are in total
2,215,000 Chinese-English sentence pairs crawled
from online resources, concentrated in 5 different
domains including laws, novels, spoken, news and
miscellaneous.
6 Experiments
In our evaluation, the F-score was used as the ac-
curacy measure. The precision p is defined as the
percentage of words in the decoder output that are
segmented correctly, and the recall r is the percent-
age of gold-standard output words that are correct-
ly segmented by the decoder. The balanced F- s-
core is calculated as 2pr/(p + r). We also report
the recall of OOV words in our experiments. In
the following, we refer to our methods as ”SLBD”
(segmenter leveraging bilingual data).
Initially, we evaluated state-of-the-art super-
vised CWS methods, i.e., those of (Peng et al.,
2004) (Peng); (Asahara et al., 2005) (Asahara);
(Zhang and Clark, 2007) (Z&C); (Zhao et al.,
2010) (Zhao), whose models are trained only on
manually segmented data. Moreover, we also e-
valuated the performance of our sub-models by
1213
methods
AS PKU
F OOV F OOV
Peng 91.6 52.5 91.1 59
Asahara 92.2 63.1 91.4 61.6
Z&C 92.9 69.9 91.6 67.9
Zhao 93.1 72 92.3 60.6
character-level 92.3 58.6 92.9 60.8
Inner log-linear 95.9 78.8 96.1 81
Outer log-linear 96.7 80.8 97.1 85
Table 2: Word segmentation performance of SLB-
D and supervised CWS methods[%]
segmenting the bilingual unlabeled dataset using
character-level features only, the inner log-linear
model (which includes character-level and phrase-
level features) and the outer log-linear model (the
full SLBD approach). After applying these three
segmentations using the different sub-models, we
trained the new CRF models on the results of the
three segmentations to justify the original CWS
model. The evaluation results for the supervised
CWS methods and the sub-models are presented
in Table 2.
It can be seen that we achieved significant im-
provement in performance when we combined the
character-level and phrase-level features in the in-
ner log-linear model, demonstrating that the pro-
posed phrase-level features can be used to effi-
ciently obtain bilingual segmenting information.
Moreover, the outer log-linear model achieves a
further enhancement, thereby demonstrating that
the sentence-level features can be used to effec-
tively re-rank the candidate segmentations pro-
duced by the inner log-linear model.
Next, we compared the SLBD method with sev-
eral state-of-the-art monolingual semi-supervised
methods, including those of (Sun et al., 2012)
(Sun); (Sun and Xu, 2011) (S&X); (Zeng et al.,
2013b) (Zeng). To ensure a fair comparison, we
performed the evaluation in two steps. First, we
input the entire bilingual unlabeled dataset into
the SLBD method and input only the Chinese sen-
tences from the bilingual unlabeled dataset into the
other semi-supervised methods. Then, because the
available monolingual unlabeled dataset was much
larger than the bilingual unlabeled dataset in natu-
ral, we used the XIN CMN portion of Chinese Gi-
gaword 2.0 as an additional unlabeled dataset for
the monolingual semi-supervised methods. which
contains 204 million words, more than ten times
methods
Bilingual data Monolingual data
F OOV F OOV
Sun 93.9 63.1 94.6 67.9
S&X 94.1 66 94.4 71
Zeng 94.0 64.5 94.8 63.2
SLBD 96.7 80.8 - -
Table 3: Word segmentation performance of SLB-
D and other monolingual semi-supervised CWS
methods[%]
methods
AS PKU
F OOV F OOV
Xu 92.8 70.5 92.1 66
Ma 93.1 73 92.6 71.1
Xi 90.2 63 90.9 67.2
Zeng2014 93.5 76 93.2 73.3
SLBD 96.7 80.8 97.1 85
Table 4: Word segmentation performance of SLB-
D and other bilingual semi-supervised CWS meth-
ods[%]
the number of words in the bilingual unlabeled
dataset. The testing data was the set of AS only.
The evaluation is summarized in Table 3.
The results demonstrate that either leveraging
the same unlabeled data or providing a much larg-
er unlabeled dataset for the monolingual semi-
supervised methods, the SLBD method can sig-
nificantly outperform the evaluated monolingual
semi-supervised methods, which indicates that the
segmenting information obtained using SLBD is
much more efficient at optimizing segmentation.
Finally, we evaluated SLBD in comparison with
other bilingual semi-supervised methods, includ-
ing (Xu et al., 2008) (Xu); (Ma and Way, 2009)
(Ma); (Xi et al., 2012) (Xi);(Zeng et al., 2014)
(Zeng2014). The results presented in Table 4 indi-
cate that SLBD demonstrates much stronger per-
formance, primarily because these other methods
were developed with a focus on SMT, which caus-
es them to preferentially decrease the perplexity of
the subsequent SMT steps rather than producing a
highly accurate segmentation. In contrast to these
methods, the SLBD method exhibits greater gen-
eralizability.
1214
7 Conclusion
In this paper, we propose a cascaded log-linear
model to involve learning three levels of bilin-
gual linguistic features to semi-supervisedly learn
a new CWS model. Different from other mono-
lingual and bilingual semi-supervised approach-
es, we employ various types of features to cap-
ture both monolingual grammars and bilingual
segmenting information, which allows our mod-
el to be very efficient at other NLP tasks and en-
dows it with higher generalizability. The evalu-
ation shows that our method significantly outper-
forms the state-of-the-art monolingual and bilin-
gual semi-supervised approaches.
References
Masayuki Asahara, Kenta Fukuoka, Ai Azuma,
ChooiLing Goh, Yotaro Watanabe, Yuji Matsumo-
to, and Takahashi Tsuzuki. 2005. Combination
of machine learning methods for optimum chinese
word segmentation. In Proceedings of The Fourth
SIGHAN Workshop, pages 134-137.
Pi-Chuan Chang, Michel Galley, and Christopher D
Manning. 2008. Optimizing Chinese word segmen-
tation for machine translation performance. In Pro-
ceedings of WMT, pages 224-232. Association for
Computational Linguistics.
Tagyoung Chung and Daniel Gildea. 2009. Un-
supervised Tokenization for Machine Translation.
Proceedings of the 2009 Conference on Empirical
Methods in Natural Language Processing: Volume
2-Volume 2. Association for Computational Lin-
guistics, 2009: 718-726.
John Lafferty, Andrew McCallum, and Fernando
Pereira. 2001. Conditional random fields: Prob-
abilistic models for segmenting and labeling se-
quence data. In Proc. 18th International Conf. on
Machine Learning.
Percy Liang. 2005. Semi-supervised learning for nat-
ural language.. Master.s thesis.
Yanjun Ma and Andy Way. 2009. Bilingually moti-
vated domain-adapted word segmentation for statis-
tical machine translation. Proceedings of the 12th
Conference of the European Chapter of the Associ-
ation for Computational Linguistics. Association for
Computational Linguistics, 2009: 549-557.
Mikolov, Tomas, et al. 2013. Distributed representa-
tions of words and phrases and their compositional-
ity. In Advances in Neural Information Processing
Systems. 2013.
Graham Neubig, Taro Watanabe et al. 2011. An Unsu-
pervised Model for Joint Phrase Alignment and Ex-
traction. Proceedings of ACL 2011.
Graham Neubig, Taro Watanabe et al. 2012. Machine
Translation without Words through Substring Align-
ment. Proceedings of ACL 2012.
Feng Jiao, Shaojun Wang, and Chi-Hoon Lee. 2006.
Semi-supervised conditional random fields for im-
proved sequence segmentation and labeling. In Pro-
ceedings of ACL, pages 209-216, Sydney, Australia.
Koehn, Philipp, Franz Josef Och, and Daniel Mar-
cu. 2003. Statistical phrase-based translation. In
Proceedings of the 2003 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics on Human Language Technology-
Volume 1. Association for Computational Linguis-
tics, 2003.
Koehn, Philipp, et al. 2007. Moses: Open source
toolkit for statistical machine translation. In Pro-
ceedings of the 45th annual meeting of the ACL on
interactive poster and demonstration sessions. Asso-
ciation for Computational Linguistics, 2007: 177-
180.
Franz Josef Och and Hermann Ney. 2000. Improved s-
tatistical alignment models. In Proceedings of ACL,
pages 440-447.
Och, Franz Josef. 2003. Minimum error rate training
in statistical machine translation. In Proceedings of
the 41st Annual Meeting on Association for Compu-
tational Linguistics-Volume 1. Association for Com-
putational Linguistics, 2003: 160-167.
Fuchun Peng, Fangfang Feng and Andrew McCallum.
2004. Chinese segmentation and new word detec-
tion using conditional random fields. Proceedings of
the 20th international conference on Computational
Linguistics.
Stolcke, Andreas. 2002. SRILM-an extensible lan-
guage modeling toolkit. In INTERSPEECH. 2002
Weiwei Sun and Jia Xu. 2011. Enhancing chinese
word segmentation using unlabeled data. . In Pro-
ceedings of EMNLP 2011.
Xu Sun, Houfeng Wang, Wenjie Li. 2012. Fast Online
Training with Frequency-Adaptive Learning Rates
for Chinese Word Segmentation and New Word De-
tection. In Proceedings of the 50th Annual Meet-
ing of the Association for Computational Linguistic-
s, pages 253-262
Tian, Liang, et al. 2014. UM-Corpus: a large English-
Chinese parallel corpus for statistical machine trans-
lation. In Proceedings of the 9th International Con-
ference on Language Resources and Evaluation. EL-
RA Reykjavik, Iceland, 2014.
Ning Xi, Guangchao Tang, Xinyu Dai, Shujian Huang,
and Jiajun Chen. 2012. Enhancing statistical ma-
chine translation with character alignment. In Pro-
ceedings of ACL, pages 285-290. Association for
Computational Linguistics.
1215
Jia Xu, Richard Zens, and Hermann Ney. 2004. Do
we need Chinese word segmentation for statistical
machine translation?. Proceedings of the Third
SIGHAN Workshop on Chinese Language Learn-
ing, pages 122õ128.
Jia Xu, Jianfeng Gao, Kristina Toutanova, and Herman-
n Ney. 2008. Bayesian Semi-Supervised Chinese
Word Segmentation for Statistical Machine Transla-
tion. Proceedings of Coling 2008.
Nianwen Xue. 2003. Chinese word segmentation as
character tagging. Computational Linguistics and
Chinese Language Processing, pages 29õ48.
Zhang and Clark. 2007. Chinese segmentation with a
word-based perceptron algorithm.. Proceedings of
ACL 2007.
Hai Zhao, Chang-Ning Huang, Mu Li, and Bao-Liang
Lu. 2010. A unified character-based tagging frame-
work for chinese word segmentation. ACM Trans-
actions on Asian Language Information Processing,
9(2):5:1-5:32, June.
Xiaodong Zeng, Derek F. Wong, Lidia S. Chao and
Isabel Trancoso. 2013a. Graph-based Semi-
Supervised Model for Joint Chinese Word Segmenta-
tion and Part-of-Speech Tagging. Proceedings of the
51st Annual Meeting of the Association for Compu-
tational Linguistics.
Xiaodong Zeng, Derek F. Wong, Lidia S. Chao and Is-
abel Trancoso 2013b. Co-regularizing character-
based and word-based models for semi-supervised
Chinese word segmentation. Proceedings of the 51st
Annual Meeting of the Association for Computa-
tional Linguistics.
Xiaodong Zeng, Derek F. Wong et al. 2014. To-
ward Better Chinese Word Segmentation for SMT vi-
a Bilingual Constraints. Proceedings of the Annual
Meeting of the Association for Computational Lin-
guistics. Association for Computational Linguistics.
2014: 1360-1369.
1216
