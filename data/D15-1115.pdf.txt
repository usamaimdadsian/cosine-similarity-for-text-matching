Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 993–1002,
Lisbon, Portugal, 17-21 September 2015.
c
©2015 Association for Computational Linguistics.
Semantic Framework for Comparison Structures in Natural Language
Omid Bakhshandeh
University of Rochester
omidb@cs.rochester.edu
James F. Allen
University of Rochester
Institute for Human and Machine Cognition
james@cs.rochester.edu
Abstract
Comparison is one of the most impor-
tant phenomena in language for express-
ing objective and subjective facts about
various entities. Systems that can under-
stand and reason over comparative struc-
ture can play a major role in the applica-
tions which require deeper understanding
of language. In this paper we present a
novel semantic framework for represent-
ing the meaning of comparative structures
in natural language, which models com-
parisons as predicate-argument pairs inter-
connected with semantic roles. Our frame-
work supports not only adjectival, but also
adverbial, nominal, and verbal compara-
tives. With this paper, we provide a novel
dataset of gold-standard comparison struc-
tures annotated according to our semantic
framework.
1 Introduction
Representing the meaning of text has long been
a focus in linguistics and deriving computational
models of meaning has been pursued by various
semantic tasks such as semantic parsing. Deep
semantic parsing (as opposed to shallow seman-
tic parsing, such as semantic role labeling) aims
to map a sentence in natural language into its cor-
responding formal meaning representation (Zelle
and Mooney, 1996; Berant and Liang, 2014).
There has been a renewed interest in deeper se-
mantic representations of natural language (Ba-
narescu et al., 2013) in NLP community. Open-
domain semantic representations enable inference
and reasoning, which is required for many lan-
guage understanding tasks such as reading com-
prehension tests and open-domain question an-
swering. Comparison is a common way for ex-
pressing differences in sentiment and other prop-
erties towards some entity. Comparison can hap-
pen in very simple structures such as ‘John is
taller than Sam’, or more complicated construc-
tions such as ‘The table is longer than the sofa is
wide’. So far the computational semantics of com-
paratives and how they affect the meaning of text
has not been studied effectively. That is, the dif-
ference between the existing semantic and syntac-
tic representation of comparatives is not distinc-
tive enough for enabling deeper understanding of
a sentence. For instance, the general logical form
representation of the sentence ‘John is taller than
Susan’ using the Boxer system (Bos, 2008) is the
following:
named(x0, john, per)
& named(x1, susan, nam)
&than(taller(x0), x1) (1)
The above meaning representation does not
fully capture the underlying semantics of the ad-
jective ‘tall’ and what it means to be ‘taller’. A hu-
man reader can easily infer that actually the height
of John is greater than the height of Susan. An-
other example to consider is the sentence ‘John is
tall’, which basically has the typical logical form
tall(john) –which is a very superficial represen-
tation for the meaning of the predicate ‘tall’. Like-
wise, a human reader can infer that defining some-
one as ‘tall’ in some domain of discourse entails
that this person is somehow ‘taller’ than some
other population (say their average), however, the
earlier typical logical form representation does not
enable such inferences.
In this paper we introduce a novel framework
for semantic representation and computational
analysis of the structure of comparison in natural
language. This framework enables deeper repre-
sentation of semantics of comparatives, including
all different types of comparison within compara-
993
tives, superlatives, equatives, excessives, and as-
setives, and the way they are related to their cor-
responding semantic roles. Together with this pa-
per, we provide a dataset of gold-annotated com-
parative structures using our meaning representa-
tion, which enables training models on compar-
ison constructions. We propose a new approach
for automatic extraction of comparison structures
from a given text. A semantic representation of the
comparison expressed by the sentence ‘The equip-
ment is too old to be much of use to us.’ aug-
mented under our representation would be the fol-
lowing:
Throughout this paper we define a comparison
to be any statement comparing two or more enti-
ties, expressing some kind of measurement on a
scale, or indicating some degree of having a mea-
surable property. The details of these variations
will be discussed in Section 3.
2 Background
In this section we provide a linguistic background
on comparison constructions in language, which
provides the basis of our semantic framework (to
be presented in Section 3).
2.1 Comparative Structures in Language
Measurement in natural language is mainly ex-
pressed in sentences having comparative mor-
phemes such as more, less, -er, as, too, enough,
-est, etc
1
. Comparatives can be either adjectival,
adverbial, nominal, or verbal, i.e., the main com-
ponent of the sentence carrying out the measure-
ment can have either of these parts of speech.
Adjectival Comparatives: Canonical exam-
ples of comparative sentences contain adjectives,
e.g., ‘tall’ or ‘pretty’. Even within adjectival com-
paratives, there is a good deal of structural variety.
Consider the following examples:
(1) a. Mary is taller than Susan.
b. Mary is 3 inches taller than Susan.
c. Mary is taller than 5 feet.
1
These morphemes are counted as the main comparison
operators. For easier representation, throughout this paper
we specify the smallest constituent containing any of these
morphemes as the comparison operator, which is italicized in
the sentences.
The comparative form of the adjective ‘tall’ in
sentence 1a is viewed as an expression denoting a
greater than () relation between two individuals,
‘Mary’ and ‘Susan’, on the scale of ‘tallness’. The
degree-theoretic analysis of such adjectives brings
up the notion of Gradable Adjectives: many adjec-
tives describe qualities that can be measured ac-
cording to degrees on scales, such as the scale of
‘size’, ‘beauty’, ‘age’, etc. These adjectives can be
used with comparative morphemes, indicating less
or more of a particular quality on a scale. Gradable
adjectives can express specific relations between
individuals on a scale, e.g., in sentence 1b Mary is
taller than Susan by a measure of 3 inches.
Comparison on the scale does not always in-
volve two individuals. For example consider sen-
tence 1c which denotes a comparison being made
between an individual and a specific point on the
scale of ‘tallness’. All the earlier examples are
among the simplest types of comparative struc-
tures using adjectives. Consider the following ex-
ample:
(2) Mary is taller than the bed is long.
In sentence 2 we have a case of subcompara-
tives, where we compare ‘Mary’ and ‘bed’ accord-
ing to two different dimensions: height and length.
Each dimension provides a degree, and the degrees
are ultimately related by the greater than () re-
lation. Scalability is known to be universal in lan-
guage and a wide variety of linguistic phenomena
can be explained in terms of degrees and scales
(Solt, 2015).
The Semantics of Scales: A fairly common
view (Kennedy, 2007) is that a scale S is a triple
of the following form:
S = ?D,, DIM? (2)
where D is a set of degrees,  is an ordering re-
lation on D, and DIM is the dimension of mea-
surement.
2
Individuals are linked to degrees by measure
functions. A measure function µ
S
is the func-
tion that maps an individual x to the degree on the
scale S that represents x’s measure with respect to
the dimension DIM . For example, the µ
HEIGHT
measure function is a function that maps individ-
uals to their respective heights. Under this model,
we represent the comparative structure of the sen-
tences 1a-1c as follows:
2
To know more about the theory of scales and restrictions
on dimensions and degrees refer to (Solt, 2015).
994
(3) a. µ
HEIGHT
(Mary)  µ
HEIGHT
(Susan)
b. µ
HEIGHT
(Mary)  µ
HEIGHT
(Susan) + 3”
c. µ
HEIGHT
(Mary)  5 feet
A generic comparative interpretation of some
degree of tallness underHEIGHT scale is as fol-
lows:
JtallK = ?d?x.µ
HEIGHT
(x)  d (3)
where d is the degree argument which is sup-
plied by some form of degree morpheme: a degree
modifier (e.g., too, very), a measure phrase (e.g.
1.7 inches), or simply comparative or superlative
morphology. Under this model, we can also rep-
resent the comparative structure of the sentence
‘Mary is tall’
3
, where there is no explicit degree
argument. A common assumption is that the de-
gree role is played by a phonologically null degree
morpheme called pos, which denotes a context-
dependent threshold or standard of comparison
(Kennedy, 2007; Heim, 2007). For instance, in
a specific context of adult men in north America
being ‘tall’ could be interpreted as being over 6
feet.
Non-canonical Comparatives: Comparative
structures can also be verbal, nominal, and adver-
bial. Consider the following verbal comparatives:
(4) a. The women ate more than men did.
b. The lake cooled more than 4 degrees.
It has been proposed (Wellwood et al., 2012)
that measure functions (µ) can be applied both to
individuals and to events, in the latter case mea-
suring either the event or an entity related to the
event. The comparative interpretation for the two
sentences 4a and 4b is as follows:
(5) a. µ
volume
(eat(women))  µ
volume
(eat(men))
b. ?e.µ
coolness
(e)(lake)  4 degrees
where cool is a function that takes an event e and
an object x (here ‘lake’) and returns a degree rep-
resenting the amount to which x changes in cool-
ness as a result of participating in e. The underly-
ing scale of verbal comparatives is sometimes am-
biguous, e.g., in sentence 5a it is not clear whether
the women ate more in volume or in quantity.
Comparative structures can also be nominal.
Consider the following sentences:
3
Such cases are called positive usage of the adjective.
The negative (also called antonym) usage would be ‘Mary
is short’.
(6) a. More juniors than seniors came to the
ceremony.
b. We bought more milk than wine.
The meaning of sentences presented above must
be stated with reference to degrees as well (Solt,
2015). Hence, the scale for the comparison sen-
tence 6a is the numerical counting by integers and
the scale for sentence 6b is something correspond-
ing to a mass dimension, here perhaps liquid vol-
ume. Adverbial comparatives share many of their
characteristics with the adjectival and verbal class,
which we do not develop further for brevity. For
example the sentence ‘Mary ran faster than Sam’
is an example of adverbial comparison, where the
implicit ‘speed’ attribute of the ‘running’ event as-
sociated with Mary and Sam is being compared.
2.2 Categories of Comparison
There are various ways for making comparisons,
each indicating different degrees of difference or
similarity. Following are the major categories for
degrees of comparison together with example sen-
tences
4
:
(7) Comparative
a. Mary is taller than Susan.
b. Dogs are more intelligent than rabbits.
(8) Superlative
a. Mary is the tallest girl in her class.
b. Dogs are the most intelligent among
pets.
(9) Equative
a. Mary is as tall as Bill.
b. Dogs are as intelligent as cats.
(10) Excessive
a. Mary is too short for basketball.
b. Dogs are too intelligent to be fooled.
(11) Assetive
a. Mary is tall enough to reach the shelf.
b. Dogs are intelligent enough to find
their way home.
3 Semantic Framework of Comparison
As discussed earlier, having a deep meaning rep-
resentation of comparison structures can help us
4
As shown in example sentences of Table 1, there can
be non-adjectival comparisons in each of these categories as
well.
995
build computational models of comparison in nat-
ural language and perform inferential tasks in var-
ious domains. Here we introduce a novel seman-
tic framework of comparison. This framework is
based on the linguistic interpretations presented in
Section 2, but formalized and adapted to suit our
semantic computational framework.
We model comparatives as inter-connected
predicate-argument structures, where predicates
are the main comparison operators (implicit and
explicit comparison morphemes), and arguments
are connected to the predicates via semantic roles
(relations). Our framework includes not only ex-
plicit comparisons, but also implicit ones in the
form of an evaluation or a measurement on a scale,
which will be explained throughout this section.
More detailed and complete list of the predicates,
semantic roles, and arguments can be found in the
supplementary material.
Predicates: Table 1 lists all the predicate oper-
ators under our framework. As the table shows,
there are four main types of predicates: compara-
tives, extremes, bases, and measurements. Most
of these types can be associated with operators
from any of our parts of speech: Adjective (JJ),
Adverb (RB), Noun (NN), and Verb (VB). The
predicate operator in each of the examples is ital-
icized. The comparatives type also includes the
operators < and =<, which are the opposite of the
operators > and >= presented in the table. It is
important to note that the ‘base positive’ predi-
cate is actually the implicit pos operator (as men-
tioned in Section 2.1; however, for easier repre-
sentation we specify it by marking its correspond-
ing adjective or adverb. The same thing happens
for measurement predicates. Also, our framework
captures the subtle difference between the mean-
ing of ‘Mary is [tall]
positive
’ and ‘Mary is 5 feet
[tall]
measurement?explicit
’. The earlier means that
Mary is tall according to some standard of tallness
in a context, while the latter means that Mary’s
height equals the degree of 5 feet.
Semantic Roles: Each predicate is character-
ized by its arguments and each argument is con-
nected to the predicates by a relation (semantic
role) type. Table 2 shows the possible semantic
role types for a predicate. Figure is the core role
for a comparison structure, i.e., any comparison
should have a role indicating the main entity which
is being evaluated/measured/compared on a scale.
The simplest form of comparative predicate, e.g.,
‘John is taller than Sam’, involves two main roles:
Figure (John) and Ground (Sam). The non-core
roles are mainly associated with non-comparative
comparisons
Arguments: Last but not least, each role points
to an argument, which can have various types, as
listed in Table 3. The most frequent argument type
is individual, as in ’John is taller than Sam’. The
other notable role is Phrase-value, which repre-
sents an interesting comparison phenomena. In the
corresponding example in the table, the speed of
John’s driving is explicitly being compared with
some point on the scale of speed to which ‘he
was allowed’. Such ground roles are classified as
phrase-value, where a verb phrase signifies a point
of comparison on scale, not an individual entity.
Figure 1 shows an example of predicate-argument
structure under the described semantic framework.
4 Predicting Comparison Structures
Given an input sentence, we want to predict the
predicate operators, their semantic roles, and ar-
guments. We decompose this problem into three
sub-problems:
• Labeling predicate candidates using a multi-
class classifier
• For each predicate, considering the set of all
possible argument spans:
– Use a classifier for predicting the role
type label
– Use a classifier for predicting the argu-
ment type label
Our overall approach, to be described in this
section, is similar to the works on joint inference
with global constraints for learning event relations
and process structures (Do et al., 2012; Berant et
al., 2014).
Predicting Predicates: The first step in com-
parison structure prediction is to identify and la-
bel the predicates. For this purpose we train a
multi-class classifier that labels all one-word con-
stituents in the sentence with any of predicate
types in Table 1 or None (indicating that the con-
stituent is not a predicate). The set of all possible
predicate labels is named P .
We used various features for training the predi-
cate classifier: we extract the lemma and POS tag
of the word, POS tag of children, siblings, par-
ent and root of the sentence in the dependency
996
Predicate Type Subtype Examples
Comparatives:
Comparing against one or more entities.
>
• JJ: The car was more modern than I had imagined.
• RB: John ran faster than Susan.
• NN: More cookies than cakes were purchased.
• VB: Coffee is less consumed than tea.
>=
• JJ: Pizza is as expensive as pasta.
• RB: The men ran as fast as the women did.
• NN: That college hires as much professors as we do.
• VB: Athletes drink as much as others.
Superlative
• JJ: Mary is the tallest among her colleagues.
• RB: Mike talked the most loudly of the group.
• NN: The juniors found the most rock of all.
• VB: The fire fighters ran the most among others.
Extreme:
Indicating having enough or too much of
a quality or quantity.
Excessive
• JJ: Mary is too tall to fit in the chair.
• RB: Sam ran too fast to get caught.
• NN: There are too many students at the party.
• VB: The kid screamed too much.
Assetive
• JJ: Mary is smart enough to accept the offer.
• RB: The machine works steadily enough.
• NN: There are enough professors at the party.
• VB: Jack passed enough interviews to prove himself.
Polarity:
Base form expression of +/- quality.
Positive
• JJ: Mary is tall.
• RB:John talks beautifully.
Negative
• JJ: Susan is short.
• RB: Philip walks slowly.
Measurement:
Indicating a measurement on a scale.
Explicit
• JJ: Mary is 5 feet tall.
• RB: Philip is driving 60mph fast.
Implicit
• JJ: Mary is 5 feet.
• RB: Philip is driving 60mph.
Table 1: The predicate types defined under our framework.
Figure 1: A full annotation of a sample predicate-argument structure under the described semantic frame-
work.
tree, POS tag and lemma of two adjacent words,
similarity features from WordNet (Miller, 1995),
word polarity features, and most importantly ‘at-
tribute concepts’ for words which are adjectives
(Bakhshandeh and Allen, 2015). The ‘attribute
concepts’ are the different properties that an adjec-
tive can describe, for instance ‘height’ and ‘thick-
ness’ are the attributes of the adjective ‘gangling’.
Last but not least, we include the conjunction of
all these features.
Predicting Roles and Arguments: Given
the predicates, one should label the predicate-
argument role and predict the argument type. Here
we take an approach used for semantic role label-
ing (Punyakanok et al., 2008): given a predicate,
we collect all constituents in the sentence to build
a set of plausible candidate arguments. As a re-
sult, each predicate has a set of candidate argu-
ments which should be labeled with their argu-
ment types and be assigned with a semantic role
edge. Here we jointly train two logistic regres-
sion classifiers for predicting semantic role type
and argument type of a predicate-argument pair,
using argument identification features from (Pun-
yakanok et al., 2008) and using the structured av-
eraged Perceptron algorithm (Collins, 2002). The
role types can be any of the roles from table 2 or
None (set R), and the argument types can be any
997
Relation Type Description Example
Figure The main role being compared to something
else.
- [Lara] is taller than the tree.
Ground The main role against which the figure is com-
pared.
- Lara is taller than the [tree].
Difference
degree
The ‘plus’ and ‘times’ roles, signifying an
amount of difference on a degree.
- Sam is [twice] taller than Jim.
Domain The explicit expression of the domain/popula-
tion in which the comparison takes place
- Mary is the most intelligent among
[her classmates].
Reason The reason associated with the excessive and
assetive predicates
- John is too lazy [to wake up].
Measurement
degree
The main indication of a measurement - Henry is [5 feet] tall.
Scale The scale on which the comparison takes place - The [height] of the chair equals the
[length] of the sofa.
Table 2: The role types under our framework.
Argument Type Subtype Example
Individual:
An entity being compared against others.
- - [John] is a better performer than Susie.
Reference:
A referring entity, the actual antecedent of
which would be resolved in discourse-level.
- - John is 2" taller than [that].
Phrase:
Introduces a degree on scale.
Value - John was driving faster than [he was
allowed].
Amount:
The expression of the amount in a measurement.
Value
- Mary is [5 feet] tall.
- Mary is [twice] taller than Bill.
Very Low-Low - Mary is [a little bit] taller than John.
High-Very High - Mary is [a lot] taller than Bill.
Bound:
A bound/approximation being set on the amount
that is expressed.
Exact - Mary is [exactly] 5 feet tall.
Approximate - Sam was [about] three times faster
than others.
Lower - John walks [at least] twice faster than
you.
Higher - Mary is [at most] twice as smart as the
others.
Scale:
The scale on which the measurement is done.
Explicit - The [height] of the bridge is too low
for the van.
Implicit - Sam is more [available] than John is.
Table 3: The argument types under our framework.
of the ones from table 3 or None (set G). At the
end of this stage we have two scores: sc
p,j,r
=
log Pr
p,j,r
where p ? P is a predicate type, j is
a candidate argument, r ? R is a role type; and
sc
p,j,g
= log Pr
p,j,g
where g ? G.
Joint Inference: Given a sentence with its ex-
tracted predicates
5
, for each predicate labeled as
p, the goal is the following: find the best assign-
ment for the indicators y = {y
p,j,r
| p ? P, 1 <
j ? n, r ? R} and x = {x
p,j,g
| p ? P, 1 <
j ? n, g ? G}. Here n is the number of candidate
arguments for the given predicate. We model the
problem as an Integer Linear Programming (ILP).
We formulate the problem as follows:
5
A constituent is a predicate if it is labeled with any p ? P
and p 6= None.
argmax
y,x
?
1<j?n
r?R
sc
p,j,r
y
p,j,r
+
?
1<j?n
g?G
sc
p,j,g
x
p,j,g
(4a)
s.t.
?
r?R,r 6=None
y
p,j,r
= 1 (4b)
?
g?G
y
p,j,g
= 1 (4c)
?
1<j?n
y
p,j,r
= 1 (4d)
y
p,j,None
= x
p,j,None
(4e)
?
1<j?n
y
p,j,F igure
= 1. (4f)
The hard constraints 4b? 4c each indicate a re-
striction on the structure of the predicate-argument
relation and labels: each argument can have only
998
one role and argument type (4b ? 4c), each pred-
icate can only have one of each role type (4d), a
‘None’ role type should be matched with a ‘None’
argument type (4e), and each predicate should
have exactly one ‘Figure’ role (4f ). There are also
some other specific constraints such as the fact that
a predicate labeled with ‘comparative’ cannot have
a ‘Domain’ role type and vice verse.
5 Experimental Setup
5.1 Dataset Creation
In order to make our gold-annotated dataset we
used OntoNotes (Pradhan et al., 2007) release
5.0 corpus. OntoNotes covers various genres
such as conversations, news-wire, and Weblogs,
which provides distinctive variations of compari-
son structures in natural language. Furtheremore,
we think our annotations can potentially provide
augmentations on OntoNotes, so using the origi-
nal OntoNotes sentences can be beneficial.
One approach for pinpointing comparison sen-
tences is to mine for some known patterns and
train a classifier for distinguishing comparison
and non-comparison sentences (Jindal and Liu,
2006b). However, as demonstrated earlier, the va-
riety of comparison structures is so vast that be-
ing limited to some specific patterns or syntactic
structures will not serve our purpose. In order
to address this issue, we randomly selected 2000
sentences from OntoNotes which contained an ad-
jective, an adverb, or any of the comparison mor-
phemes. This set contained some non-comparison
sentences, such as ‘John admitted to the crime
too’.
In order to make the final set of comparison sen-
tences we performed the following task: we define
a comparative sentence as a sentence that contains
at least one predicate operator as defined in Sec-
tion 3. Hence, we provided three human experts
with a full predicate operator types table and asked
each of them to annotate any predicate operator
found in the given sentences. Then we retained
any sentences with at least one predicate operator
which was annotated by at least two of the three
judges. We further refined the set to include equal
number of predicate types. This resulted in 531
sentences.
After collecting the comparison sentences, we
asked the annotators to provide gold-standard an-
notation of predicate-argument structure of the
sentences. This involves the annotator to read
the annotation guideline and basically understand
the semantic framework for comparison structures
that we introduced in Section 3. Initially, we
ran a pilot study on a set of 50 sentences where
each sentence was annotated by two of the ex-
perts. We used pilot results for iterating over the
annotation schema and guideline and resolving is-
sues regarding low agreement predicates and ar-
gument types
6
, until getting to average agreement
? = 0.80. We split the dataset into 30% and 70%
for testing and training respectively.
5.2 Evaluation
Here we evaluate the performance of our pro-
posed predicate-argument structure prediction.
We present the following two methods:
• ILP Method: Our full approach as described
in Section 4. Here we used the Gurobi
7
op-
timization package for finding an exact solu-
tion for our ILP formalization.
• Baseline: A simple pattern-based method
which uses lexical patterns for predicting
predicate type and argument types. This
method uses the generic comparative mor-
phemes such as ‘er’, ‘est’, ‘more’ and ‘less’
for detecting any specific type of predicate.
For identifying predicate arguments it relies
on rules which use syntactic structure, e.g.,
for a ‘greater’ predicate identified by ‘er’
morpheme, the ‘left’ argument is always the
main subject of the sentence. This method
annotates anything not recognized by pat-
terns as ‘None’.
Here with compare their predictions on test
set to the gold standard annotations and compute
micro-averaged precision, recall and F1 score. For
this analysis we remove the ‘equative’ predicate
type, given its very low frequency in our training
set. Moreover, here we do not include the positive
and negative predicate types, as these take only
one role argument which is ‘figure’, making the
prediction task trivial.
Table 4 shows the results of predicate type pre-
diction. The final reported average in this table ex-
cludes the type ‘None’. The best performing cate-
gory in both methods is ‘superlative’, which is be-
cause of its more typical structure which makes it
6
The disagreements were mainly on fine-grained predi-
cate types, which were resolved by collapsing some of the
types together.
7
www.gurobi.com
999
easier to be predicted. In general, the precision of
predicate prediction is very high in ILP method,
which is due to the fact that our predicates are
the comparison operators indicated by the com-
parison morphemes. The baseline performs con-
siderably weaker than ILP method for predicting
less and greater predicates. This is because pre-
dicting these types requires a more complicated
analysis where simple morphological and syntac-
tic patterns can result in many false positives.
Table 5 depicts the results of the role type pre-
diction. The weighted average in this table is
based on frequency, excluding the type ‘None’.
The precision on role prediction varies across
different types. Overall, the baseline performs
weakly on predicting role types, which is dues to
the complicated structure of roles.
The best prediction of ILP method is on scales,
which has benefited from the attribute concept fea-
ture. The weaker performing types have been
affected by the low-frequency occurrence in the
training set. There are many cases of very long
and complex sentences in our dataset. One major
reason behind some of the false predictions is in-
correct dependency parse for long sentences. One
notable issue here is that for easier prediction and
analysis, we had asked our annotators to mark only
the head words for phrasal arguments. This had of-
ten caused lower agreement among annotators and
hence worse predictions on the system trained on
the dataset. In future, we are going to switch to
span-based argument identification.
ILP Method Baseline
Predicate Type P R F1 P R F1
Assetive 100 46 63 100 26 41
Greater 90 82 86 54 68 60
Superlative 96 79 87 89 73 80
Excessive 100 43 60 100 24 38
Less 100 86 92 45 71 55
None 96 99 99 78 80 79
Average 97 67 79 77 52 68
Table 4: The evaluation results on predicate type
prediction.
6 Related Work
The syntax and semantics of comparison in lan-
guage have been studied in linguistics for a long
time (Bresnan, 1973; Cresswell, 1976; Von Ste-
chow, 1984). However, so far, computational
modeling of the semantics of comparison com-
ponents of natural language has not been devel-
ILP Method Baseline
Role Type P R F1 P R F1
Plus 67 31 42 11 17 13
Ground 34 56 42 6 23 9
Scale 81 28 41 63 20 30
Figure 25 44 32 3 29 5
Reason 50 12 20 33 7 11
Domain 50 25 33 26 24 25
Times 14 50 22 30 12 17
None 97 96 96 81 78 79
Weighted Average 76 42 54 24 18 20
Table 5: The evaluation result on role type predic-
tion.
oped as elaborately as needed. The main efforts
on computational aspects of comparatives have
been in the context of sentiment analysis. Jindal
and Liu (2006b) introduced the first approach for
the identification of sentences containing compar-
isons. Their system trains a Naive Bayes classi-
fier for labeling sentences as comparative or non-
comparative.
Later works progressed into identifying the
components of the comparisons: comparative
predicates and arguments. For example for the
sentence “Canon’s optics is better than those of
Sony and Nikon.”, the extracted relation should be:
(better, {optics}, {Canon}, {Sony, Nikon}). Jindal
and Liu (2006a) detect such arguments by labeling
sequential rules. Xu et al. (2011) use Conditional
Random Fields (Lafferty et al., 2001) to extract
relations between two entities, an attribute and a
predicate phrase. These works all provide a rudi-
mentary basis for computational analysis of com-
paratives, however, they lack depth and breadth as
they are limited to the limited comparison struc-
ture (Entity1, Entity2, aspect) expressed within
some sequential patterns. It is evident that the
framework of comparison proposed in this paper
goes beyond simple triplet annotation of compari-
son structures and is more representative of the lin-
guistics literature on comparatives and measure-
ments.
The most recent related work on comparatives
(Kessler, 2014) focuses on argument identification
task: given a comparative predicate, they find the
arguments corresponding to it. They train a classi-
fier for this task emphasizing on syntax informa-
tion. Most of the entities in their training data
are products (cameras, cars, and phones). An-
other recent work (Kessler and Kuhn, 2014) con-
centrates on the annotation of what they call multi-
word predicates (such as ‘more powerful’, where
1000
the comparison is not one-word such as ‘calmer’).
They show that annotating the modifier of com-
paratives (i.e., the adjectives) gives better results
in classification. Both these works share the major
shortcoming of the earlier works, as they are very
limited to their specific patterns and fail to enable
deeper representation and analysis of various com-
plex comparative structures.
7 Conclusion
Systems that can understand and reason over com-
paratives are crucial for various NLP applications
ranging from open-domain question answering to
product review analysis. Understanding compar-
atives requires a semantic framework which can
represent their underlying meaning. In this pa-
per we presented a novel semantic framework for
representing the meaning of various comparison
constructions in natural language. We mainly
modeled comparisons as predicate-argument pairs
which are connected via semantic roles. Our
framework supports all possible parts of speech
and variety of measurements and comparisons,
hence providing a unique computational represen-
tation of the underlying semantics of comparison.
Furthermore, we introduced an ILP-based method
for predicting the predicate-argument structure of
comparison sentences.
With this paper, we provide a novel dataset of
gold-standard annotations based on our seman-
tic framework. We are planning on expanding
our gold-standard annotations under this frame-
work for having more training data. Our semantic
framework on comparison constructions enables
us to do logical reasoning and inference over com-
paratives. In the future, we are planning to de-
sign a reading comprehension task where we use
this framework for answering comparison ques-
tions from a paragraph containing various inter-
related comparisons.
Last but not least, the works on broad-coverage
semantic parsing (Allen et al., 2008; Bos, 2008)
can all benefit from our semantic framework. We
will be extending the TRIPS logical form (Allen
et al., 2008) according to this framework and will
modify the grammar to generate the deeper repre-
sentations.
Acknowledgments
We would like to thank Alexis Welwood for her
invaluable comments and guidelines on this work.
Moreover, we thank Ritwik Bose for his help on
annotations. This work was funded by the Office
of Naval Research (grant N000141110417) and
the DARPA Big Mechanism program under ARO
contract W911NF-14-1-0391.
References
James F. Allen, Mary Swift, and Will de Beaumont.
2008. Deep semantic analysis of text. In Proceed-
ings of the 2008 Conference on Semantics in Text
Processing, STEP ’08, pages 343–354, Stroudsburg,
PA, USA. Association for Computational Linguis-
tics.
Omid Bakhshandeh and James F. Allen. 2015. From
adjective glosses to attribute concepts: Learning dif-
ferent aspects that an adjective can describe. In Pro-
ceedings of 11th International Conference on Com-
putational Semantics (IWCS).
Laura Banarescu, Claire Bonial, Shu Cai, Madalina
Georgescu, Kira Griffitt, Ulf Hermjakob, Kevin
Knight, Philipp Koehn, Martha Palmer, and Nathan
Schneider. 2013. Abstract meaning representation
for sembanking. In Proceedings of the 7th Linguis-
tic Annotation Workshop and Interoperability with
Discourse, pages 178–186, Sofia, Bulgaria, August.
Association for Computational Linguistics.
Jonathan Berant and Percy Liang. 2014. Semantic
parsing via paraphrasing. In Association for Com-
putational Linguistics (ACL).
Jonathan Berant, Vivek Srikumar, Pei-Chun Chen,
Brad Huang, Christopher D. Manning, Abby V. Lin-
den, and Brittany Harding. 2014. Modeling bi-
ological processes for reading comprehension. In
Proceedings of the 2014 Conference on Empirical
Methods in Natural Language Processing (EMNLP
2014).
Johan Bos. 2008. Wide-coverage semantic analy-
sis with boxer. In Johan Bos and Rodolfo Del-
monte, editors, Semantics in Text Processing. STEP
2008 Conference Proceedings, Research in Compu-
tational Semantics, pages 277–286. College Publi-
cations.
Joan Bresnan. 1973. Syntax of the comparative
clause construction in english. Linguistic Inquiry,
4(3):275–343.
Michael Collins. 2002. Discriminative training meth-
ods for hidden markov models: Theory and exper-
iments with perceptron algorithms. In Proceedings
of the ACL-02 Conference on Empirical Methods in
Natural Language Processing - Volume 10, EMNLP
’02, pages 1–8, Stroudsburg, PA, USA. Association
for Computational Linguistics.
Max Cresswell. 1976. The semantics of degree. Bar-
bara Hall Partee (ed.), pages 261–292.
1001
Quang Do, Wei Lu, and Dan Roth. 2012. Joint infer-
ence for event timeline construction. In Proceedings
of the 2012 Joint Conference on Empirical Methods
in Natural Language Processing and Computational
Natural Language Learning, EMNLP-CoNLL 2012,
July 12-14, 2012, Jeju Island, Korea, pages 677–
687.
Irene Heim. 2007. Little. In In Proceedings of 16th
Semantics and Linguistic Theory Conference, Cor-
nell University, Ithaca.
Nitin Jindal and Bing Liu. 2006a. Identifying com-
parative sentences in text documents. In Proceed-
ings of the 29th Annual International ACM SIGIR
Conference on Research and Development in Infor-
mation Retrieval, SIGIR ’06, pages 244–251, New
York, NY, USA. ACM.
Nitin Jindal and Bing Liu. 2006b. Mining comparative
sentences and relations. In Proceedings of the 21st
National Conference on Artificial Intelligence - Vol-
ume 2, AAAI’06, pages 1331–1336. AAAI Press.
Christopher Kennedy. 2007. Vagueness and grammar:
the semantics of relative and absolute gradable ad-
jectives. Linguistics and Philosophy, 30(1):1–45,
February.
Wiltrud Kessler and Jonas Kuhn. 2014. Detecting
comparative sentiment expressions – a case study
in annotation design decisions. In Proceedings of
KONVENS, Hildesheim, Germany.
Wiltrud Kessler. 2014. Improving the detection of
comparison arguments in product reviews. In Pro-
ceedings of 44th Jahrestagung der Gesellschaft fur
Informatik e.V. (INFORMATIK 2014), pages 22–26,
Stuttgart, Germany, September.
John Lafferty, Andrew McCallum, and Fernando
Pereira. 2001. Conditional random fields: Prob-
abilistic models for segmenting and labeling se-
quence data. In Proceedings of the Eighteenth Inter-
national Conference on Machine Learning, ICML
’01, pages 282–289, San Francisco, CA, USA. Mor-
gan Kaufmann Publishers Inc.
George A. Miller. 1995. Wordnet: A lexical database
for english. Commun. ACM, 38(11):39–41, Novem-
ber.
Sameer Pradhan, Eduard Hovy, Mitch Marcus, Martha
Palmer, Lance Ramshaw, and Ralph Weischedel.
2007. Ontonotes: A unified relational seman-
tic representation. In Proceedings of the Interna-
tional Conference on Semantic Computing, ICSC
’07, pages 517–526, Washington, DC, USA. IEEE
Computer Society.
Vasin Punyakanok, Dan Roth, and Wen-tau Yih. 2008.
The importance of syntactic parsing and infer-
ence in semantic role labeling. Comput. Linguist.,
34(2):257–287, June.
Stephanie Solt. 2015. Measurement scales in natu-
ral language. Language and Linguistics Compass,
9(1):14–32.
Arnim Von Stechow. 1984. Comparing semantic the-
ories of comparison. Journal of Semantics, 3(1):1–
77.
Alexis Wellwood, V. Hacquard, , and R. Pancheva.
2012. Measuring and comparing individuals and
events. Journal of Semantics, 29(2):207–228.
Kaiquan Xu, Stephen Shaoyi Liao, Jiexun Li, and
Yuxia Song. 2011. Mining comparative opinions
from customer reviews for competitive intelligence.
Decision Support Systems, 50(4):743–754.
John M. Zelle and Raymond J. Mooney. 1996. Learn-
ing to parse database queries using inductive logic
programming. In Proceedings of the Thirteenth Na-
tional Conference on Artificial Intelligence - Volume
2, AAAI’96, pages 1050–1055. AAAI Press.
1002
