Mixing Modes of Linguistic Descript ion 
in Categorial Grammar 
Mark Hepple 
Department of Computer Science, University of Sheffield, 
Regents Court, Portobello Street, Sheffield S1 4DP, UK 
Emai l :  hepple@dcs, sheffield, ac. uk 
Abstract 
Recent work within the field of Categorial 
Grammar  has seen the development of ap- 
proaches that allow different modes of lo- 
gical behaviour to be displayed within a 
single system, something corresponding to 
making available differing modes of lin- 
guistic description. Earlier attempts to 
achieve this goal have employed modal op- 
erators called structural modalities, whose 
use presents a number of problems. I pro-. 
pose an alternative approach, involving co- 
existence and interrelation of different sub- 
logics, that eliminates the need for struc- 
tural modalities, whilst maintaining the de- 
scriptive power they provide. 
1 Introduction 
Categorial Grammar  formalisms consist of logics. 
Syntactic information (e.g. subcategorisation, 
word order) is encoded in complex formulas or 
types assigned to lexical items. Syntactic deriv- 
ation is via deduction over lexical formulas. Al- 
ternative systems differ in the logics they use, x 
which may he classified by their limitations on 
the use of 'resources' (i.e. assumptions) in deduc- 
tion, and their consequent sensitivity to the spe- 
cific structuring of those resources (a comparison 
which gives rise to the 'substructural hierarchy' 
of logics). In linguistic terms, such logics can be 
seen to implement different possible views of the 
nature of linguistic structure. 
In the past few years, categorial systems have 
been developed that allow access to the resource 
behaviour of more than one level of the substruc- 
tural hierarchy. This amounts to a recognition 
°The author also at Department of Psychology, 
Sheffield University. The research reported here was 
done largely during a year at IRCS, UPenn, with the 
support of an IRCS Postdoctoral Fellowship award. I 
would like to thank Ruth Kempson, Natasha Kurton- 
ins, Michael Moortgat, Glyn Morrill and Yde Venema 
for valuable discussions of the ideas in this paper. 
1 For example, associative Lambek calculus (Lam- 
bek 1958), non-associative Lambek calculus (Lam- 
bek 1961), a permutative variant of associative Lam- 
bek calculus known as LP (van Benthem 1983), the 
'headed' systems of Moortgat & Morrill (1991). 
that a full account of phenomena within a lan- 
guage may require use of more than one notion 
of linguistic structure, so that e.g. rigid tree- 
like structures may be appropriate for one class 
of phenomena (binding, perhaps), whereas more 
flexible structures may be appropriate for another 
(coordination, perhaps). Consideration of cross- 
linguistic variation strengthens the case for allow- 
ing multiple notions of structure. 
One approach to creating systems with mixed 
resource behaviour employs operators called 
structural modalities. In such work, a specific re- 
source logic is selected as 'basic' for stating the 
grammar, thereby setting the default characterist- 
ics of resource sensitivity. Then, structural mod- 
alities are used to allow controlled access to the 
resource behaviour of other substructural levels. 
Various problems - -  theoretical, computational 
and practical - -  arise for the use of such oper- 
ators. For example, where they are used extens- 
ively, unduly complicated accounts tend to result. 
Also, the need to have a single 'base logic' presents 
problems for the development of a truly general 
cross-linguistic framework. 
More recent work has seen the development 
of approaches that have coexistence of different 
sublogics within a single mixed or multimodal 
system. 2 Moortgat & Oehrle (1993;1994) and 
Hepple (1993) propose general approaches for 
combining substructural logics into multimodal 
systems, where 'movement between levels' (en- 
abled by structural modalities in the earlier work) 
is freely allowed, provided it accords with what are 
seen to be 'natural relations' between the levels in 
terms of the relative informativeness of their de- 
scriptions. Although developed separately, these 
two sources propose formal systems that are in 
many ways similar, but, interestingly, take pre- 
cisely opposing views as to what are the 'natural 
relations' between levels. This difference of opin- 
ion has consequences for how the systems may be 
used as linguistic formalisms (requiring, for ex- 
2Some early examples of muitimodal systems are 
logics that have coexistence, but without interlink- 
age, of associative and non-associative Lambek calcu- 
lus (Oehrle & Zhang 1989; Morrill 1990). Further ex- 
amples include systems that combine associative Lam- 
bek calculus with special connectives for discontinuity 
(e.g. Morrill & Solias 1993; Hepple 1994). 
127 
ample, 'additional apparatus' for handling word 
order in the second approach), and more crucially 
for the kind of linguistic accounts they allow to be 
formulated. 
In this paper, I will describe the approach taken 
in Hepple (1993) - -  what I call the 'hybrid' ap- 
proach, discuss the general inguistic model that 
it tends to foster and provide some linguistic illus- 
tration, and discuss possibilities for parsing hybrid 
systems. I will begin with discussion of substruc- 
tural hierarchy and structural modalities, as it is 
the behaviour of systems with structural modalit- 
ies that inspires the hybrid view of how different 
levels should be related. 
2 The  subst ructura l  h ie rarchy  
I will address only logics (or levels) having three 
connectives: a 'product' connective (a form of con- 
junction, corresponding to 'matter-like addition' 
of substructures), plus two implicational connect- 
ives (the left and right 'residuals' of the product), 
notated as °-L, and o for a product o. 
The minimal set of sequent rules for any group 
o 0 of connectives {o,~,.---} is as in .(1,2): 3 
(1) A:v =~ A:v (id) 
¢ ::~ B:b riB:v\] =~ A:a 
\[cut\] 
r\[¢\] ~ A: ~\[b/v\] 
(2) (B:v, F) ° =*. A:a 
\[-." R\] o F :=~ B--*A : \[o\]v.a 
¢ ~ C:c r\[B:v\] =~ A:a  
\[--%L\] 
F\[((I), C~S:w)  °1 =v A:a\[(cVw)/v\] 
(F, B : v) ° =~ A : a \[~R\] 
o F =~ A~B : \[o\]v.a 
¢ =~ C:c F\[B:v\] =~ A:a 
\[~°L\] 
r\[(B&C: w, ¢)0\] ~ A: a\[(w'~ c)lv\] 
F=~ A:a (I) =~ B:b 
(F, ~)* =~ AoB: (a, b) ° \[oR\] 
r\[(B:v, c :w)  01 =~ A:a  
\[oL\] 
r\[BoC :x\] ~ A: \[./vow\].a 
The Identity (id) and Cut rules express the re- 
flexivity and transitivity of the derivability rela- 
tion. Each connective has a Right \[R\] and Left \[L\] 
rule, showing, respectively, how to prove and how 
to use a type containing that connective. Note 
that this formulation includes a system of term 
3A sequent F ::~ A indicates that the succedent for- 
mula A can be derived from the structured configur- 
ation of antecedent formulas F. F\[(I )1\] represents rep- 
resents the result of replacing (I) with ~l in F\[(I)\]. 
labelling, whereby each type is associated with a 
lambda term (giving objects TYPE:term) in ac- 
cordance with the well known Curry-Howard in- 
terpretation of proofs, with the consequence that 
complete proofs return a term that records the 
proof's functional or natural deduction structure. 
Such terms play an important role in the approach 
to be developed. The system of term labelling has 
the following features. All antecedent formulas are 
associated with variables. Cut inferences are in- 
terpreted via substitution (with a\[b/v\] represent- 
ing the substitution of b for v in a). For implic- 
ational connectives, Left and Right inferences are 
interpreted via functional application and abstrac- 
tion, respectively. A different abstraction and ap- 
plication operator is used for each implicational 
connective, so that terms fully record the proof 
structure. The implication o (resp. o_%) has ap- 
plication operator ~ (resp. ~ ), giving aT  b (resp. 
b-~ a) for 'a applied to b', and abstraction oper- 
ator \[g-\] (resp. \[-~\]), e.g. \[~\]v.a (resp. \[-~\]v.a) for 
abstraction over v in a. Product Right inferences 
are interpreted via system specific pairing. For 
product Left inferences, a term such as \[z/vow\].a 
represents the substitution of z for v+w in a. 4 
We must next consider the issue of resource 
structure and its consequences for linguistic deriv- 
ation. If we assume for the above sequent system 
that antecedents are (non-empty) binarily brack- 
etted sequences of types then we have a version of 
the non-associative Lambek calculus (NL: Lam- 
bek 1961), where deduction is sensitive to the or- 
der and bracketting of assumptions, each of which 
must be used precisely once in a deduction. NL  is 
a system whose implicit notion of linguistic struc- 
ture is binary branching tree-like objects, and this 
rigidity of structure is reflected in the type com- 
binations that the system allows. 5 However, it is 
possible to undermine sensitivity to aspects of re- 
source structure by inclusion of structural rules, 
which act to modify the structure of the ante- 
cedent configuration. For example, the follow- 
ing rules of Permutation (\[P\]) and Association 
(\[A\]) undermine sensitivity to the linear order and 
bracketting of assumptions, respectively: 
r\[(S:b, C:c)*\] ~ A:a 
\[P\] 
r\[(c:c. B:b)*\] ~ A:a 
F\[(B:b, (C:c, D:d)°) °\] =,, A:a 
\[A\] 
F\[((B:b,C:c) °, D:d) °\] =~ A:a 
Adding \[P\] to NL  gives NLP ,  a system whose 
implicit notion of linguistic structure is binary 
4This operator is a compact notation for one used 
with linear logic by Benton et hi. (1992). 
5Such characteristics of structure are reflected in 
the systems of algebraic semantics that are provided 
for such logics. Discussion of such issues, however, is 
beyond the scope of the present paper. 
128 
branching mobiles (since order is undermined only 
within the confines of the given bracketting). 
Adding \[A\] to NL  gives a version of associative 
Lambek calculus (L: Lambek 1961), which views 
language purely in terms of strings of tokens. If 
both \[A\] and \[P\] are added, we have the system LP  
(van Benthem 1983), corresponding to a fragment 
of linear logic (Girard 1987), which views lan- 
guage in terms of unordered multisets of tokens. 
I will adopt special notations for the operators 
of these systems: NL:{®,~,~}, NLP:{O,O--,--~}, 
L:{*,\,/}, LP:{®,-o,o--}. 
The proof below illustrates this formulation, 
showing the composition of two implicationals (a 
combination which requires associativity). If we 
simplify the resulting proof term, using \[~'\] for A 
and left-right juxtaposition for application, we get 
the familiar composition term Az.x(yz). 
X:v=vX:v  Y:w=v Y:w 
i\[ ~L\] (X--Y:z, Y:w)* ~ X : (~.w Z:z =~ Z:z 
\[:L\] 
(X--Y:z, (Y--Z:y, Z:z)*)* ~ X: (x . (yTz ) )  
~ . .-:-:7:--7-, : - - -W,  . . . . .  \[A\] 
((X~-Y:, ,Y--Z:y) ,Z:z)  =~ X:(xT(y*~z))_~ _ 
- - ~ .  V - - -  . . -ZT .~- -Z  - . -~o  - - -T -g . -  . . . . . . .  \[ R\] (X Y:x, (Y~Z:y) ~ X*--Z:\[7\]z.(x;(y;z)) 
3 St ructura l  moda l i t ies  
Structural modalities are unary operators that 
allow controlled involvement of structural rules 
which are otherwise unavailable in a system, 6 
e.g. a modified structural rule might be included 
that may only apply where one of the types af- 
fected by its use are marked with a given modal- 
ity. For example, a unary operator /k, allowing 
controlled permutation, might have the following 
rules (where/kF indicates a configuration i which 
all types are of the form/kX): 
AF =~ A:a F\[B: b\] =~ A:a 
\[~R\] \[ALl 
Z~F =~ Z~A:a F\[Z~B :b\] =¢. A:a 
F\[(ZXB :b, C:c) °\] =~ A:a 
\[Z~P\] 
r\[(c:c, ZXB:b)*\] ~ A:a 
The Left and Right rules are as for necessity in 
$4. The restricted permutation rule \[/kP\] allows 
any formula of the form AX to permute freely, i.e. 
undermining linear order for just this assumption. 
The left rule \[/kL\] allows a/k-marking to be freely 
discarded. Such a modality has been used in treat- 
ments of extraction. The calculus L 'respects' lin- 
ear order, so that s/up or np\s corresponds to a 
sentence missing a NP at its right or left peri- 
phery. However, a type s/(/knp) corresponds to 
a sentence missing NP at some position, and so 
6The original structural modalities are linear lo- 
gic's 'exponentials'. See Barry et at. (1991) for some 
structural modalities having suggested linguistic uses. 
is suitable for use in the general case of extrac- 
tion, where a NP extraction site may occur non 
peripherally within a clause. Proof A in Figure 1 
illustrates (proof terms are omitted to simplify). 
Structural modalities allow that stronger logics 
may be embedded within weaker ones, via embed- 
ding translations, i.e. so that a sequent is deriv- 
able in the stronger logic iff its translation into 
the weaker logic plus relevant modalities is also 
derivable. For example, using /k, a fragment of 
LP  may be embedded within L. 
4 Re la t ing  subst ructura l  leve ls  
hnagine how an LP  formula X®Y might be 
'translated' into the system 'L plus /~' ( 'LA').  
This formula shows the interderivability X®Y ¢~ 
YQX. A corresponding 'reordering' interderivah- 
ility would be allowed if X®Y translated to any 
of (/kX).(/XY) or X.(AY) or (AX).Y, i.e. with 
either or both of the product subcomponents mod- 
alised, (indicating that subcomponents X and Y 
may legitimately appear in either order). Such 
/ks may be 'dropped', e.g. (/kX)o(/kY) =¢, XoY, 
a step corresponding to selection of one of the per- 
mitted orders. This latter transformation suggests 
X®Y ~ X*Y as a theorem of a mixed logic, re- 
vealing a natural relation between XQY and X.Y, 
as if the former were in some sense 'implicitly 
modalised' relative to the latter. 
Consider next the implicational Xo-Y, which 
exhibits the interderivability Xo--Y ¢:~ Y--oX. 
This suggests the translation X/(AY), for which 
we observe X/(/kY) ¢::, (/kY)\X. L/k allows 
X/Y :¢. X/(AY), suggesting X/Y ~ Xo-Y as a 
'linking' theorem of a mixed logic revealing the 
natural relation between Xo--Y and X/Y. 
The above discussion suggests how the systems 
L and LP  might be interrelated in a logic where 
they coexist. Such relation might be justified 
in terms of allowing transitions involving forget- 
ting of information, i.e. X®Y indicates that both 
orders are possible for its subeomponents, and 
the move to XeY (or YoX) involves forgetting 
one of these possibilities. Generalising from this 
ease, we expect that for any two sublogics in a 
mixed system, with products oi and oj, where 
the former is the stronger logic (including more 
structural rules), we will observe transformations: 
oi XoiY ::¢, XoiY and X°~(Y :=~ X*--Y. 
5 A hybr id  sys tem 
Consider how we might formulate a mixed logic 
of the kind just suggested, what I term a hybrid 
system - -  one which includes the logics that arise 
by choices from just \[A\] and \[P\]. The sequent rules 
shown in (2) may still be used for each of the levels 
(with o serving as a placeholder for the various 
product operators), as may the axiom and Cut 
rule in (1). In addition, we require the following 
129 
(A) np::# np s :~ s (B) 
\[\L\] 
(rip, rip\s)* =~ s PP ::~ PP \[\]L\] 
(np, ((np\s)/pp, pp)°)° =~ s np ::~ nPr/Llt/J 
(np, ((((np\s)/pp)/np, np)', pp)°)° ::# s \[ZXL\] 
(np, ((((np\s)/pp)/np, Z~np) °, pp)')° :ez s 
\[A\] 
(np, (((np\s)/pp)/np, (Anp, pp)°)°)° ::~ s \[/xp\] 
(np, (((np\s)/pp)/np, (pp, Anp)')')" ::~ s 
\[A\] 
(np, ((((np\s)/pp)/np, pp)°, ~np)°) * ::~ s \[A\] 
((np, (((np\s)/pp)/np, pp)°)°, Anp) ° ::~ s 
(rel/(s/Z~np), (np, (((np\s)/pp)/np, pp)*)°)° ::~ 
who Kim sent 
structural rules, whose side conditions (shown to 
the right) restrict heir involvement to the relevant 
subsystems. 
np =~ np s :~s  
.... \[\L\] 
(np, np\s)* ~, s pp ::~ pp 
\[\]L\] 
(np, ((np\s)/pp, pp)')" ~ s np .  nP"VvJ 
(np, ((((np\s)/pp)/np, np) °, pp)*)" :ez s \[<\] 
(np, ((((np\s)/pp)/np, np) ®, pp)°)° =~ s - \[<\] 
(np, ((((np\s)/pp)/np, rip) ®, pp)®)" ~ s \[<\] 
(rip, ((((np\s)/pp)/np, .p) ®, pp)®)® ~ s 
(rip, (((np\s)/pp)/np, (rip, pp)®)®)® ~ s 
\[P\] 
(np, (((np\s)/pp)/np, (pp, np)®)®) ® ~ s 
\[A\] 
(np, ((((np\s)/pp)/.p, pp)®, np)®) ® ~ s 
\[A\] 
((np, (((np\s)/pp)/np, pp)®)®, np)® => s \[o-R\] 
away rel =~ rel (np, (((np\s)/pp)/np, pp)®)® ::~ so--np 
(rel/(so-np), (np, (((np\s)/pp)/np, p)®)®)° :ez rel t/L\] 
who Kim sent away 
Figure 1: Two derivations of who Kim serif away 
6 Word  order  and  NL  semant ics  
(3) r\[(B:b, C:c) °\] . A:a f 
r\[(C:c, B:b) °\] ::> A:a\[pjl t 0 E {e,®} 
r\[(B:b, (c:c, D:d)°) °\] =v A:a 
\[A\] L° E {*,®} 
F\[((B: b, C:c) °, D:d) 0\] => A:a 
With only the rules (1,2,3), we would have a sys- 
tem where different substructural levels coexist, 
but without interrelation. Such interrelation is 
effected by the rule (4), which allows a bracket 
pair of one system (oj) to be replaced by that of 
another system (oi), just in case the latter's sys- 
tem exhibits greater freedom of resource usage (as 
indicated by the relation <, which orders the sub- 
systems thus: ® < {O, e} < ®). 
(4) r\[(B: b, C: c) °i\] =~ A:a \[<\] 
F\[(B:b, C:c) °,\] ~ A : .  
The following proofs are for the two transforma- 
tions discussed in the previous ection, illustrating 
'natural relations' between levels. 
B=>B A=>A A=>A B=>B 
\[.R\] i/L\] 
(A, B)" :~ A.B (A/B, B)" ::~ A 
(A, B) ® :0 A*B \[<\] (A/B, B) ® :0 A \[<\] 
\[®L\] \[o-R\] 
A®B => A*B A/B => Ao-B 
The converse transitions are not derivable, since 
the converse substitution of brackets under \[<\] is 
not allowed. Corresponding transformations may 
be derived for the connectives of any two appro- 
priately related subsystems, e.g. A®B => AOB, 
A~B ~ A/B. 
Proof terms have been used in categorial work 
for handling the natural language semantic on- 
sequences of type combinations. The above terms, 
however, encode distinctions unwanted for this 
purpose, but can easily be simplified to terms us- 
ing only a single abstractor (A) and with applica- 
tion notated by left-right juxtaposition, e.g.: 
\ [~\]z .x i (z- ;  v) ~ Az.x(vz) 
A standard method for handling the word order 
consequences of categorial proofs uses the linear 
order of formulas in the proven sequent in the ob- 
vious way. This method cannot be used for the 
hybrid approach, because for any theorem, there 
exist other theorems for combining the same ante- 
cedent ypes under any possible ordering thereof. 7 
The word order consequences of proofs are in- 
stead determined from the normal forms of proofs 
terms, s which encode all the relevant information 
from the proof, and in particular, the directional, 
etc, information encoded by the connectives of the 
types combined. Consider the labelled theorem: 
(A/B: x, C~B: y)e =~ Ao-C:  \[~\]z.x;  (z~ y) 
rAny proof of r :0 A may be extended by multiple 
\[<\] inferences to give a proof of F' =v A, where F' is 
just like F except all bracket pairs are 0 ®. Extending 
this proof with repeated uses of \[P\] and \[A\], we can 
attain any desired reordering of the component types. 
SNormalisation of proof terms is defined by the fol- 
lowing conversion rules: 
(\['~\]v.a)"; b ~ ,\[b/,'\] 
b~ (\[~\]v.a) ~ a\[b/v\] 
\[(b, d°/,,o,,,\].a ...'~ a\[bl,,, ~lw\] 
¢ 
(\[b/,,o'wl.a)'z~ .-* \[b/vo'w\].(a':c) 
e-;(\[blvo',,,\].a) ~ \[b/,,o'wl.C~-Za) 
130 
For the result label's subterm x~(z~y) ,  the dir- 
ectionality of applications uggests the ordering 
x -< z -< y. Abstraction discounts z as an 'or- 
derable element', leaving just x -4 y, i.e. with 
A/B preceding C~B, as we would expect. For a 
term x~y,  the permutativity of ® suggests that 
both orderings of x and y are possible. Note 
however that word order determination must be 
sensitive to the specific modes of structuring and 
their properties, e.g. the non-associativity of ® 
implies an 'integrity' for y, z in x~ (y~ z) exclud- 
ing y -< x -< z as a possible order, despite the 
permutativity of ®. To determine word order, a 
normalised proof term is first transformed to give 
a yield term, in which its orderable lements are 
structured in accordance with their original man- 
ner of combination, e.g. 
xZ(z - ;y )  ~ x.(zOy) 
\[(v'~ w)/x.v\].(=, v)° ~ (v®w) 
Yield terms may be restructured in ways appro- 
priate to the different operators (e.g. subterms 
p®q may be rewritten to q®p, etc.). Possible lin- 
ear orders can simply be 'read off' the variants 
a yield term under restructuring, e.g. x'~(y~z)  
gives orders xyz and yzx, since its yield term is 
x®(y®z), whose only variant is (y®z)®x 
7 The linguistic model 
I noted earlier that extensive use of structural 
modalities tends to result in very complex ana- 
lyses. This fact tends to favour the selection of 
stronger systems for the base level logic, a move 
which is associated with loss of possibly useful re- 
source sensitivity. This problem does not arise for 
the hybrid approach, which freely allows us to use 
weaker logics for constructing lexical types that 
richly encode linguistic information. 
Consider firstly a hybrid system that includes 
only the two levels L and LP ,  of which clearly L 
will in general be more appropriate for linguistic 
description. Under the view of how levels are re- 
lated that I have argued for, the linkage between 
these two levels is such that X®Y ::~ XeY is a 
theorem, alongside which we will find also (e.g.) 
X/Y ::~ Xo-Y. Note that it is the latter theorem, 
and its variants, that most crucially bear upon 
what is gained by the move to a mixed system, 
given that the lexical encoding of linguistic in- 
formation predominantly involves the assignment 
of functional types. Hence, a lexical functor con- 
structed with L connectives may be transformed 
to one involving LP  connectives, allowing us to 
exploit the structural freedom of that level. 9 For 
9Note that with the converse direction of linkage, 
as advanced by Moortgat & Oehrle (1993), but with 
lexical functors till constructed using L connectives, 
no practical use could be made of the permutative LP 
level in this minimal mixed system. 
example, in handling extraction, a 'sentence miss- 
ing NP somewhere' may be derived as so-np, as 
in proof B of Figure 1. 
Consider next a system that includes also the 
non-associative l vel NL. This additional level 
might be adopted as the principal one for lex- 
ieal specification, giving various advantages for 
linguistic analysis. For example, by having a lex- 
ieal element subcategorise for a complement that 
is some 'non-associative functor' (i.e. of the form 
At~B or B~A), we could be sure that the com- 
plement aken was a 'natural projection' of some 
lexical head, and not one built by composition 
(or other associativity based combination). On 
the other hand, where the freedom of associative 
combination is required, it is still available, given 
that we have (e.g.) XtgY ==v X/Y. Some categorial 
treatments of non-constituent coordination have 
depended crucially (either implicitly or explicitly) 
on associativity allowing, for example, subject and 
verb to be combined without other verb comple- 
ments, making possible a 'like-with-like' coordina- 
tion treatment of non-constituent coordination as 
in e.g. (i) Mary spoke and Susan whispered, to Bill 
(where the conjuncts are each analysed as s/pp). 
In a purely non-associative system, such as NL, 
such an analysis is excluded. In the hybrid ap- 
proach, however, this treatment is still possible 
even with non-associative l xical types, provided 
coordination is done at the associative level, e.g. 
the conjuncts of (i) can be derived and coordin- 
ated as s/np since: np, (np~s)t~pp =~ s/pp is a 
theorem as in (5). Furthermore, since we have 
also Xt~Y =~ Xo--Y, such non-associative l xical 
specification is still compatible with the treatment 
of extraction described above. 
(5 )  np  ~ np  s =~ s 
\[~L\] 
(up, np~s) q) ::~ s pp :=~ pp 
(np, ((np~s)~pp, p)O)o =~ s \[<\] 
(np, ((np~s)~pp, p)*)e =~ s 
.\[<1 (np, ((np~s)~pp, p)')" =l~ s 
\[A\] 
((np, (np~s)~pp)*, pp)* =~ s \[/a\] 
(np, (np~s)~pp)' =~ s/pp 
It is hoped that the above simple examples 
of linguistic uses will serve to give a feeling for 
the general character of the linguistic model that 
the hybrid approach would favour, i.e. one with 
very rich lexical encoding of syntactic informa- 
tion, achieved using predominantly the implica- 
tional connectives of the weakest available logic, 
with the stronger logics of the mixed system al- 
lowing less informative (but hence also more 'flex- 
ible') descriptions of (functional) linguistic ob- 
jects. The above example systems clearly do not 
exhaust he possibilities for 'rich lexical encoding'. 
For example, it seems likely that lexical assign- 
131 
ments should specify headedness or dependency 
information, as in the calculi of Moortgat & Mor- 
rill (1991). 
8 Parsing with hybrid grammars 
It is well known that parsing (theorem proving) 
with sequent formalisms uffers efficiency prob- 
lems as a consequence of derivational equivalence 
(or 'spurious ambiguity'), i.e. from the existence 
of multiple proofs that assign the same meaning 
for a given type combination. Alternative but 
equivalent formalisations of the above system are 
possible. Hepple (1993), for example, provides a 
natural deduction formalisation. Such a formal- 
isation should readily provide the basis for a chart 
based approach to parsing hybrid logic grammars, 
after the manner of existing chart methods for use 
with L (KSnig 1990; Hepple 1992). A further 
promising possibility for efficient parsing of hy- 
brid system grammars involves proof net reformu- 
lation, following a general scheme for such refor- 
mulation described in Moortgat (1992). However, 
the precise character of either chart or proof net 
based methods for parsing hybrid system gram- 
mars is a topic requiring further research. 
9 Concluding Remarks 
As noted earlier, the approach described here 
has strong similarities to one developed independ- 
ently by Moortgat & Oehrle (1993), although they 
take a precisely opposing view as to what consti- 
tute the appropriate directions of linkage between 
levels. One consequence of this difference is to 
allow them a more standard treatment of word 
order (not requiring an enriched term labelling al- 
gebra). The most important 'practical' difference 
is that the differing directions of 'natural move- 
ment' will tend to foster very different linguistic 
accounts. We may ask which of these two contra- 
dicting views of linkage is correct. Hepple (TO AP- 
PEAR.) suggests that both views are possible, and 
may even be compatible for realisation within a 
single system, further extending the possibilities 
for the multimodal systems that can be construc- 
ted and for their potential utility. 
In conclusion, I have described an approach in 
which different sublogics coexist and are interre- 
lated within a single categorial system. This gives 
an approach which allows access to a range of dif- 
ferent modes of characterising linguistic structure, 
where the specific mode of description that is used 
in any case can be chosen as that which is appro- 
priate for the aspect of linguistic phenomena that 
is under consideration. 
References 
Barry, G., Hepple, M., Leslie, N. & Morrill, G. 
1991. 'Proof figures and structural operators for 
categorial grammar'. Proc. of EA CL-5, Berlin. 
van Benthem, J. 1983. 'The semantics of variety 
in Categorial Grammar.' Report 83-29, Dept. 
of Mathematics, Simon Fraser University. Also 
in W. Buszkowski el al (Eds), Calegorial Gram- 
mar, John Benjamins. 1988. 
Benton, N., Bierman, G., de Paiva, V. & Hyland, 
M. 1992. 'Term assignment for intuitionistic 
linear logic.' Technical Report, Cambridge Uni- 
versity Computer Laboratory. 
Girard, J-Y. 1987. 'Linear Logic'. Theoretical 
Computer Science 59, ppl-102. 
Hepple, M. 1992. 'Chart Parsing Lambek Gram- 
mars: Modal Extensions and Incrementality.' 
Proc. of COLING-9~. 
Hepple, M. 1993. 'A general framework for hy- 
brid substructural categorial logics.' Ms, IRCS, 
UPenn. Available as IRCS Report 94-14. 
Hepple, M. 1994. 'Discontinuity and the Lambek 
Calculus'. Proc. of COLING-94. 
Hepple, M. TO APPEAR. Hybrid Categorial Lo- 
gics. Proceedings of Deduction and Language 
Workshop. Special edition of the Bulletin of 
the Interest Group in Pure and Applied Logics. 
KSnig, E. 1990. 'The complexity of parsing 
with extended categorial grammars', Proc. of 
COLING-90. 
Lambek, J. 1958. The mathematics of sentence 
structure. American Mathematical Monthly 65. 
Lambek, J. 1961. 'On the calculus of syntactic 
types.' R. Jakobson (Ed), Structure of Lan- 
guage and its Mathematical Aspects, Proceed- 
ings of the Symposia in Applied Mathematics 
XII, American Mathematical Society. 
Moortgat, M. 1992. 'Labelled Deductive Systems 
for categorial theorem proving.' In: P. Dekker 
& M. Stokhof (Eds), Proceedings of Eighth Am- 
sterdam Colloquium, University of Amsterdam. 
Moortgat, M. & Morrill, G. 1991. 'Heads and 
Phrases: Type Calculus for Dependency and 
Constituency.' To appear: Journal of Lan- 
guage, Logic and Information. 
Moortgat, M. & Oehrle, R. 1993. Logical para- 
meters and linguistic variation. Lecture notes 
on categorial grammar. Fifth European Sum- 
mer School in Logic, Language and Information, 
Lisbon. 
Moortgat, M. & Oehrle, R. 1994. 'Adjacency, de- 
pendency and order'. Proceedings of Ninth Am- 
sterdam Colloquium. 
Morrill, G. 1990. 'Rules and Derivations: Bind- 
ing Phenomena nd Coordination in Categorial 
Logic.' DYANA Deliverable R1.2.D, ESPRIT 
Basic Research Action BR3175. 
Morrill, G. & Solias, M.T. 1993. 'Tuples, Discon- 
tinuity, and Gapping in Categorial Grammar.' 
Proc. of EACL-6, Utrecht. 
Oehrle, R. & Zhang, S. 1989. 'Lambek calculus 
and Preposing of Embedded Subjects.' Chicago 
Linguistic Society 25. 
132 
