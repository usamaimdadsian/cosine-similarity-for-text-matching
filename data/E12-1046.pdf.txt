Proceedings of the 13th Conference of the European Chapter of the Association for Computational Linguistics, pages 449–459,
Avignon, France, April 23 - 27 2012. c©2012 Association for Computational Linguistics
Detecting Highly Confident Word Translations from Comparable
Corpora without Any Prior Knowledge
Ivan Vulic´ and Marie-Francine Moens
Department of Computer Science
KU Leuven
Celestijnenlaan 200A
Leuven, Belgium
{ivan.vulic,marie-francine.moens}@cs.kuleuven.be
Abstract
In this paper, we extend the work on using
latent cross-language topic models for iden-
tifying word translations across compara-
ble corpora. We present a novel precision-
oriented algorithm that relies on per-topic
word distributions obtained by the bilin-
gual LDA (BiLDA) latent topic model.
The algorithm aims at harvesting only the
most probable word translations across lan-
guages in a greedy fashion, without any
prior knowledge about the language pair,
relying on a symmetrization process and
the one-to-one constraint. We report our re-
sults for Italian-English and Dutch-English
language pairs that outperform the current
state-of-the-art results by a significant mar-
gin. In addition, we show how to use the al-
gorithm for the construction of high-quality
initial seed lexicons of translations.
1 Introduction
Bilingual lexicons serve as an invaluable resource
of knowledge in various natural language pro-
cessing tasks, such as dictionary-based cross-
language information retrieval (Carbonell et al.,
1997; Levow et al., 2005) and statistical machine
translation (SMT) (Och and Ney, 2003). In or-
der to construct high quality bilingual lexicons for
different domains, one usually needs to possess
parallel corpora or build such lexicons by hand.
Compiling such lexicons manually is often an ex-
pensive and time-consuming task, whereas the
methods for mining the lexicons from parallel cor-
pora are not applicable for language pairs and do-
mains where such corpora is unavailable or miss-
ing. Therefore the focus of researchers turned to
comparable corpora, which consist of documents
with partially overlapping content, usually avail-
able in abundance. Thus, it is much easier to build
a high-volume comparable corpus. A representa-
tive example of such a comparable text collection
is Wikipedia, where one may observe articles dis-
cussing the similar topic, but strongly varying in
style, length and vocabulary, while still sharing a
certain amount of main concepts (or topics).
Over the years, several approaches for min-
ing translations from non-parallel corpora have
emerged (Rapp, 1995; Fung and Yee, 1998; Rapp,
1999; Diab and Finch, 2000; De´jean et al., 2002;
Chiao and Zweigenbaum, 2002; Gaussier et al.,
2004; Fung and Cheung, 2004; Morin et al., 2007;
Haghighi et al., 2008; Shezaf and Rappoport,
2010; Laroche and Langlais, 2010), all sharing
the same Firthian assumption, often called the
distributionial hypothesis (Harris, 1954), which
states that words with a similar meaning are likely
to appear in similar contexts across languages.
All these methods have examined different rep-
resentations of word contexts and different meth-
ods for matching words across languages, but they
all have in common a need for a seed lexicon of
translations to efficiently bridge the gap between
languages. That seed lexicon is usually crawled
from the Web or obtained from parallel corpora.
Recently, Li et al. (2011) have proposed an ap-
proach that improves precision of the existing
methods for bilingual lexicon extraction, based
on improving the comparability of the corpus un-
der consideration, prior to extracting actual bilin-
gual lexicons. Other methods such as (Koehn and
Knight, 2002) try to design a bootstrapping algo-
rithm based on an initial seed lexicon of transla-
tions and various lexical evidences. However, the
quality of their initial seed lexicon is disputable,
449
since the construction of their lexicon is language-
pair biased and cannot be completely employed
on distant languages. It solely relies on unsatis-
factory language-pair independent cross-language
clues such as words shared across languages.
Recent work from Vulic´ et al.(2011) utilized
the distributional hypothesis in a different direc-
tion. It attempts to abrogate the need of a seed lex-
icon as a prerequisite for bilingual lexicon extrac-
tion. They train a cross-language topic model on
document-aligned comparable corpora and intro-
duce different methods for identifying word trans-
lations across languages, underpinned by per-
topic word distributions from the trained topic
model. Due to the fact that they deal with compa-
rable Wikipedia data, their translation model con-
tains a lot of noise, and some words are poorly
translated simply because there are not enough
occurrences in the corpus. The goal of this work is
to design an algorithm which will learn to harvest
only the most probable translations from the per-
word topic distributions. The translations learned
by the algorithm then might serve as a highly ac-
curate, precision-based initial seed lexicon, which
can then be used as a tool for translating source
word vectors into the target language. The key ad-
vantage of such a lexicon lies in the fact that there
is no language-pair dependent prior knowledge
involved in its construction (e.g., orthographic
features). Hence, it is completely applicable to
any language pair for which there exist sufficient
comparable data for training of the topic model.
Since comparable corpora often construct a
very noisy environment, it is of the utmost impor-
tance for a precision-oriented algorithm to learn
when to stop the process of matching words, and
which candidate pairs are surely not translations
of each other. The method described in this paper
follows this intuition: while extracting a bilingual
lexicon, we try to rematch words, keeping only
the most confident candidate pairs and disregard-
ing all the others. After that step, the most con-
fident candidate pairs might be used with some
of the existing context-based techniques to find
translations for the words discarded in the pre-
vious step. The algorithm is based on: (1) the
assumption of symmetry, and (2) the one-to-one
constraint. The idea of symmetrization has been
borrowed from the symmetrization heuristics in-
troduced for word alignments in SMT (Och and
Ney, 2003), where the intersection heuristics is
employed for a precision-oriented algorithm. In
our setting, it basically means that we keep a
translation pair (wSi , wTj ) if and only if, after the
symmetrization process, the top translation candi-
date for the source word wSi is the target word wTi
and vice versa. The one-to-one constraint aims
at matching the most confident candidates during
the early stages of the algorithm, and then exclud-
ing them from further search. The utility of the
constraint for parallel corpora has already been
evaluated by Melamed (2000).
The remainder of the paper is structured as
follows. Section 2 gives a brief overview of
the methods, relying on per-topic word distribu-
tions, which serve as the tool for computing cross-
language similarity between words. In Section
3, we motivate the main assumptions of the al-
gorithm and describe the full algorithm. Sec-
tion 4 justifies the underlying assumptions of
the algorithm by providing comparisons with a
current-state-of-the-art system for Italian-English
and Dutch-English language pairs. It also con-
tains another set of experiments which inves-
tigates the potential of the algorithm in build-
ing a language-pair unbiased seed lexicon, and
compares the lexicon with other seed lexicons.
Finally, Section 5 lists conclusion and possible
paths of future work.
2 Calculating Initial Cross-Language
Word Similarity
This section gives a quick overview of the Cue
method, the TI method, and their combination,
described by Vulic´ et al.(2011), which proved to
be the most efficient and accurate for identify-
ing potential word translations once the cross-
language BiLDA topic model is trained and the
associated per-topic distributions are obtained for
both source and target corpora. The BiLDA
model we use is a natural extension of the stan-
dard LDA model and, along with the definition of
per-topic word distributions, has been presented
in (Ni et al., 2009; De Smet and Moens, 2009;
Mimno et al., 2009). BiLDA takes advantage of
the document alignment by using a single variable
that contains the topic distribution ?. This vari-
able is language-independent, because it is shared
by each of the paired bilingual comparable doc-
uments. Topics for each document are sampled
from ?, from which the words are then sampled
in conjugation with the vocabulary distribution ?
450
zSji wSji
? ?
zTji wTji
?
?
?
MS
MT
D
Figure 1: Plate model for bilingual Latent Dirichlet Allocation
1
Figure 1: The bilingual LDA (BiLDA) model
(for language S) and ? (for language T).
2.1 Cue Method
A straightforward approach to express similarity
between words tries to emphasize the associative
relation in a natural way - modeling the proba-
bility P (wT2 |wS1 ), i.e. the probability that a tar-
get word wT2 will be generated as a response to a
cue source word wS1 , where the link between the
words is established via the shared topic space:
P (wT2 |wS1 ) =
?K
k=1 P (wT2 |zk)P (zk|wS1 ), where
K denotes the number of cross-language topics.
2.2 TI Method
This approach constructs word vectors over a
shared space of cross-language topics, where val-
ues within vectors are the TF-ITF scores (term
frequency - inverse topic frequency), computed
in a completely analogical manner as the TF-
IDF scores for the original word-document space
(Manning and Schu¨tze, 1999). Term frequency,
given a source word wSi and a topic zk, measures
the importance of the word wSi within the particu-
lar topic zk, while inverse topical frequency (ITF)
of the word wSi measures the general importance
of the source word wSi across all topics. The fi-
nal TF-ITF score for the source word wSi and the
topic zk is given by TF ?ITFi,k = TFi,k ·ITFi.
The TF-ITF scores for target words associated
with target topics are calculated in an analogical
manner and the standard cosine similarity is then
used to find the most similar target word vectors
for a given source word vector.
2.3 Combining the Methods
Topic models have the ability to build clusters of
words which might not always co-occur together
in the same textual units and therefore add ex-
tra information of potential relatedness. These
two methods for automatic bilingual lexicon ex-
traction interpret and exploit underlying per-topic
word distributions in different ways, so combin-
ing the two should lead to even better results. The
two methods are linearly combined, with the over-
all score given by:
SimTI+Cue(wS1 , wT2 ) = ?SimTI(wS1 , wT2 )
+ (1? ?)SimCue(wS1 , wT2 ) (1)
Both methods posses several desirable proper-
ties. According to Griffiths et al. (2007), the con-
ditioning for the Cue method automatically com-
promises between word frequency and semantic
relatedness since higher frequency words tend to
have higher probability across all topics, but the
distribution over topics P (zk|wS1 ) ensures that se-
mantically related topics dominate the sum. The
similar phenomenon is captured by the TI method
by the usage of TF, which rewards high frequency
words, and ITF, which assigns a higher impor-
tance for words semantically more related to a
specific topic. These properties are incorporated
in the combination of the methods. As the final
result, the combined method provides, for each
source word, a ranked list of target words with as-
sociated scores that measure the strength of cross-
language similarity. The higher the score, the
more confident a translation pair is. We will use
this observation in the next section during the al-
gorithm construction.
The lexicon constructed by solely applying the
combination of these methods without any addi-
tional assumptions will serve as a baseline in the
results section.
3 Constructing the Algorithm
This section explains the underlying assumptions
of the algorithm: the assumption of symmetry
and the one-to-one assumption. Finally, it pro-
vides the complete outline of the algorithm.
3.1 Assumption of Symmetry
First, we start with the intuition that the assump-
tion of symmetry strengthens the confidence of a
translation pair. In other words, if the most prob-
able translation candidate for a source word wS1 is
a target word wT2 and, vice versa, the most prob-
able translation candidate of the target word wT2
451
is the source word wS1 , and their TI+Cue scores
are above a certain threshold, we can claim that
the words wS1 and wT2 are a translation pair. The
definition of the symmetric relation can also be
relaxed. Instead of observing only one top can-
didate from the lists, we can observe top N can-
didates from both sides and include them in the
search space, and then re-rank the potential candi-
dates taking into account their associated TI+Cue
scores and their respective positions in the list.
We will call N the search space depth. Here is
the outline of the re-ranking method if the search
space consists of the top N candidates on both
sides:
1. Given is a source word wSs , for which we ac-
tually want to find the most probable trans-
lation candidate. Initialize an empty list
Finals = {} in which target language
candidates with their recalculated associated
scores will be stored.
2. Obtain TI+Cue scores for all target words.
Keep only N best scoring target candidates:
{wTs,1, . . . , wTs,N} along with their respective
scores.
3. For each target candidate from
{wTs,1, . . . , wTs,N} acquire TI+Cue scores
over the entire source vocabulary. Keep only
N best scoring source language candidates.
Each word wTs,i ? {wTs,1, . . . , wTs,N} now
has a list of N source language candidates
associated with it: {wSi,1, wSi,2 . . . , wSi,N}.
4. For each target candidate word wTs,i ?
{wTs,1, . . . , wTs,N}, do as follows:
(a) If one of the words from the associated
list is the given source word wSs , re-
member: (1) the position m, denoting
how high in the list the word wSs was
found, and (2) the associated TI+Cue
score SimTI+Cue(wTs,i, wSi,m = wSs ).
Calculate:
(i) G1,i = SimTI+Cue(wSs , wTs,i)/i
(ii) G2,i = SimTI+Cue(wTs,i, wSi,m)/m
Following that, calculate GMi, the ge-
ometric mean of the values G1,i and
G2,i1: GMi =
?
G1,i ·G2,i. Add a tu-
1Scores G1,i and G2,i are structured in such a way to
balance between positions in the ranked lists and the TI+Cue
scores, since they reward candidate words which have high
TI+Cue scores associated with them, and penalize words if
they are found lower in the list of potential candidates.
ple (wTs,i, GMi) to the list Finals.
(b) If we have reached the end of the list
for the target candidate word wTs,i with-
out finding the given source word wSs ,
and i < N , continue with the next word
wTs,i+1. Do not add any tuple to Finals
in this step.
5. If the list Finals is not empty, sort the tuples
in the list in descending order according to
their GMi scores. The first element of the
sorted list contains a word wTs,high, the final
translation candidate of the source word wSs .
If the list Finals is not empty, the final re-
sult of this process will be the cross-language
word translation pair (wSs , wTs,high).
We will call this symmetrization process the
symmetrizing re-ranking. It attempts at push-
ing the correct cross-language synonym to the top
of the candidates list, taking into account both
the strength of similarities defined through the
TI+Cue scores in both directions, and positions
in ranked lists. A blatant example depicting how
this process helps boost precision is presented in
Figure 2. We can also design a thresholded variant
of this procedure by imposing an extra constraint.
When calculating target language candidates for
the source word wSs in Step 2, we proceed fur-
ther only if the first target candidate scores above
a certain threshold P and, additionally, in Step 3,
we keep lists of N source language candidates
for only those target words for which the first
source language candidate in their respective list
scored above the same threshold P . We will call
this procedure the thresholded symmetrizing re-
ranking, and this version will be employed in the
final algorithm.
3.2 One-to-one Assumption
Melamed (2000) has already established that most
source words in parallel corpora tend to translate
to only one target word. That tendency is modeled
by the one-to-one assumption, which constrains
each source word to have at most one translation
on the target side. Melamed’s paper reports that
this bias leads to a significant positive impact on
precision and recall of bilingual lexicon extraction
from parallel corpora. This assumption should
also be reasonable for many types of comparable
corpora such as Wikipedia or news corpora, which
are topically aligned or cover similar themes. We
452
abdij monasterymonkabbey kloostermonnikbenedictijnkloostermonnikabdijabdijmonnikklooster0.22370.15860.1155 0.30490.17400.13380.22660.14940.11310.25490.14960.1288
Figure 2: An example where the assumption of symmetry and the one-to-one assumption clearly help boost
precision. If we keep top Nc = 3 candidates from both sides, the algorithm is able to detect that the correct
Dutch-English translation pair is (abdij, abbey). The TI+Cue method without any assumptions would result with
an indirect association (abdij, monastery). If only the one-to-one assumption was present, the algorithm would
greedily learn the correct direct association (monastery, klooster), remove those words from their respective
vocabularies and then again result with another indirect association (abdij, monk). By additionally employing
the assumption of symmetry with the re-ranking method from Subsection 3.1, the algorithm correctly learns
the translation pair (abdij, abbey). Correct translation pairs (klooster, monastery) and (monnik, monk) are also
obtained. Again here, the pair (monnik, monk) would not be obtained without the one-to-one assumption.
will prove that the assumption leads to better pre-
cision scores even for bilingual lexicon extraction
from such comparable data. The intuition be-
hind introducing this constraint is fairly simple.
Without the assumption, the similarity scores be-
tween source and target words are calculated in-
dependently of each other. We will illustrate the
problem arising from the independence assump-
tion with an example.
Suppose we have an Italian word arcipelago,
and we would like to detect its correct English
translation (archipelago). However, after the
TI+Cue method is employed, and even after the
symmetrizing re-ranking process from the previ-
ous step is used, we still acquire a wrong transla-
tion candidate pair (arcipelago, island). Why is
that so? The word (arcipelago) (or its translation)
and the acquired translation (island) are semanti-
cally very close, and therefore have similar distri-
butions over cross-language topics, but island is a
much more frequent term. The TI+Cue method
concludes that two words are potential trans-
lations whenever their distributions over cross-
language topics are much more similar than ex-
pected by chance. Moreover, it gives a preference
to more frequent candidates, so it will eventually
end up learning an indirect association2 between
words arcipelago and island. The one-to-one as-
sumption should mitigate the problem of such in-
direct associations if we design our algorithm in
such a way that it learns the most confident direct
associations2 first:
2A direct association, as defined in (Melamed, 2000), is
an association between two words (in this setting found by
the TI+Cue method) where the two words are indeed mutual
translations. Otherwise, it is an indirect association.
453
1. Learn the correct direct association pair
(isola, island).
2. Remove the words isola and island from
their respective vocabularies.
3. Since island is not in the vocabulary, the
indirect association between arcipelago and
island is not present any more. The algo-
rithm learns the correct direct association
(arcipelago, archipelago).
3.3 The Algorithm
3.3.1 One-Vocabulary-Pass
First, we will provide a version of the algorithm
with a fixed threshold P which completes only
one pass through the source vocabulary. Let V S
denote a given source vocabulary, and let V T de-
note a given target vocabulary. We need to define
several parameters of the algorithm. Let N0 be
the initial maximum search space depth for the
thresholded symmetrizing re-ranking procedure.
In Figure 2, the current depth Nc is 3, while the
maximum depth might be set to a value higher
than 3. The algorithm with the fixed threshold P
proceeds as follows:
1. Initialize the maximum search space depth
NM = N0. Initialize an empty lexicon L.
2. For each source word wSs ? V S do:
(a) Set the current search space depthNc =
1.3
(b) Perform the thresholded symmetrizing
re-ranking procedure with the current
search space set toNc and the threshold
P . If a translation pair (wSs , wTs,high) is
found, go to the Sub-step 2(d).
(c) If a translation pair is not found, and
Nc < NM , increment the current
search space Nc = Nc+1 and return to
the previous Sub-step 2(b). If a trans-
lation pair is not found and Nc = NM ,
return to Step 2 and proceed with the
next word.
(d) For the found translation pair
(wSs , wTs,high), remove words wSs
and wTs,high from their respective
3The intuition here is simple – we are trying to detect
a direct association as high as possible in the list. In other
words, if the first translation candidate for the source word
isola is the target word island, and, vice versa, the first
translation candidate for the target word island is isola, we
do not need to expand our search depth, because these two
words are the most likely translations.
vocabularies: V S = V S ? {wSs } and
V T = V T ? {wTs,high} to satisfy the
one-to-one constraint. Add the pair
(wSs , wTs,high) to the lexicon L.
We will name this procedure the one-
vocabulary-pass and employ it later in an iter-
ative algorithm with a varying threshold and a
varying maximum search space depth.
3.3.2 The Final Algorithm
Let us now define P0 as the initial threshold, let
Pf be the threshold at which we stop decreas-
ing the value for threshold and start expanding
our maximum search space depth for the thresh-
olded symmetrizing re-ranking, and let decp be a
value for which we decrease the current threshold
in each step. Finally, let Nf be the limit for the
maximum search space depth, andNM denote the
current maximum search space depth. The final
algorithm is given by:
1. Initialize the maximum search space depth
NM = N0 and the starting threshold P =
P0. Initialize an empty lexicon Lfinal.
2. Check the stopping criterion: If NM > Nf ,
go to Step 5, otherwise continue with Step 3.
3. Perform the one-vocabulary-pass with the
current values of P and NM . Whenever a
translation pair is found, it is added to the
lexicon Lfinal. Additionally, we can also
save the threshold and the depth at which that
pair was found.
4. Decrease P : P = P ? decp, and check
if P < Pf . If still not P < Pf , go to
Step 3 and perform the one-vocabulary-pass
again. Otherwise, if P < Pf and there are
still unmatched words in the source vocab-
ulary, reset P : P = P0, increment NM :
NM = NM + 1 and go to Step 2.
5. Return Lfinal as the final output of the algo-
rithm.
The parameters of the algorithm model its be-
havior. Typically, we would like to setP0 to a high
value, and N0 to a low value, which makes our
constraints strict and narrows our search space,
and consequently, extracts less translation pairs
in the first steps of the algorithm, but the set
of those translation pairs should be highly accu-
rate. Once it is not possible to extract any more
pairs with such strict constraints, the algorithm re-
454
laxes them by lowering the threshold and expand-
ing the search space by incrementing the max-
imum search space depth. The algorithm may
leave some of the source words unmatched, which
is also dependent on the parameters of the algo-
rithm, but, due to the one-to-one assumption, that
scenario also occurs whenever a target vocabulary
contains more words than a source vocabulary.
The number of operations of the algorithm also
depends on the parameters, but it mostly depends
on the sizes of the given vocabularies. The com-
plexity isO(|V S ||V T |), but the algorithm is com-
putationally feasible even for large vocabularies.
4 Results and Discussion
4.1 Training Collections
The data used for training of the models is col-
lected from various sources and varies strongly in
theme, style, length and its comparableness. In
order to reduce data sparsity, we keep only lem-
matized non-proper noun forms.
For Italian-English language pair, we use
18, 898 Wikipedia article pairs to train BiLDA,
covering different themes with different scopes
and subtopics being addressed. Document align-
ment is established via interlingual links from the
Wikipedia metadata. Our vocabularies consist of
7, 160 Italian nouns and 9, 116 English nouns.
For Dutch-English language pair, we use 7, 602
Wikipedia article pairs, and 6, 206 Europarl doc-
ument pairs, and combine them for training.4 Our
final vocabularies consist of 15, 284 Dutch nouns
and 12, 715 English nouns.
Unlike, for instance, Wikipedia articles, where
document alignment is established via interlin-
gual links, in some cases it is necessary to perform
document alignment as the initial step. Since our
work focuses on Wikipedia data, we will not get
into detail with algorithms for document align-
ment. An IR-based method for document align-
ment is given in (Utiyama and Isahara, 2003;
Munteanu and Marcu, 2005), and a feature-based
method can be found in (Vu et al., 2009).
4.2 Experimental Setup
All our experiments rely on BiLDA training
with comparable data. Corpora and software for
4In case of Europarl, we use only the evidence of docu-
ment alignment during the training and do not benefit from
the parallelness of the sentences in the corpus.
BiLDA training are obtained from Vulic´ et al.
(2011). We train the BiLDA model with 2000
topics using Gibbs sampling, since that number
of topics displays the best performance in their
paper. The linear interpolation parameter for the
combined TI+Cue method is set to ? = 0.1.
The parameters of the algorithm, adjusted on a
set of 500 randomly sampled Italian words, are set
to the following values in all experiments, except
where noted different: P0 = 0.20, Pf = 0.00,
decp = 0.01, N0 = 3, and Nf = 10.
The initial ground truth for our source vocab-
ularies has been constructed by the freely avail-
able Google Translate tool. The final ground truth
for our test sets has been established after we
have manually revised the list of pairs obtained by
Google Translate, deleting incorrect entries and
adding additional correct entries. All translation
candidates are evaluated against this benchmark
lexicon.
4.3 Experiment I: Do Our Assumptions Help
Lexicon Extraction?
With this set of experiments, we wanted to test
whether both the assumption of symmetry and
the one-to-one assumption are useful in improv-
ing precision of the initial TI+Cue lexicon extrac-
tion method. We compare three different lexicon
extraction algorithms: (1) the basic TI+Cue ex-
traction algorithm (LALG-BASIC) which serves
as the baseline algorithm5, (2) the algorithm from
Section 3, but without the one-to-one assump-
tion (LALG-SYM), meaning that if we find a
translation pair, we still keep words from the
translation pair in their respective vocabularies,
and (3) the complete algorithm from Section 3
(LALG-ALL). In order to evaluate these lexicon
extraction algorithms for both Italian-English and
Dutch-English, we have constructed a test set of
650 Italian nouns, and a test set of 1000 Dutch
nouns of high and medium frequency. Precision
scores for both language pairs and for all lexicon
extraction algorithms are provided in Table 1.
Based on these results, it is clearly visible that
both assumptions our algorithm makes are valid
5We have also tested whether LALG-BASIC outperforms
a method modeling direct co-occurrence, that uses cosine
to detect similarity between word vectors consisting of TF-
IDF scores in the shared document space (Cimiano et al.,
2009). Precision using that method is significantly lower,
e.g. 0.5538 vs. 0.6708 of LALG-BASIC for Italian-English.
455
LEX Algorithm Italian-English Dutch-English
LALG-BASIC 0.6708 0.6560
LALG-SYM 0.6862 0.6780
LALG-ALL 0.7215 0.7170
Table 1: Precision scores on our test sets for the 3 dif-
ferent lexicon extraction algorithms.
and contribute to better overall scores. Therefore
in all further experiments we will use the LALG-
ALL extraction algorithm.
4.4 Experiment II: How Does Thresholding
Affect Precision?
The next set of experiments aims at exploring how
precision scores change while we gradually de-
crease threshold values. The main goal of these
experiments is to detect when to stop with the ex-
traction of translation candidates in order to pre-
serve a lexicon of only highly accurate transla-
tions. We have fixed the maximum search space
depth N0 = Nf = 3. We used the same test sets
from Experiment I. Figure 3 displays the change
of precision in relation to different threshold val-
ues, where we start harvesting translations from
the threshold P0 = 0.2 down to Pf = 0.0. Since
our goal is to extract as many correct translation
pairs as possible, but without decreasing the pre-
cision scores, we have also examined what impact
this gradual decrease of threshold also has on the
number of extracted translations. We have opted
for the F? measure (van Rijsbergen, 1979):
F? = (1 + ?2)
Precision ·Recall
?2 · Precision+Recall (2)
Since our task is precision-oriented, we have set
? = 0.5. F0.5 measure values precision as twice
as important as recall. The F0.5 scores are also
provided in Figure 3.
4.5 Experiment III: Building a Seed Lexicon
Finally, we wanted to test how many accurate
translation pairs our best scoring LALG-ALL al-
gorithm is able to acquire from the entire source
vocabulary, with very high precision still remain-
ing paramount. The obtained highly-precise seed
lexicon then might be employed for an additional
bootstrapping procedure similar to (Koehn and
Knight, 2002; Fung and Cheung, 2004) or sim-
ply for translating context vectors as in (Gaussier
et al., 2004).
0.65
0.7
0.75
0.8
0.85
0.9
0.95
1
Pre
cisi
on/
F-s
cor
e
00.050.10.150.2
Threshold
IT-EN Precision
IT-EN F-score
NL-EN Precision
NL-EN F-score
Pre
cisi
on/
F-s
cor
e
Pre
cisi
on/
F-s
cor
e
Pre
cisi
on/
F-s
cor
e
Figure 3: Precision and F0.5 scores in relation to
threshold values. We can observe that the algorithm
retrieves only highly accurate translations for both lan-
guage pairs while the threshold goes down from value
0.2 to 0.1, while precision starts to drop significantly
after the threshold of 0.1. F0.5 scores also reach their
peaks within that threshold region.
If we do not know anything about a given lan-
guage pair, we can only use words shared across
languages as lexical clues for the construction of
a seed lexicon. It often leads to a low precision
lexicon, since many false friends are detected.
For Italian-English, we have found 431 nouns
shared between the two languages, of which 350
were correct translations, leading to a precision
of 0.8121. As an illustration, if we take the
first 431 translation pairs retrieved by LALG-
ALL, there are 427 correct translation pairs, lead-
ing to a precision of 0.9907. Some pairs do
not share any orthographic similarities: (uccello,
bird), (tastiera, keyboard), (salute, health), (terre-
moto, earthquake) etc.
Following Koehn and Knight (2002), we have
also employed simple transformation rules for the
adoption of words from one language to another.
The rules specific to the Italian-English transla-
tion process that have been employed are: (R1) if
an Italian noun ends in?ione, but not in?zione,
strip the final e to obtain the corresponding En-
glish noun. Otherwise, strip the suffix ?zione,
and append ?tion; (R2) if a noun ends in ?ia,
but not in ?zia or ?fia, replace the suffix ?ia
with ?y. If a noun ends in ?zia, replace the suf-
fix with ?cy and if a noun ends in ?fia, replace
456
Italian-English Dutch-English
Lexicon # Correct Precision F0.5 # Correct Precision F0.5
LEX-1 350 0.8121 0.1876 898 0.8618 0.2308
LEX-2 766 0.8938 0.3473 1376 0.9011 0.3216
LEX-LALG 782 0.8958 0.3524 1106 0.9559 0.2778
LEX-1+LEX-LALG 1070 0.8785 0.4290 1860 0.9082 0.3961
LEX-R+LEX-LALG 1141 0.9239 0.4548 1507 0.9642 0.3500
LEX-2+LEX-LALG 1429 0.8926 0.5102 2261 0.9217 0.4505
Table 2: A comparison of different lexicons. For lexicons employing our LALG-ALL algorithm, only translation
candidates that scored above the threshold P = 0.11 have been kept.
it with ?phy. Similar rules have been introduced
for Dutch-English: the suffix ?tie is replaced by
?tion, ?sie by ?sion, and ?teit by ?ty.
Finally, we have compared the results of the
following constructed lexicons:
• A lexicon containing only words shared
across languages (LEX-1).
• A lexicon containing shared words and trans-
lation pairs found by applying the language-
specific transformation rules (LEX-2).
• A lexicon containing only translation pairs
obtained by the LALG-ALL algorithm that
score above a certain threshold P (LEX-
LALG).
• A combination of the lexicons LEX-1 and
LEX-LALG (LEX-1+LEX-LALG). Non-
matching duplicates are resolved by taking
the translation pair from LEX-LALG as the
correct one. Note that this lexicon is com-
pletely language-pair independent.
• A lexicon combining only translation pairs
found by applying the language-specific
transformation rules and LEX-LALG (LEX-
R+LEX-LALG).
• A combination of the lexicons LEX-2 and
LEX-LALG, where non-matching dupli-
cates are resolved by taking the translation
pair from LEX-LALG if it is present in
LEX-1, and from LEX-2 otherwise (LEX-
2+LEX-LALG).
According to the results from Table 2, we can
conclude that adding translation pairs extracted
by our LALG-ALL algorithm has a major posi-
tive impact on both precision and coverage. Ob-
taining results for two different language pairs
proves that the approach is generic and appli-
cable to any other language pairs. The previ-
ous approach relying on work from Koehn and
Knight (2002) has been outperformed in terms of
precision and coverage. Additionally, we have
shown that adding simple translation rules for lan-
guages sharing same roots might lead to even bet-
ter scores (LEX-2+LEX-LALG). However, it is
not always possible to rely on such knowledge,
and the usefulness of the designed LALG-ALL
algorithm really comes to the fore when the algo-
rithm is applied on distant language pairs which
do not share many words and cognates, and word
translation rules cannot be easily established. In
such cases, without any prior knowledge about the
languages involved in a translation process, one is
left with the linguistically unbiased LEX-1+LEX-
LALG lexicon, which also displays a promising
performance.
5 Conclusions and Future Work
We have designed an algorithm that focuses on ac-
quiring and keeping only highly confident trans-
lation candidates from multilingual comparable
corpora. By employing the algorithm we have
improved precision scores of the methods rely-
ing on per-topic word distributions from a cross-
language topic model. We have shown that the al-
gorithm is able to produce a highly reliable bilin-
gual seed lexicon even when all other lexical clues
are absent, thus making our algorithm suitable
even for unrelated language pairs. In future work,
we plan to further improve the algorithm and use
it as a source of translational evidence for differ-
ent alignment tasks in the setting of non-parallel
corpora.
Acknowledgments
The research has been carried out in the frame-
work of the TermWise Knowledge Platform (IOF-
KP/09/001) funded by the Industrial Research
Fund K.U. Leuven, Belgium.
457
References
Jaime G. Carbonell, Jaime G. Yang, Robert E. Fred-
erking, Ralf D. Brown, Yibing Geng, Danny Lee,
Yiming Frederking, Robert E, Ralf D. Geng, and
Yiming Yang. 1997. Translingual information re-
trieval: A comparative evaluation. In Proceedings
of the 15th International Joint Conference on Arti-
ficial Intelligence, pages 708–714.
Yun-Chuang Chiao and Pierre Zweigenbaum. 2002.
Looking for candidate translational equivalents in
specialized, comparable corpora. In Proceedings
of the 19th International Conference on Computa-
tional Linguistics, pages 1–5.
Philipp Cimiano, Antje Schultz, Sergej Sizov, Philipp
Sorg, and Steffen Staab. 2009. Explicit versus
latent concept models for cross-language informa-
tion retrieval. In Proceedings of the 21st Inter-
national Joint Conference on Artifical Intelligence,
pages 1513–1518.
Wim De Smet and Marie-Francine Moens. 2009.
Cross-language linking of news stories on the Web
using interlingual topic modeling. In Proceedings
of the CIKM 2009 Workshop on Social Web Search
and Mining, pages 57–64.
Herve´ De´jean, E´ric Gaussier, and Fatia Sadat. 2002.
An approach based on multilingual thesauri and
model combination for bilingual lexicon extraction.
In Proceedings of the 19th International Conference
on Computational Linguistics, pages 1–7.
Mona T. Diab and Steve Finch. 2000. A statis-
tical translation model using comparable corpora.
In Proceedings of the 6th Triennial Conference on
Recherche d’Information Assiste´e par Ordinateur
(RIAO), pages 1500–1508.
Pascale Fung and Percy Cheung. 2004. Mining very-
non-parallel corpora: Parallel sentence and lexicon
extraction via bootstrapping and EM. In Proceed-
ings of the Conference on Empirical Methods in
Natural Language Processing, pages 57–63.
Pascale Fung and Lo Yuen Yee. 1998. An IR ap-
proach for translating new words from nonparallel,
comparable texts. In Proceedings of the 17th Inter-
national Conference on Computational Linguistics,
pages 414–420.
Eric Gaussier, Jean-Michel Renders, Irina Matveeva,
Cyril Goutte, and Herve´ De´jean. 2004. A geomet-
ric view on bilingual lexicon extraction from com-
parable corpora. In Proceedings of the 42nd Annual
Meeting of the Association for Computational Lin-
guistics, pages 526–533.
Thomas L. Griffiths, Mark Steyvers, and Joshua B.
Tenenbaum. 2007. Topics in semantic represen-
tation. Psychological Review, 114(2):211–244.
Aria Haghighi, Percy Liang, Taylor Berg-Kirkpatrick,
and Dan Klein. 2008. Learning bilingual lexicons
from monolingual corpora. In Proceedings of the
46th Annual Meeting of the Association for Compu-
tational Linguistics, pages 771–779.
Zellig S. Harris. 1954. Distributional structure. Word
10, (23):146–162.
Philipp Koehn and Kevin Knight. 2002. Learning a
translation lexicon from monolingual corpora. In
Proceedings of the ACL-02 Workshop on Unsuper-
vised Lexical Acquisition, pages 9–16.
Audrey Laroche and Philippe Langlais. 2010. Re-
visiting context-based projection methods for term-
translation spotting in comparable corpora. In Pro-
ceedings of the 23rd International Conference on
Computational Linguistics, pages 617–625.
Gina-Anne Levow, Douglas W. Oard, and Philip
Resnik. 2005. Dictionary-based techniques for
cross-language information retrieval. Information
Processing and Management, 41:523–547.
Bo Li, Eric Gaussier, and Akiko Aizawa. 2011. Clus-
tering comparable corpora for bilingual lexicon ex-
traction. In Proceedings of the 49th Annual Meeting
of the Association for Computational Linguistics:
Human Language Technologies, pages 473–478.
Christopher D. Manning and Hinrich Schu¨tze. 1999.
Foundations of Statistical Natural Language Pro-
cessing. MIT Press, Cambridge, MA, USA.
I. Dan Melamed. 2000. Models of translational equiv-
alence among words. Computational Linguistics,
26:221–249.
David Mimno, Hanna M. Wallach, Jason Naradowsky,
David A. Smith, and Andrew McCallum. 2009.
Polylingual topic models. In Proceedings of the
2009 Conference on Empirical Methods in Natural
Language Processing, pages 880–889.
Emmanuel Morin, Be´atrice Daille, Koichi Takeuchi,
and Kyo Kageura. 2007. Bilingual terminology
mining - using brain, not brawn comparable cor-
pora. In Proceedings of the 45th Annual Meeting
of the Association for Computational Linguistics,
pages 664–671.
Dragos Stefan Munteanu and Daniel Marcu. 2005.
Improving machine translation performance by ex-
ploiting non-parallel corpora. Computational Lin-
guistics, 31:477–504.
Xiaochuan Ni, Jian-Tao Sun, Jian Hu, and Zheng
Chen. 2009. Mining multilingual topics from
Wikipedia. In Proceedings of the 18th International
World Wide Web Conference, pages 1155–1156.
Franz Josef Och and Hermann Ney. 2003. A sys-
tematic comparison of various statistical alignment
models. Computational Linguistics, 29(1):19–51.
Reinhard Rapp. 1995. Identifying word translations in
non-parallel texts. In Proceedings of the 33rd An-
nual Meeting of the Association for Computational
Linguistics, pages 320–322.
Reinhard Rapp. 1999. Automatic identification of
word translations from unrelated English and Ger-
man corpora. In Proceedings of the 37th Annual
458
Meeting of the Association for Computational Lin-
guistics, pages 519–526.
Daphna Shezaf and Ari Rappoport. 2010. Bilingual
lexicon generation using non-aligned signatures. In
Proceedings of the 48th Annual Meeting of the As-
sociation for Computational Linguistics, pages 98–
107.
Masao Utiyama and Hitoshi Isahara. 2003. Reliable
measures for aligning Japanese-English news arti-
cles and sentences. In Proceedings of the 41st An-
nual Meeting of the Association for Computational
Linguistics, pages 72–79.
C. J. van Rijsbergen. 1979. Information Retrieval.
Butterworth.
Thuy Vu, Ai Ti Aw, and Min Zhang. 2009. Feature-
based method for document alignment in compara-
ble news corpora. In Proceedings of the 12th Con-
ference of the European Chapter of the Association
for Computational Linguistics, pages 843–851.
Ivan Vulic´, Wim De Smet, and Marie-Francine Moens.
2011. Identifying word translations from compara-
ble corpora using latent topic models. In Proceed-
ings of the 49th Annual Meeting of the Association
for Computational Linguistics: Human Language
Technologies, pages 479–484.
459
