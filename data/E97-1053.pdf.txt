A Uniform Approach to Underspecification and Parallelism 
J oach im N iehren  
Programming Systems Lab 
Univers i tgt  des Saar landes 
Saarbrf icken,  Germany 
niehren©ps, uni- sb. de 
Manf red  P inka l  
Depar tment  of 
Computat iona l  L inguist ics 
UniversitS~t des Saar landes 
Saarbrf icken,  Germany 
pinkal@coli, uni- sb. de 
Peter  Ruhrberg  
Depar tment  of 
Computat iona l  L inguist ics 
Univers i t / i t  des Saar landes 
Saarbrf icken,  Germany 
peru@coli, uni-sb, de 
Abst ract  
We propose a unified framework in which 
to treat semantic underspecification and 
parallelism phenomena in discourse. The 
framework employs a constraint language 
that can express equality and subtree rela- 
tions between finite trees. In addition, our 
constraint language can express the equal- 
ity up-to relation over trees which cap- 
tures parallelism between them. The con- 
straints are solved by context unification. 
We demonstrate he use of our framework 
at the examples of quantifier scope, ellipsis, 
and their interaction. 1 
1 In t roduct ion  
Traditional model-theoretic semantics of natural 
languages (Montague, 1974) has assumed that se- 
mantic information, processed by composition and 
reasoning processes, is available in a completely 
specified form. During the last few years, the phe- 
nomenon of semantic underspecification, i.e. the 
incomplete availability of semantic information in 
processing, has received increasing attention. Sev- 
eral aspects of underspecification have been fo- 
cussed upon, motivated mainly by computational 
considerations: the ambiguity and openness of lex- 
ical meaning (Pustejovsky, 1995; Copestake and 
Briscoe, 1995), referential underspecification (Asher, 
1993), structural semantic underspecification caused 
by syntactic ambiguities (Egg and Lebeth, 1995), 
and by the underdetermination f scope relations 
(Alshawi and Crouch, 1992; Reyte, 1993). In ad- 
dition, external factors such as insufficient coverage 
1The research reported in this paper has been sup- 
ported by the SFB 378 at the UniversitS.t des Saarlandes 
and the Esprit Working Group CCL II (EP 22457). 
of the grammar, time-constraints for parsing, and 
most importantly the kind of incompleteness, uncer- 
tainty, and inconsistency, coming with spoken input 
are coming more into the focus of semantic process- 
ing (Bos et al., 1996; Pinkal, 1995). 
The aim of semantic underspecification is to pro- 
duce compact representations of the set of possible 
readings of a discourse. While the readings of a dis- 
course may be only partially known, the interpre- 
tations of its components are often strongly corre- 
lated. In this paper, we are concerned with a uni- 
form treatment of underspecification a d of phenom- 
ena of discourse-semantic parallelism. Some typical 
parallelism phenomena are ellipsis, corrections, and 
variations. We illustrate them here by some exam- 
ples (focus-bearing phrases are underlined): 
(1) John speaks Chinese. Bill too. 
(2) John speaks Japanese. - No, he speaks 
Chinese. 
(3) ??? - Bill speaks Chinese, too. 
Parallelism guides the interpretation process for the 
above discourses. This is most obvious in the case of 
ellipsis interpretation (1), but is also evident for the 
resolution of the anaphor in the correction in (2), 
and in the variation case (3) where the context is 
unknown and has to be inferred. 
The challenge is to integrate a treatment of paral- 
lelism with underspecification, such as in cases of 
the interaction of scope and ellipsis. Problematic 
examples like (4) have been brought o attention by 
(Hirschbuehler, 1982). The example demonstrated 
that earlier treatments of ellipsis based on copying 
of the content of constituents are insufficient for such 
kinds of parallelism. 
(4) Two European languages are spoken by many 
linguists, and two Asian ones (are spoken by 
many linguists), too. 
410 
The first clause of (4) is scope-ambiguous between 
two readings. The second, elliptic one, is too. Its 
interpretation is indicated by the part in parenthe- 
ses. The parallelism imposed by ellipsis requires the 
scope of the quantifiers in the elliptical clause to 
be analogous to the scope of the quantifiers in the 
antecedent clause. Thus, the conjunction of both 
clauses has only two readings: Either the interpre- 
tation is the wide scope existential one in both cases 
(two specific European languages as well as two spe- 
cific Asian languages are widely known among lin- 
guists), or it is the narrow scope existential one 
(many linguists speak two European languages, and 
many linguists speak two Asian languages). 
A natural approach for describing underspecified se- 
mantic information is to use an appropriate con- 
straint language. We use constraints interpreted 
over finite trees. A tree itself represents a formula 
of some semantic representation language. This ap- 
proach is very flexible in allowing various choices 
for the particular semantic representation language, 
such as first-order logic, intensional logic (Dowty, 
Wall, and Peters, 1981), or Discourse Representa- 
tion Theory, DRT, (Kamp and Reyle, 1993). The 
constraint approach contrasts with theories uch as 
Reyles UDRT (1993) which stresses the integration 
of the levels of semantic representation language and 
underspecified descriptions. 
For a description language we propose the use of con- 
text constraints over finite trees which have been in- 
vestigated in (Niehren, Pinkal, and Ruhrberg, 1997). 
This constraint language can express equality and 
subtree relations between finite trees. More gen- 
erally it can express the "equality up-to" relation 
over trees, which captures (non-local) parallelism be- 
tween trees. The general case of equality up-to con- 
straints cannot be handled by a system using subtree 
plus equality constraints only. The problem of solv- 
ing context constraints is known as context unifica- 
tion, which is a subcase of linear second-order unifi- 
cation (L~vy, 1996; Pinkal, 1995). There is a com- 
plete and correct semi-decision procedure for solving 
context constraints. 
Context unification allows to treat the interaction 
of scope and ellipsis. Note that in example (4) the 
trees representing the semantics of the source and 
target clause must be equal up to the positions cor- 
responding to the contrasting elements (two Euro- 
pean languages / two Asian languages). Thus, this 
is a case where the additional expressive power of 
context constraints i crucial. In this paper, we elab- 
orate on the example of scope and ellipsis interac- 
tion. The framework appears to extend, however, to 
all kinds of cases where structural underspecification 
and discourse-semantic parallelism interact. 
In Section 2, we will describe context unification, 
and present some results about its formal proper- 
ties and its relation to other formalisms. Section 3 
demonstrates the application to scope underspeci- 
fication, to ellipsis, and to the combined cases. In 
Section 4, the proposed treatment is compared to re- 
lated approaches in computational semantics. Sec- 
tion 5 gives an outlook on future work. 
2 Context  Un i f i ca t ion  
Context unification is the problem of solving con- 
text constraints over finite trees. The notion of con- 
text unification stems from (L6vy, 1996) whereas 
the problem originates from (Comon, 1992) and 
(Schmidt-Schaul3, 1994). Context unification has 
been formally defined and investigated by the au- 
thors in (Niehren, Pinkal, and Ruhrberg, 1997). 
Here, we select and summarize relevant results on 
context unification from the latter. 
Context unification subsumes tring unification (see 
(Baader and Siekmann, 1993) for an overview) and 
is subsumed by linear second-order unification which 
has been independently proposed by (L@vy, 1996) 
and (Pinkal, 1995). The decidability of context uni- 
fication is an open problem. String unification has 
been proved decidable by (Makanin, 1977). The 
decidability of linear second-order unification is an 
open problem too whereas second-order unification 
is known to be undecidable (Goldfarb, 1981). 
The syntax and semantics of context constraints are 
defined as follows. We assume an infinite set of first- 
order variables ranged over by X, Y, Z, an infinite set 
of second-order variables ranged over by C, and a 
set of function symbols ranged over by f ,  that are 
equipped with an arity n > 0. Nullary function 
symbols are called constants. Context constraints 
~o are defined by the following abstract syntax: 
t ::= x I f ( t l , . . . , t , )  \[ C(t) 
~P : : :  t : t l  I ~A~ I
A (second-order) term t is either a first-order vari- 
able X, a construction f ( t l , . . . ,  tn) where the arity 
o f f  is n, or an application C(t). A context constraint 
is a conjunction of equations between second-order 
terms. 
Semantically, we interpret first-order variables X as 
finite constructor trees, which are first-order terms 
without variables, and second-order variables C as 
context functions that we define next. A context with 
411 
and 
Figure 1: The equality up-to relation 
hole X is a term t that does not contain any other 
variable than X and has exactly one occurrence of 
X. A conlezt function 7 is a function from trees 
to trees such that there exists a variable X and a 
context t with hole X satisfying the equation: 
7(~r) = t\[~r/X\] for all trees or. 
Note that context functions can be described by lin- 
ear second-order lambda terms of the form AX.t 
where X occurs exactly once in the second-order 
term t. Let a be a variable assignment that maps 
first-order variables to finite trees and second-order 
variables to context functions. The interpretation 
(~(t) of a term t under a is the finite tree defined as 
follows: 
(~(a(tl,...,tn)) = a(c~(tl) , . . . ,  ~(tn)) 
= 
A solution of a context constraint ~ is a variable as- 
signment a such that a(t) = a(t ' )  for all equations 
t = t' in 9. A context constraint is called satisfi- 
able if it has a solution. Context unification is the 
satisfiability problem of context constraints. 
Context constraints (plus existential quantification) 
can express subtree constraints over finite trees. A 
subtree constraint has the form X<<X' and is inter- 
preted with respect to the subtree relation on finite 
trees. A subtree relation ¢r<<a ~ holds if cr is a subtree 
of cr I, i.e. if there exists a context function 7 such 
that a'  = 7(a). Thus, the following equivalence is 
valid over finite trees: 
X<<X' ~ ~C(X' = C(X)) 
Context constraints are also more general than 
equality up-to constraints over finite trees, which al- 
low to describe parallel tree structures. An equality 
up-to constraint has the form X1/X~=Y1/Y~ and is 
interpreted with respect to the equality up-to rela- 
tion on finite trees. Given finite trees al,cr~, cr2,a~, 
the equality up-to relation ai/a~=a2/a~ holds if ~r~ 
is equal to ~2 up-to one position p where al has the 
subtree a~ and ~2 the subtree a S. This is depicted in 
Figure 1. In this case, there exists a context function 
7 such that al = 7(a l )  and a2 = 7(a~). In other 
words, the following equivalence holds: 
X/X '=Y/Y '  +-+ 3C(X=C(X' )  AY=C(Y ' ) )  
Indeed, the satisfiability problems of context con- 
straints and equality up-to constraints over finite 
trees are equivalent. In other words, context uni- 
fication can be considered as the problem of solving 
equality up-to constraints over finite trees. 
2.1 So lv ing  Context  Const ra in ts  
There exists a correct and complete semi-decision 
procedure for context unification. This algorithm 
computes a representation of all solutions of a con- 
text constraint, in case there are any. We illustrate 
the algorithm in figure 2. There, we consider the 
constraint 
X,=@(Q(s,  c), j) A X,  =C(Xcs)  A Xc,=j 
which is also discussed in example (11)(i) as part of 
an elliptical construction. 
Our algorithm proceeds on pairs consisting of a con- 
straint and a set of variable bindings. At the begin- 
ning the set of variable bindings is empty. In case 
of termination with an empty constraint, the set of 
variable bindings describes a set of solutions of the 
initial constraint. 
Consider the run of our algorithm in figure 2. In the 
first step, Xs =@(@(s, c), j) is removed from the con- 
straint and the variable binding X8 ~-* @(@(s, c), j )  
is added. This variable binding is applied to the 
remaining constraint where X8 is substituted by 
@(@(s, c), j). The second computation step is simi- 
lar. It replace the to constraint Xcs=j by a variable 
binding Xcs ~-~ j and eliminates Xc8 in the remain- 
ing constraint. 
The resulting constraint @(@(s,c),j) = C(j) 
presents an equation between a term with a con- 
stant @ as its ("rigid") head symbol and a term with 
a context variable C as its ("flexible") head sym- 
bol. In such a case one can either apply a projection 
rule that binds C to the identity context AY.Y or an 
412 
false 
Xs=@(@(s,c),j) A Xs=C(Xc,) A Xc,=j 
l x, @(@(=, c), J) 
@(@(s,c),j)=C(X~) A Xc==j 
~ Xc, ~ j 
@(@(s, c), j)=C(j) 
c c), 
@(s, c)=C'(j) j=C'(j) 
1 
false j=j 
1 
true 
Figure 2: Solving the context constraints of example (l l)( i)  
imitation rule. Projection produces a clash of two 
rigid head symbols @ and j. Imitation presents two 
possibilities for locating the argument j of the con- 
text variable C as a subtree of the two arguments 
of the rigid head symbol @. Both alternatives lead 
to new rigid-flexible situations. The first alternative 
leads to failure (via further projection or imitation) 
as @(s, c) does not contain j as a subtree. The sec- 
ond leads to success by another projection step. 
The unique solution of the constraint in figure 2 can 
be described as follows: 
Xs ~-* @(@(8, c), j), 
Xc= ~ j, 
c AY.@(@(=, c), Y) 
The full version of (Niehren, Pinkal, and Ruhrberg, 
1997) contains discussions of two algorithms for con- 
text unification. For a discussion on decidable frag- 
ments of context constraints, we also refer to this 
paper. 
3 Underspec i f i ca t ion  and  Para l le l i sm 
In this section, we discuss the use of context unifica- 
tion for treating underspecification a d parallelism 
by some concrete xamples. The set of solutions of 
a context constraint represents the set of possible 
readings of a given discourse. The trees assigned by 
the solutions represent expressions of some seman- 
tic representation language. Here, we choose (ex- 
tensional) typed higher-order logic, HOL, (Dowty, 
Wall, and Peters, 1981). However, any other logical 
language can be used in principle, so long as we can 
represent i s syntax in terms of finite trees. 
It is important o keep our semantic representation 
language (HOL) clearly separate from our descrip- 
tion language (context constraints over finite trees). 
We assume an infinite set of HOL-variables ranged 
over by x and y. The signature of context constraints 
contains a unary function symbol lamx and a con- 
stant var. per HOL-variable x. Futhermore, we as- 
sume a binary function symbol @ that we write in 
left associative infix notation and constants like john, 
language, etc. For example the tree 
(many@language)@(lamx((spoken_by@john)@varx)) 
represents the HOL formula 
(=poke by(j 
Note that the function symbol @ represents the ap- 
plication in HOL and the function symbols lamx the 
abstraction over x in HOL. 
413 
3.1 Scope 
Scope underspecification for a sentence like (5) is 
expressed by the equations in (6): 
(5) 
(6) 
Two languages are spoken by many linguists. 
Xs = Cl((two@language)@lamx(C3(X~s))) A 
Xs  = C2((many@linguist)@lamy(C4(X~s))) A 
X~ = spoken_by@vary@var~ 
The algorithm for context unification leads to a dis- 
junction of two solved constraints given in (7) (i) 
and (ii). 
(7) (i) Xs = 
O1 ((twoQlanguage)@la mx (
Cs((many@linguist)@lamy( 
C4(spoke._by@var,@var ))))) 
(ii) Xs = 
C2 ((many@linguist)@lam,( 
C6 ((two@language)@lam~( 
C3 (spoken_by@var,@varx))))) 
The algorithm does in fact compute a third kind of 
solved constraint for (6), where none of the quan- 
tifiers two@language and many@linguist are required 
to be within the scope of each other. This possibility 
can be excluded within the given framework by us- 
ing a stronger set of equations between second-order 
terms as in (6'). Such equations can be reduced to 
context constraints via Skolemisation. 
(6') Cs = )~X.Cl(two@language@lamx(C3(X))) A 
Cs = AX.Cz(many@linguist@lamy(C4(X))) A 
Xs  = Cs(spoken_by@vary@varx) 
Both solved constraints in (7) describe infinite sets of 
solutions which arise from freely instantiating the re- 
maining context variables by arbitrary contexts. We 
need to apply a closure operation consisting in pro- 
jecting the remaining free context variables to the 
indentity context AX.X.  This gives us in some sense 
the minimal solutions to the original constraint. It 
is clear that performing the closure operation must 
be based on the information that the semantic ma- 
terial assembled so far is complete. Phenomena of 
incomplete input, or coercion, require a withholding, 
or at least a delaying of the closure operation. The 
closure operation on (7) (i) and (ii)leads to the two 
possible scope readings of (5) given in (8) (i) and 
(ii) respectively. 
(8) (i) Xs 
(two@language)@lamx( 
(many@linguist)@lamy( 
spoken_by@vary@vary)) 
(ii) Xs 
(many@linguist)@lamy( 
(two@language)@lamx( 
spoken_by@vary@varx)) 
A constraint set specifying the scope-neutral mean- 
ing information as in (6') can be obtained in a rather 
simple compositional fashion. Let each node P in 
the syntactic structure be associated with three se- 
mantic meta-variables Xp,  X~p, and Cp, and let 
I (P)  be the scope boundary for each node P . Rules 
for obtaining semantic onstraints from binary syn- 
tax trees are: 
(9) (i) For every S-node P add Xp = Cp(X~p), 
for any other node add Xp = X~p. 
(ii) I f \ [p  V R\], Q and Rare  not NP nodes, 
add X~ = XQ@Xn or X~p = XI~@XQ, 
according to HOL type. 
(iii) If \[p Q R\] or \[p R Q\], and R is an 
NP node, then add X~o = XQ@varx and 
c,(p) = :,X.Co(X,@lam.(Cl(X))). 
For example, the first two constraints in example (6') 
result from applying rule (iii), where the values for 
the quantifiers two@language and many@linguist are 
already substituted in for the variables XR in both 
cases. The quantifiers themselves are put together 
by rule (ii). The third constraint results from rule 
(i) when the semantics of X~ is filled in. The latter 
is a byproduct of the applications of rule (iii) to the 
two NPs. 
3.2 Ell ipsis 
We now look into the interpretation of examples (1) 
to (4), which exhibit forms of parallelism. Let us 
take Xs and Xt to represent he semantics of the 
source and the target clause (i.e., the first and the 
second clause of a parallel construction; the termi- 
nology is taken over from the ellipsis literature), and 
Xcs and Xct to refer to the semantic values of the 
contrast pair. The constraint set of the whole con- 
struction is the union of the constraint sets obtained 
by interpreting source and target clause independent 
of each other plus the pair of constraints given in 
(10). 
(lo) x ,  = c(xo=) ^ x ,  = c (xc , )  
414 
The equations in (10) determine that the semantics 
of the source clause and the semantics of the tar- 
get clause are obtained by embedding the represen- 
tations of the respective contrasting elements into 
the same context. In other words: Source semantics 
and target semantics must be identical up to the 
positions of the contrasting elements. 
As an example, consider the ellipsis construction of 
Sentence (1), where for simplicity we assume that 
proper names are interpreted by constants and not 
as quantifiers. It makes no difference for our treat- 
ment of parallelism. 
(11) (i) X~ = speak@chinese@john A 
Xc, = john A Xs = C(Xcs) 
(ii) Xa  = bill A Xt = C(Xot) 
By applying the algorithm for context unification to 
this constraint, in particular to part (i) as demon- 
strated in figure 2, we can compute the context C 
to be AY.(speak@chinese@Y). This yields the inter- 
pretation of the elliptical clause, which is given by 
Xt ~ speak@chinese@bill. 
Note that the treatment of parallelism refers to con- 
trasted and non-contrasted portions of the clause 
pairs rather than to overt and phonetically unreal- 
ized elements. Thus it is not specifc for the treat- 
ment of ellipsis, but can be applied to other kinds 
of parallel constructions, as well. In the correction 
pair of Sentence (2), it provides a certain unam- 
biguous reading for the pronoun, in (3), it gives 
X8 = speak@chinese@X~ as a partial description 
of the (overheard or unuttered) source clause. 
3.3 Scope and Ell ipsis 
Finally, let us look at the problem case of par- 
allelism constraints for structurally underspecified 
clause pairs. We get a combination of constraints for 
a scope underspecified source clause (12) and paral- 
lelism constraints between source and target (13). 
(12) Cs = AX.Ol((two@e_language)@lam,(C3(X))) 
A 
C~ = AX.C2( ( rnany@linguist )@lamy( C4( X ) ) ) 
A 
Xs = Cs(spoken_by@vary@varx) 
(13) X, = C(two@e_language) A 
Xt -- C(two@a_language) 
The conjunction of the constraints in (12) and (13) 
correctly allows for the two solutions (14) and (15), 
with corresponding scopings in Xs and Xt after 
closure. 2
(14) X~ 
(two@e_language)@lamx ( 
(ma ny@linguist)Qla rny ( 
spoken_by@vary@varx)) A 
X t 
(two@a_la nguage)@la m~( 
(ma ny@linguist)@lamy ( 
spoken_by@vary@varx)) A 
AY. Y @lamx( 
(many@linguist)Qlamy( 
spoken_by@vary@varx)) 
(15) Xs ~-* 
(many@linguist)@lamy( 
(two@e_language)Qlarnx( 
spoken_by@vary@vary)) A 
i t 
(many@linguist)@lamy( 
(two@a_language)@la rnx( 
spoken_by@varyQvarx)) A 
e l - -+ 
AY. (manyQlinguist)Qlamy( 
Y @lamx( 
spoken_by@vary@varx)) 
Mixed solutions, where the two quantifiers take dif- 
ferent relative scope in the source and target clause 
are not permitted by our constraints. For example, 
(16) provides no solution to the above constraints. 
(16) X 3 
(twoQe_language)@lam~ ( 
(many@linguist)Qlamy( 
spoken_by@vary@varx)) 
Xt  t--4. 
(rna ny@linguist)@la my ( 
(two@a_language)@lamx( 
spoken_by@varyQvarx)) 
2Notice that closure is applied to the solved form of 
the combined constraints (i.e. (14) and (15) respectively) 
of the two sentences here, rather than to solved forms of 
(12) and (13) separately. This reflects the dependency 
of the interpretation of the second sentence on material 
in the first one. 
415 
From the trees in (16) one cannot construct a con- 
text function to be assigned to C which solves the 
parallelism constraints in (13). 
4 Comparison to other Theories 
Standard theories for scope underspecification make 
use of subtree relations and equality relations only. 
Such relationships may be expressed on a level of a 
separate constraint language, as in our case, or be in- 
corporated into the semantic formalism itself, as it is 
done for DRT by the system of UDRT (Reyle, 1993). 
In UDRT one introduces "labels" that behave very 
much like variables for DRSes. These labels figure 
in equations as well as subordination constraints to 
express scope relations between quantifiers. Equa- 
tions and subordination constraints alone do not 
provide us with a treatment of parallelism. An idea 
that seems to come close to our notion of equal- 
ity up-to constraints is the co-indexing technique in 
(Reyle, 1995), where non-local forms of parallelism 
are treated by dependency marking on labels. We 
believe that our use of a separate constraint language 
is more transparent. 
A treatment for ellipsis interpretation which uses a 
form of higher-order unification has been proposed 
in (Dalrymple, Shieber, and Pereira, 1991) and ex- 
tended to other kinds of parallel constructions by 
(Gardent, Kohlhase, and van Leusen, 1996; Gardent 
and Kohlhase, 1996). Though related in some re- 
spects, there are formal differences and differences in 
coverage between this approach and the one we pro- 
pose. They use an algorithm for higher-order match- 
ing rather than context unification and they do not 
distinguish an object and meta language level. As 
a consequence they need to resort to additional ma- 
chinery for the treatment of scope relations, such 
as Pereira's coping calculus, described in (Shieber, 
Pereira, and Dalrymple, 1996). 
On the other hand, their approach treats a large 
number of problems of the interaction of anaphora 
and ellipsis, especially strict/sloppy ambiguities. 
Our use of context unification does not allow us to 
adopt their strategy of capturing such ambiguities 
by admitting non-linear solutions to parallelism con- 
straints. 
5 Outlook 
Extensions of context unification may be useful for 
our applications. For gapping constructions, con- 
texts with multiple holes need to be considered. The 
algorithm for context unification described in the 
complete version of (Niehren, Pinkal, and Ruhrberg, 
1997) makes use of contexts with multiple holes in 
any case. 
So far our treatment of ellipsis does not capture 
strict-sloppy ambiguities if that ambiguity is not 
postulated for the source clause of the ellipsis con- 
struction. We believe that the ambiguity can be 
integrated into the framework of context unifica- 
tion without making such a problematic assump- 
tion. This requires modifying the parallelism re- 
quirements in an appropriate way. We hope that 
while sticking to linear solutions only, one may be 
able to introduce such ambiguities in a very con- 
trolled way, thus avoiding the overgeneration prob- 
lems that come from freely abstracting multiple vari- 
able occurrences. This work is currently in progress, 
and a deeper comparison between the approaches 
has yet to be carried out. 
An implementation f a semi-decision procedure for 
context unification has been carried out by Jordi 
L6vy, and we applied it successfully to some sim- 
ple ellipsis examples. Further experimentation is 
needed. Hopefully there are decidable fragments of 
the context unification problem that are empirically 
adequate for the phenomena we wish to model. 
Re ferences  
Alshawi, H. and D. Crouch. 1992. Monotonic se- 
mantic interpretation. In 30th Annual Meeting of 
the Association of Computational Linguistics, pages 
32-38. 
Asher, Nick. 1993. Reference to abstract objects in 
discourse. Kluwer, Dordrecht. 
Bander, F. and J. Siekmann. 1993. Unification the- 
ory. In D. Gabbay, C.J. Hogger, and J.A. Robinson, 
editors, Handbook of Logic in Artificial Intelligence 
and Logic Programming. Oxford University Press. 
Bos, Johan, Bj6rn Gambi~ck, Christian Lieske, 
Yoshiki Mori, Manfred Pinkal, and Karsten Worm. 
1996. Compositional semantics in Verbmobil. In 
Proceedings of the 16th International Conference on 
Computational Linguistics, volume 1, pages 131- 
136, Ktbenhavn, Denmark, August. ACL. 
Comon, ttubert. 1992. Completion of rewrite sys- 
tems with membership constraints. In W. Kuich, ed- 
itor, Proc. 19th Int. Coll. on Automata, Languages 
and Programming, LNCS 623, Vienna. Springer- 
Verlag. 
Copestake, A. and E. J. Briscoe. 1995. Semi pro- 
ductive polysemy and sense extension. Journal of 
Semantics, 12:15-67. 
416 
Dalrymple, Maryl Stuart Shieber, and Fernando 
Pereira. 1991. Ellipsis and higher order unification. 
Linguistics and Philosophy, 14:399-452. 
Dowty, D., R. Wall, and S. Peters. 1981. Introduc- 
tion to Montague semantics. Reidel, Dordrecht. 
Egg, M. and K. Lebeth. 1995. Semantic un- 
derspecification and modifier attachment ambigui- 
ties. In J. Kilbury and R. Wiese, editors, Inte- 
grative Ansaetze in der Computerlinguistik. Duessel- 
doff, pages 19-24. 
Gardent, Cl~.ire and Michael Kohlhase. 1996. Fo- 
cus and higher-order unification. In Proceedings of 
COLING-96, Copenhagen. 
Gardent, Claire, Michael Kohlhase, and Noor van 
Leusen. 1996. Corrections and Higher-Order 
Unification. In Proceedings of KONVENS-96. De 
Gruyter, Bielefeld, Germany, pages 268-279. 
Goldfarb, W. D. 1981. The undecidability of the 
second-order unification problem. Theoretical Com- 
puter Science, 13:225-230. 
Hirschbuehler, Paul. 1982. Vp deletion and across 
the board quantifier scope. In J. Pustejovsky and 
P. Sells, editors, NELS 12, University of Massachus- 
setts, Amherst. 
Kamp, H. and U. Reyle. 1993. From Discourse to 
Logic. Kluwer, Dordrecht. 
L~vy, Jordi. 1996. Linear second order unification. 
In Proceedings of the Conference on Rewriting Tech- 
niques and Applications. Springer-Verlag. 
Makanin, G.S. 1977. The problem of solvability of 
equations in a free semigroup. Soviet Akad. Nauk 
SSSR, 223(2). 
Montague, R. 1974. The proper treatment ofquan- 
tification in ordinary english. In R. Thomason, ed- 
itor, Formal Philosophy. Selected Papers of Richard 
Montague. Yale University Press, New Haven and 
London, pages 247-271. 
Niehren, Joachim, Manfred Pinkal, and Peter 
Ruhrberg. 1997. On equality up-to constraints over 
finite trees, context unification and one-step rewrit- 
ing. In Proceedings of the l~th International Confer- 
ence on Automated Deduction. A complete verison is 
available from http://www.ps.uni-sb.de/~uiehren. 
In Press. 
Pinkal, Manfred. 1995. Radical underspecification. 
In Paul Dekker and Martin Stokhof, editors, Pro- 
ceedings of the lOth Amsterdam Colloquium, Uni- 
versity of Amsterdam. 
Pustejovsky, J. 1995. The Generative Lexicon. MIT 
press, Mambridge MA. 
Reyle, Uwe. 1993. Dealing with ambiguities by un- 
derspecification: construction, representation, and 
deduction. Journal of Semantics, 10:123-179. 
Reyle, Uwe. 1995. Co-indexing labelled DRSs to 
represent and reason with ambiguities. In S. Pe- 
ters and K. van Deemter, editors, Semantic Am- 
biguity and Underspecification. CSLI Publications, 
Stanford. 
Schmidt-SchaufS, Manfred. 1994. Unification of 
stratified second-order terms. Technical Report 
internal report 12/94, J. W. Goethe Universit~it, 
Frankfurt, Germany. 
Shieber, Stuart, Fernando Pereira, and Mary Dal- 
rymple. 1996. Interactions of scope and ellipsis. 
Linguistics and Philosophy, 19:527-552. 
41 7 
