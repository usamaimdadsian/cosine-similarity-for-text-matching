Algorithms for Analysing the Temporal Structure of 
Discourse*t 
J anet  H i t zeman,  Marc  Moens  and Claire Grover 
HCrtC Language Technology Group 
The University of Edinburgh 
2, Buccleuch Place 
Edinburgh EH8 9LW, Scotland 
J. Hitzeman@ed. ac.uk 
Abst rac t  
We describe a method for analysing 
the temporal structure of a discourse 
which takes into account the effects 
of tense, aspect, temporal adverbials 
and rhetorical structure and which 
minimises unnecessary ambiguity in 
the temporal structure• It is part 
of a discourse grammar implemented 
in Carpenter's ALE formalism. The 
method for building up the tempo- 
ral structure of the discourse com- 
bines constraints and preferences: we 
use constraints to reduce the number 
of possible structures, exploiting the 
HPSG type hierarchy and unification 
for this purpose; and we apply prefer- 
ences to choose between the remain- 
ing options using a temporal center- 
ing mechanism• We end by recom- 
mending that an underspecified repre- 
sentation of the structure using these 
techniques be used to avoid generat- 
ing the temporal/rhetorical structure 
until higher-level information can be 
used to disambiguate. 
the temporal component were to yield a de- 
tailed representation f the temporal structure 
of the discourse, taking into account he effect 
of tense, aspect and temporal expressions while 
at the same time minimising unnecessary am- 
biguity in the temporal structure. The method 
combines a constraint-based approach with an 
approach based on preferences: we exploit the 
HPSG type hierarchy and unification to arrive at 
a temporal structure using constraints placed 
on that structure by tense, aspect, rhetorical 
structure and temporal expressions, and we use 
the temporal centering preferences described 
by (Kameyama et al., 1993; Poesio, 1994) to 
rate the possibilities for temporal structure and 
choose' the best among them. 
The starting point for this work was Scha 
and Polanyi's discourse grammar (Scha 
Polanyi 1988; Priist et al 1994). For the 
implementation we extended the HPSG gram- 
mar (Pollard and Sag, 1994) which Gerald 
Penn and Bob Carpenter first encoded in 
ALE (Carpenter, 1993). This paper will focus 
on our temporal processing algorithm, and in 
particular on our analysis of narrative progres- 
sion, rhetorical structure, perfects and tempo- 
ral expressions• 
1 In t roduct ion  
In this paper we describe a method for 
analysing the temporal structure of a discourse• 
• L This component was implemented as part of a 
discourse grammar for English. The goals of 
*We would like to thank Alex Lascarides and 
Massimo Poesio for comments on an earlier draft. 
tThis work was supported in part by the Euro- 
pean Commission's programme on Linguistic Re- 
search and Engineering through project LRE-61- 
062, "Towards a declarative theory of discourse." 
2 Const ra in ts  on narrat ive  
cont inuat ions  
Probably the best known algorithm for track- 
ing narrative progression is that developed 
by Kamp (1979), Hinrichs (1981), and Par- 
tee (1984), which formalises the observation 
that an event will occur just after a preceding 
event, while a state will overlap with a pre- 
ceding event. This algorithm gives the correct 
results in examples uch as the following: 
253 
(1) John entered the room. Mary stood up. 
(2) John entered the room. Mary was 
seated behind the desk. 
In (1) the event of Mary's standing is under- 
stood to occur just after John enters the room, 
while in (2) the state in which Mary is seated is 
understood to overlap with the event of John's 
entering the room. 
However, if there is a rhetorical relationship 
between two eventualities such as causation, 
elaboration or enablement, he temporal de- 
faults can be overridden, as in the following 
examples: 
(3) a. John fell. Mary pushed him. 
b. Local builders constructed the Ford 
St. Bridge. They used 3 tons of 
bricks. 
In (3a) there is a causal relationship between 
Mary's pushing John and his falling, and the 
second event is understood to precede the first. 
In (3b), the second sentence is an elaboration 
of the first, and they therefore refer to aspects 
of the same event rather than to two sequential 
events. 
It has been suggested that only world knowl- 
edge allows one to detect that the default is 
being overridden here. For example, Lascarides 
Asher (1991) suggest hat general knowledge 
postulates (in the case of (3a): that a pushing 
can cause a falling) can be invoked to generate 
the backward movement reading. 
The problem for practical systems is twofold: 
we could assume that in the case of narrative 
the Kamp/Hinrichs/Partee algorithm is the de- 
fault, but each time the default is applied we 
would need to check all our available world 
knowledge to see whether there isn't a world 
knowledge postulate which might be overriding 
this assumption. Clearly this would make the 
processing of text a very expensive operation. 
An alternative is to assume that the tempo- 
ral ordering between events in two consecutive 
sentences can be any of the four possibilities 
(just_after, precede, same-event and overlap). 
But then the resulting temporal structures will 
be highly ambiguous even in small discourses. 
And sometimes this ambiguity is unwarranted. 
Consider: 
(4) Mary stared at John. He gave her back 
her slice of pizza. 
Here, it would appear, only one reading is pos- 
sible, i.e. the one where John gave Mary her 
slice of pizza just after she stared or started to 
stare at him. It would be undesirable for the 
temporal processing mechanism to postulate an 
ambiguity in this case. 
Of course, sometimes it is possible to take 
advantage of certain cue words which either in- 
dicate or constrain the rhetorical relation. For 
example, in (5) the order of the events is un- 
derstood to be the reverse of that in (1) due 
to the cue word because which signals a causal 
relationship between the events: 
(5) John entered the room because Mary 
stood up. 
As Kehler (1994) points out, if forward move- 
ment of time is considered a default with con- 
secutive event sentences, then the use of "be- 
cause" in (5) should cause a temporal clash-- 
whereas it is perfectly felicitous. Temporal 
expressions uch as at noon and the previous 
Thursday can have a similar effect: they too 
can override the default emporal relations and 
place constraints on tense. In (6), for exam- 
ple, the default interpretation would be that 
John's being in Detroit overlaps with his being 
in Boston, but the phrase the previous Thurs- 
day overrides this, giving the interpretation 
that John's being in Detroit precedes his be- 
ing in Boston: 
(6) John was in Boston. The previous 
Thursday he was in Detroit. 
This suggests that the temporal information 
given by tense acts as a weaker constraint on 
temporal structure than the information given 
by temporal adverbials. 
The possibilities for rhetorical relations (e.g., 
whether something is narration, or elaboration, 
or a causal relation) can be further constrained 
by aspect. For example, a state can elaborate 
another state or an event: 
(7) a. Mary was tired. She was exhausted. 
b. Mary built a dog house. It was a 
labour of love. 
But an event can only elaborate another event, 
as in (8): 
254 
Table 1. Possible relations when $2 expresses a simple past event. 
Sl Relat ion Example  
just-after $1 Mary pushed John. He fell. 
past event precede Sx John fell. Mary pushed him. 
overlap $1 NO 
same-event $1 I assembled the desk myself. The drawers only took me ten 
minutes. 
just-after S1 Mary stared at John. He gave her back her slice of pizza. 
past activity precede $1 NO 
overlap $1 NO 
same-event S~ NO 
past state 
past perf event 
past perf activity 
past perf state 
just-after $1 
just-after TF1 
precede $1 
precede TFI 
ovedap S1 
ovedap TF1 
same-event $I 
same-event TF1 
just-after St 
precede $1 
overlap $1 
same-event S1 
just-after S1 
precede S, 
overlap $1 
same-event S~ 
just-after S1 
just-after TF1 
precede $1 
precede TF1 
oveHap $I 
overlap TF1 
same-event $1 
same-event TF1 
NO 
Sam arrived at eight. He was tired. He rang the bell. 
NO 
?John fell. He was in pain. Mary pushed him. 
Mary was angry. She pushed John. 
NO 
NO 
I assembled the desk myself. It was beautiful. The drawers only 
took me ten minutes. 
Sam had arrived at the house. He rang the bell. 
Sam arrived at the house. He had lost the key. He rang the bell. 
NO 
I had assembled the desk myself. The drawers only took me ten 
minutes. 
Mary had stared at John. He gave her back her sfice of pizza. 
NO 
NO 
NO 
NO 
Martha discovered the broken lock. Someone had been in the 
garage. They rearranged the, tools. 
NO 
NO 
Martha discovered the broken lock. Someone had been in the 
garage. They rearranged the tools, 
NO 
NO 
Mary built the desk herself. She had been happy taking it on. 
The drawers only todk her ten minutes. 
(8) a. Mary built a dog house. She used two 
tons of bricks. 
b. Mary was t ired/working hard. ?She 
built a dog house. 
For the eventive second sentence of (8b) to be 
an elaboration of the first sentence, it must oc- 
cur in a stative form-- for  example as a progres- 
sive (i.e., She was building a dog house). 
Because of considerations like these, our aim 
in the implementation work was to treat tense, 
aspect, cue words and rhetorical relations as 
mutual ly  constraining, with more specific infor- 
mat ion such as explicit cue words having higher 
priority than less specific information such as 
tense. The main advantage of this approach is 
that it reduces temporal structure ambiguity 
without having to rely on detailed world knowl- 
edge postulates. 
Table 1 lists the possible temporal  relations 
between the eventualities described by two con- 
secutive sentences without temporal expres- 
sions or cue words, where the first sentence 
(S1) may have any tense and aspect and the 
second sentence (S~) expresses a simple past 
event. We constrain $2 in this way because of 
lack of space; additional constraints are given 
in (Hitzeman et al., 1994). For example, if 
a simple past eventive sentence follows a sim- 
ple past eventive sentence the second event can 
be understood to occur just after the first, to 
precede the first or to refer to the same event 
as the first (an elaboration relation), but the 
two events cannot overlap; these constraints 
255 
are weaker, however, than explicit clues such 
as cue words to rhetorical relations and tempo- 
ral expressions. When $1 expresses a state, it 
is possible for the temporal relation to hold be- 
tween the event described by $2 and the event 
or activity most closely preceding $1, i.e., the 
temporal focus of $1, here referred to as TF1.1 
However, we haven't solved the problem 
completely at this point: although tense can 
provide a further constraint on the temporal 
structure of such discourses, it can also add a 
further ambiguity. Consider (9): 
(9) Sam rang the bell. He had lost the key. 
Clearly, the event described by the past perfect 
sentence must precede the event described by 
the first, simple past sentence. However, if a 
third sentence is added, an ambiguity results. 
Consider the following possible continuations 
of (9): 
(10) a . . . .  Hannah opened the door. 
b . . . .  It fell through a hole in his pocket. 
The temporal relation between these continu- 
ations and the portion of earlier text they a t -  
tach to is constrained along the lines sketched 
before. The problem here is determining which 
thread in (9) they continue; (10a) continues the 
thread in which Sam rings the bell, but (10b) 
continues the thread in which Sam loses the 
key. 
A further ambiguity is that when the third 
sentence is past perfect, it may be a continua- 
tion of a preceding thread or the start of a new 
thread itself. Consider: 
(11) a. Sam rang the bell. He had lost the 
key. It had fallen through a hole in 
his pocket. 
b. John got to work late. He had left 
the house at 8. He had eaten a big 
breakfast. 
In (a) the third sentence continues the thread 
about losing the key; in (b) the third starts a 
1 In this chart it appears that whether the tense 
is simple past or past perfect makes no difference, 
and that only aspect affects the possible tempo- 
ral relations between $1 and $2. However, it is 
important not to ignore tense because other com- 
binations of tense and aspect do show that tense 
affects which relations are possible, e.g., a simple 
past stative $2 cannot have a precede relation with 
any $1, while a past perfect stative $2 can. 
new thread. 2
For the problem with multi-sentence dis- 
courses, and the "threads" that sentences con- 
tinue, we use an implementation of tempo- 
rM centering (Kameyama et al., 1993; Poesio, 
1994). This is a technique similar to the type of 
centering used for nominal anaphora (Sidner, 
1983; Grosz et al., 1983). Centering assumes 
that discourse understanding requires ome no- 
tion of "aboutness." While nominal centering 
assumes there is one object that the current dis- 
course is "about," temporal centering assumes 
that there is one thread that the discourse is 
currently following, and that, in addition to 
tense and aspect constraints, there is a prefer- 
ence for a new utterance to continue a thread 
which has a parallel tense or which is seman- 
tically related to it and a preference to con- 
tinue the current thread rather than switching 
to another thread. Kameyama et al. (1993) 
confirmed these preferences when testing their 
ideas on the Brown corpus. 
As an example of how the temporal centering 
preference techniques can reduce ambiguity, re- 
call example (9) and the possible continuations 
shown in (10). The difficulty in these examples 
is determining whether the third sentence con- 
tinues the thread begun by the first or second 
sentence. For example, in (10a) the preference 
technique which allows us to choose the first 
thread over the second is one which assigns a 
higher rating to a thread whose tense is parallel 
to that of the new sentence; in this case both 
Sam rang the bell and Hannah opened the door 
are in the simple past tense. In example (10b) 
the fact that the key is mentioned only in the 
second sentence of (9) links (10b) with the sec- 
ond thread. To handle an example like (12), we 
employ a preference for relating a sentence to 
a thread that has content words that are rated 
as semantically "close" to that of the sentence: 
(12) Sam rang the bell. He had lost the key. 
His keyring b~okeJ 
We store semantic patterns between words as a 
cheap and quick form of world knowledge; these 
2We will not discuss the additional problem that 
if the final sentence in ( l lb) is the end of the text, 
the text is probably ill-formed. This is because 
a well-formed text should not leave threads "dan- 
gling" or unfinished. This is probably also the rea- 
son for the awkwardness of the well-known exam- 
ple Max poured a cup of coffee. He had entered the 
roo~' l .  
256 
rhet rein 
just_before overlaps same_event precedes no_temp_reln 
sequences causes background elaboration results reversesequence contrast list enumeration 
Figure 1. The type hierarchy used for constraints. 
patterns are easier to provide than are the de- 
tailed world knowledge postulates required in 
some other approaches, and result in similar 
and sometimes more precise temporal struc- 
tures with less processing overhead. Using 
the semantic patterns we know that key and 
keyring are semantically close, and through 
that semantic link between the second and 
third sentences we prefer to connect the third 
sentence to the thread begun by the second. 3
The approach to representing semantic rela- 
tionships we take is one used by Morris &: 
Hirst (1991) wherein the words in the lexicon 
are associated with each other in a thesaurus- 
like fashion and given a rating according to how 
semantically "close" they are. We thus avoid 
relying on high-level inferences and very spe- 
cific world knowledge postulates, our goal being 
to determine the temporal structure as much as 
possible prior to the application of higher-level 
inferences. 
those in previous threads, in order to rate 
the semantic "closeness" of the DCU to 
each thread. 
SEM_ASPECT: Contains the semantic aspect 
(event, state, activity). We have extended 
the Penn & Carpenter implementation of
the HPSG grammar so that semantic aspect 
is calculated compositionally (and stored 
here). 
RHET_RELN: The relation between this DCU 
and a previous one. Lexical items and 
phrases such as cue words (stored in 
CUE_WORD) affect the value of this slot. 
TEMP_CENTER: Used for temporal centering; 
Keeps track of the thread currently be- 
ing followed (since there is a preference for 
continuing the current thread) and all the 
threads that have been constructed so far 
in the discourse. 
3 An  HPSG imp lementat ion  of a 
d i scourse  grammar  
Following Scha ~ Polanyi (1988) and Priist 
et al (1994), our model of discourse consists 
of units called Discourse Constituent Units 
(ecus) which are related by various temporal 
and rhetorical relations. A basic DCU repre- 
sents a sentence (or clause), and complex DCUs 
are built up from basic and complex DCUs. 
In our ALE implementation, a DCU contains 
the following slots for temporal information: 
FWD_CENTER: Existing threads 
BKWD_CENTER: The thread currently be- 
ing followed 
CLOSED_THREADS: Threads no longer 
available for continuation 
TEMP..EXPR_RELNS: Stores the semantic inter- 
pretation of temporal expressions associ- 
ated with this DCU. 
TEMP-RELNS: Stores the temporal relations 
between the eventualities in the discourse. 
CUE_WORD: Cues to rhetorical structure, e.g., 
"because." 
V_AND_NP_LIST: Contains content words found 
in this DcU, and is used to compare the 
content words of the current DCU with 
3Semantic loseness ratings won't help in exam- 
ples (9) - (10) because there is as strong~a relation- 
ship between door and bell as there is between door 
and key. 
TEMPFOC: The most recent event in the cur- 
rent thread which a subsequent eventuality 
may elaborate upon (same-event), overlap, 
come just_after or precede. 
TENASP: Keeps track of the tense and syntactic 
aspect of the DCU (if the DCU is simple). 
TENSE: past, pres, fut 
ASPECT: simple, perf, prog, perf_prog 
257 
To allow the above-mentioned types of infor- 
mation to mutually constrain each other, we 
employ a hierarchy of rhetorical and tempo- 
ral relations (illustrated in Figure 1), using the 
ALE system in such a way that clues such as 
tense and cue words work together to reduce 
the number of possible temporal structures. 
This approach improves upon earlier work on 
discourse structure such as (Lascarides and 
Asher, 1991) and (Kehler, 1994) in reducing 
the number of possible ambiguities; it is also 
more precise than the Kamp/Hinrichs/Partee 
approach in that it takes into account ways 
in which the apparent defaults can be overrid- 
den and differentiates between events and ac- 
tivities, which behave differently in narrative 
progression. 
Tense, aspect, rhetorical relations and tem- 
poral expressions affect the value of the 
RHET..RELN type  that expresses the relation- 
ship between two I)CVs: cue words are lexicMly 
marked according to what rhetorical relation 
they specify, and this rel.ation is passed on to 
the DCU. Explicit relation markers uch as cue 
words and temporal relations must be consis- 
tent and take priority over indicators uch as 
tense and aspect. For example, sentence (13) 
will be ruled out because the cue phrase as a re- 
sult conflicts with the temporal expression ten 
minutes earlier: 
(13) #Mary  pushed John and as a result ten 
minutes earlier he fell. 
On the other hand, if temporal expressions in- 
dicate an overlap relation and cue words indi- 
cate a background relation as in (14), these con- 
tributions are consistent and the KHET_R.ELN 
type will contain a background value (the more 
specific value of the two): 
(14) Superman stopped the train just in 
time. Meanwhile, J immy Olsen was in 
trouble. 
4 The algorithm 
For reasons of space it is difficult to give ex- 
amples of the sign-based output of the gram- 
mar, or of the ALE rules, so we will restrict 
ourselves here to a summary of the algorithm 
and to a very limited rendition of the system 
output. The Mgorithm used for calculating the 
temporal structure of a discourse can be sum- 
marised as follows. It consists of two parts, the 
constraint-based portion and the preference- 
based portion: 
1. The possible temporal/rhetorical relations 
are constrained. 
(a) If there is a temporal expression, it 
determines the temporal relationship 
of the new DCU to the previous ones, 
and defaults are ignored. 
(b) Lexical items such as cue words influ- 
ence the value of the RHET~ELN type 
(See Figure 1). 
(c)-If steps (a) and (b) attempt o place 
conflicting vMues in the I~HET_RELN 
slot, the parse will fail. 
(d) If there is no temporal expression or 
cue phrase, tense and semantic as- 
pect also influence the vMue of the 
I~HET..RELN type (See Table 1), so 
that rhetorical relations, tense and as- 
pect constrain each other. 
2. If more than one possibility exists, seman- 
tic preferences are used to choose between 
the possibilities. 
(a) A "semantic distance" rating between 
the new DCU and each previous thread 
is determined. (If there are no exist- 
ing threads a new thread is started.) 
(b) Other preferences, such as a prefer- 
ence for relating the new DCU to a 
thread with parallel tense, are em- 
ployed (See (Kameyama et al., 1993; 
Poesio, 1994) for details), and the re- 
sulting ratings are factored into the 
rating for each thread. 
(c) If the thread currently being followed 
is among the highest rated threads, 
this thread is continued. (This corre- 
sponds to temporal centering's prefer- 
ence to continue the current thread.) 
(d) If not, the DCU may continue any of 
the highest rated threads, and each of 
these solutions is generated. 
Charts such as Table 1 provide the observa- 
tions we use to fill in the vMue of I~HET_RELN. 
Those observations are summarised below. In 
what follows, the event variable associated with 
DCOi is e~ and the TEMPFOC of  el is the most 
recent event/activity processed, possibly el it- 
self: 
258 
• e2 can overlap with el if 
-- DCU 2 describes a state, or 
- DCU1 describes a state and DCU2 de- 
scribes an activity. 
• e2 can occur just-after the TEMPFOC of  el 
if 
-- DCU2 describes a simple tense event, 
or 
- DCU1 describes a complex tense clause 
and DCU2 describes a complex tense 
event, or 
- DCU1 describes an event and DCU2 
describes an atelic or a simple tense 
state, or 
- DCU1 describes a state and DCU2 de- 
scribes a simple tense activity. 
• e~ can precede el if 
- DCU2 describes an event, or 
- DCU1 doesn't  describe an activity and 
DCU2 describes a past perfect stative. 
• e2 can elaborate on el if 
- DCU1 describes an event, or 
- DCU1 describes an activity and DCU2 
describes an atelic, or 
- DCU~ and DCU2 describe states and 
either DCU2 describes a simple tense 
state or DCU1 describes a complex 
tense state. 
Using this algorithm, we can precisely iden- 
tify the rhetorical and temporal relations when 
cue words to rhetorical structure are present, 
as in (15): 
(15) John fell (el) because Mary pushed him 
TEMP-RELNS: e 2 precedes el 
We can also narrow the possibilities when no 
cue word is present by using constraints based 
on observations of tense and aspect interactions 
such as those shown in Table 1. For example, if 
DCU1 represents a simple past eventive sentence 
and DCU2 a past perfect eventive sentence, then 
in spite of the lack of rhetorical cues we know 
that e2 precedes el, as in (16): 
(16) Sam rang the doorbell (el). He had lost 
the key (e2). 
TEMP-RELNS: e2 precedes el 
Also, when several structures are possible we 
can narrow the possibilities by using prefer- 
ences, as in the examples below: 
(17) Sam arrived at the house at eight (el). 
He had lost the key (e~). 
a . . . .  He rang the bell (e3). 
TEMP-RELNS: e2 precedes el, 
e3 just-after el 
b . . . .  It fell through a hole in his pocket 
(e~,). 
TEMP_RELNS: e 2 precedes el, 
e3, just-after e2 
If we allow any of the four possible temporal 
relations between events, both continuations of 
sentence (17) would have 17 readings (4 x 4 + 
1 reading in which the third sentence begins a 
new thread). Using constraints, we reduce the 
number of readings to 4. Using preferences, 
we reduce that to 2 readings for each continua- 
tion. The correct temporal relations are shown 
in (17). 4 
5 An  underspec i f ied  
representat ion  
By using constraints and preferences, we can 
considerably reduce the amount of ambiguity 
in the temporal/rhetorical  structure of a dis- 
course. However, explicit cues to rhetorical and 
temporal relations are not always available, and 
these cases result in more ambiguity than is de- 
sirable when processing large discourses. 
Consider, however, that instead of generat- 
ing all the possible temporM/rhetorical  struc- 
tures, we could use the information available to 
fill in the most restrictive type possible in the 
type hierarchy of temporal/rhetorical  relations 
shown in Figure 1. We can then avoid generat- 
ing the structures until higher-level information 
can be applied to complete the disambiguation 
process. 
6 Conclus ion 
We presented a brief description of an algo- 
r ithm for determining the temporal structure 
4The other reading, in which the third sentence 
is an elaboration of one of the preceding events, 
must not be ruled out because there are cases such 
as Sam arrived at the house at eight. He rang the 
bell. He let it ring \]or two minutes, in which such 
elaboration is possible. 
259 
of discourse. The algorithm is part of an HPSG- 
style discourse grammar implemented in Car- 
penter's ALE formalism. Its novel features are 
that it treats tense, aspect, temporal adverbials 
and rhetorical relations as mutually constrain- 
ing; it postulates less ambiguity than current 
temporal structuring algorithms do; and it uses 
semantic loseness and other preference tech- 
niques rather than full-fledged world knowl- 
edge postulates to determine preferences over 
remaining ambiguities. We also recommended 
using an underspecified representation f tem- 
poral/rhetorical structure to avoid generating 
all solutions until higher-level knowledge can 
aid in reducing ambiguity. 
References 
Bob Carpenter, 1993. ALE: The Attribute 
Logic Engine User's Guide. Laboratory for 
Computational Linguistics, Philosophy De- 
partment, Carnegie Mellon University, ver- 
sion fl, May. 
Barbara J. Grosz, Aravind Joshi, and 
Scott Weinstein. 1983. Providing a uni- 
fied account of definite noun phrases in dis=. 
course. In the proceedings of the 21st An- 
nual Meeting of the Association for Compu- 
tational Linguistics, pages 44-50. 
Erhard W. Hinrichs. 1981.  Temporale 
anaphora in englischen. StaatsExamen the- 
sis, Universit~t Tubingen. 
Janet Hitzeman, Claire Grover, and Marc 
Moens. 1994. The implementation f the 
temporal portion of the discourse grammar. 
Deliverable D.2.Temporal, LRE 61-062, Uni- 
versity of Edinburgh, December. 
Megumi Kameyama, Rebecca Passonneau, and 
Massimo Poesio. 1993. Temporal center- 
ing. In the proceedings of the 31st An- 
nual Meeting of the Association for Compu- 
tational Linguistics, pages 70-77, Columbus, 
OH. 
Hans Kamp. 1979. Events, instant and tem- 
poral reference. In R.. Bauerle, U. Egli, 
and A. yon Stechow, editors, Semantics from 
Different Points of View, pages 376-417, 
Springer-Verlag. 
Andrew Kehler. 1994. Temporal relations: 
Reference or discourse coherence? In the 
proceedings of the 32nd Annual Meeting of 
the Association for Computational Linguis- 
tics, pages 319-321, June. 
Alex Lascarides and Nicholas Asher. 1991. 
Discourse relations and defeasible knowl- 
edge. In the proceedings of the 29th An- 
nual Meeting of the Association for Compu- 
tational Linguistics, pages 55-63, University 
of California t Berkeley. 
J. Morris and Graeme Hirst. 1991. Lexical co- 
hesion computed by thesaural relations as an 
indicator of the structure of text. Computa- 
tional Linguistics, 17(1):21-48. 
Barbara Hall Partee. 1984. Nominal and tem- 
poral anaphora. Linguistics and Philosophy, 
7:243-286. 
Massimo Poesio. 1994. Discourse Interpreta- 
tion and the Scope of Operators. Ph.D. the- 
sis, University of Rochester, Department of 
Computer Science, Rochester, NY. 
Carl Pollard and Ivan A. Sag. 1994. Head- 
Driven Phrase Structure Grammar. Univer- 
sity of Chicago Press and CSLI Publications. 
Hub Priist, Remko Scha and Martin van 
den Berg. 1994. Discourse grammar and 
verb phrase anaphora. Linguistics and Phi- 
losophy, 17:261-327. 
Remko Scha and Livia Polanyi. 1988. An aug- 
mented context free grammar for discourse. 
In Proceedings of the 12th Conference on 
Computational Linguistics, pages 573-577, 
Prague, August. 
Candace L. Sidner. 1983. Focusing in the 
comprehension of definite anaphora. In 
M. Brady and R. Berwick, editors, Computa- 
tional Models of Discourse. MIT Press, Cam- 
bridge, MA. 
260 
