iNVESTIGATING THE POSSIBILITY OF A HICROPROCESSOR-BASED 
MACIIINE TRANSLATTON SYSTEM 
Haro ld  L. Somers 
Centre fo r  Computat iona l  L ingu is t i cs  
Un ivers i ty  of  Hanchester  Ins t i tu te  o f  Sc ience and Technology 
PO Box RR, Manchester  H60 tqO, England 
ABSTRACT 
This  paper descr ibes  an on-go in~ research  
pro jec t  be ing car r ied  out  by s ta f f  and s tudents  ac 
the Centre fo r  Computat iona l  L ingu is t i cs  co 
examine the feas ib i l i ty  o f  Hachine Trans la t ion  
(~T) in a mic roprocessor  env i ronment .  The system 
incorporates  as fa r  as ~oss ih le  ~eacures of  large-  
sca le  HT systems ~hac have proved des i rab le  o r  
e f fec t ive :  i t  is mutC i l inRua l ,  a lgor i thms and 
da~a are s t r i c t ly  separated ,  and the system is 
h i=h ly  modu lar .  Problems of  te rmino log ica l  
polysemy and syntact i c  complex i ty  are reduced v ia  
the not ions  of  cont ro l led  vocabu lary  and 
res t r i c ted  syntax .  ~ iven  these const ra in ts ,  iE 
seems feas ib le  Co ach ieve  t ranstac ion  v ia  an 
' i n ter t tngua ' ,  avo id in~ any language-pa i r  o r iented  
' t rans fer '  scare .  The paper concent ra tes  on a 
descr ip t ion  of the separate  modules in the 
t rans la~ion  process as they  are cur rent ly  
env isaged,  and decat ts  some of the problems 
spec i f i c  to  the microprocessor -based  approach to 
~ chac have So ~ar come tO t ight .  
I. BACKC2OU:'D ;'-':D '.'V£2VI':" 
This paper describes preliminary research in 
the design of Bede, a limited-syntax control led- 
vocabu lary  ~achine Trans la t ion  system co run on a 
microprocessor ,  t rans lac ine  between Eng l i sh ,  
~rench,  Cerman and Dutch.  Our exper imenta l  corpus 
is a car - rad io  manual.  Bede (named a f ter  the 7th 
Cencury Eng l i sh  t in~u is t ) ,  is essent ia l l y  a 
research project: we are noc immediately concerned 
~v~ch commercial  apo l i cac ions ,  though such are 
c lear ly  possible if the research proves f ru i t fu l .  
":ork on Bede ac th i s  stage thouRh is p r imar i ly  
experimentnl. The aim at the moment \[s co 
invest igate  the extent  to which a microprocessor -  
based ~ system of advanced des i2n is Poss ib le ,  
and the l im i ta t ions  that  have to be imposed in 
order co achieve .~ ~or;<in~ system. This paper 
'Je~crihes the overall system design snec i f~c~Cion  
t) .~n£cn we are currently working. 
~n cite bas ic  des ign of the system we at tempt  to 
incorporate  as much as poss ib le  Features  of  fa r ,e -  
scale ~ systems ~hac have proved to be des i rab le  
or ef fect ive.  Thus. Bede is mul~ilinBual by 
,~csi(zn. alqorithms and l inRuistic data are 
striccl~ separated, and the system \[s desiRned in 
~ore o- less independent modules. 
T~n ~\[cron'occssor environment means that  
~:r~r~l ~I" s iz~ ~ro ~{~norE,l~E: '4~ta ~cruccures  
169 
both  dynamic (c reated  by and man iputated  dur ing  
the t rans la t ion  process) and static (d ic t ionar ies  
and l ingu is t i c  ru le  packages) are const ra ined  co 
be as economical  in terms of  s¢oraBe space and 
access procedures  as poss ib le .  L imi ta t ions  on ~n- 
core and per iohera \ [  s to rage  are impor tant  
cons iderat ions  in  the system des ign .  
In  la rge  genera\[ purpose ,HT systems,  i= is 
necessary  to assume that  fa i tu re  to t rans la te  the 
g iven  input  cor rect ty  is genera l ly  not due to 
incorrectly ~ormed input ,  bu~ to \ [nsu f f i c ient Jy  
e laborated  ~rans lac ion  a lgor i thms.  Th is  is 
par t i cu la r ly  due to =wo prob lems:  the lex ica l  
problem o f  cho ice  of  appropr ia te  t rans la t ion  
equ iva lents ,  and the s t ra teg ic  problem of  
e~fec~ive  ana lys i s  of the wide range of syntact i c  
pat terns  Eound in nacura l  language.  The reduct ion  
o f  these problems v ia  ~he not ions  of" cont ro l led  
vocabu\[ary and restricted syntax seems 
par t i cu la r ly  appropr ia te  in the microprocessor  
env i ronment ,  s ince the a l te rnat ive  of makin~ a 
system |n~tnitely extendable \[s probably no~ 
feasible, 
Given these const ra /n ts ,  i t  seems feas ib le  to 
ach ieve  c ranstac ion  v ia  an InCer l tngua .  ~n ~h ich  
the canon icat  s t ructures  from the source lan=ua~e 
are mapped d i rec t ly  onto those of  the ta rget  
language(s ) ,  avo id in  R any l anguage-pa i r  o r iented  
' t rans fer '  s ta~e.  T rans la t ion  thus cakes p lace in 
~wu puase~= ana iys l s  ot  source ~ext an~ synthes is  
o f  ta rget  text .  
A. Incorporat ion  of  recent  desL~n or tnc io \ [es  
~odern ~ system des ign  can be char~cterLsed  hv 
three  pr inc ip les  thac have proved Co be des i rab le  
and e f fec t ive  (Lehmann eta \ [ ,  tg~}o: I - \ ] ) :  each of 
these is adhered co in the desiRn oF Rede. 
Bede Es mutt\[l ingual by design: early "!T 
systems were designed with specific lan~uaBe-oatrs 
in mind, and t rans la t ion  a lgor i thms were 
e laborated  on th i s  bas is .  The main conseouence of  
this was that source lan~uaRe analysis ~¢as 
ef fec ted  w i th in  the perspect ive  of  the B~ven 
target  \[anguaRe, and was there fore  o f ten  of  l i t t le  
or  no use on the add i t ion  in to  the system of  a 
further language (of. ~in~, IORI:12; ~:in~ 
Perschke, 1982:28). 
In Bede, there  is a s t r i c t  separat ion  of  
a lgor i thms and \ [ ingu isc ic  data :  oar lv  "T ~y~ccms 
'~ere qu i te  sin~n\[y ' t rans la t ion  nrc~ra :~s ' ,  tnd ~nv 
underlying linguistic theory which might have been 
present was inextricably bound up with the program 
itself. This clearly entailed the disadvantage 
that any modification of the system had to be done 
by a skilled programmer (of. Johnson, IgRO:IAO). 
Furthermore, the side-effects of apparently quite 
innocent modifications were often quite far- 
reaching and difficult to trace (see for example 
Boscad, lq82:130) ,  Although th i s  has only 
recent ly  become an issue in HT (e .g .  Vauquois, 
1979: I .3 ;  1981=10), i t  has of course for  a long 
time been standard pract i ce  in other  areas of 
knowledge-based programming (Newel l ,  1973; Davis & 
King, 1977) .  
The third principle now current in MT and to be 
incorporated in Bede is that the translation 
process should be modular. This approach was a 
feature of the earliest 'second generation' 
systems (o f .  Vauquois, 1975:33), and is 
character i sed  by the general not ion  that  any 
compl icated computat ional  task is  best tack led by 
dividing it up into smaller more or less 
independent sub-casks which communicate only by 
means of a strictly defined interface protocol 
(Aho et al, 1974). This is typically achieved in 
the bit environment by a gross division of the 
translation process into  analysis of source 
language and synthesis of target language, 
possibly with an intermediate transfer sca~e (see 
!.D below), with these phases in turn sub-divided, 
for example into morphological, lexical and 
syntactico-semantlc modules. This modularity may 
be reflected both in the linguistic organisation 
of the translation process and in the provision of 
software devices specifically tailored to the 
re levant  sub-task (Vauquois, 1975:33). This is 
the case in Bede, where for each sub-task a 
grammar interpreter is provided which has the 
property of being no more powerful than necessary 
for the task in question. This contrasts with the 
approach taken in TAt~-H~c~o (TAUM, Ig73), where a 
single general-purpose device (Colmerauer's (1970) 
'O-Systems') is orovided,  w i th  the associated 
disadvantage that for  some 's imple '  tasks the 
superfluous power of the device means that 
processes are seriously uneconomical. Bede 
incorporates five such 'grammar types'  with 
associated individual formalisms and processors: 
these are described in detail in the second half 
of this paper. 
B. The microproce,ssor environment 
!t is in the microprocessor basis that the 
principle interest in this system lies, and, as 
mentioned above, the main concern is the effects 
of the res t r i c t ions  that  the environment imposes. 
Development of the Bede prototype is present ly  
caking place on ZRO-based machines which provide 
6Ak bytes of in-core memory and 72Ok bytes of 
peripheral store on two 5-I/~" double-sided 
double-density floppy disks. The intention is 
that any commercial version of Bede would run on 
more powerful processors with larger address 
space, since we feel  chat such machines w i l l  soon 
rival the nopularity of the less powerful ZRO's as 
the standard desk-cop hardware. Pro~rarzninR so 
far  has been in Pascal -"  (Sorcim, 197q), a Pascal 
d ia lec t  c lose ly  resembling UCSD Pascal,  but we are 
conscious of the fact that both C (Kernighan & 
Ritchie, 1978) and BCPL (Richards & Whitby- 
Strevens, Ig7g) may be more suitable for some of 
the software elements, and do not rule out 
completing the prototype in a number of languages. 
This adds the burden of designing compatible data- 
structures and interfaces, and we are currently 
investigating the relative merits of these 
languages. Portability and efficiency seem to be 
in conflict here. 
Microprocessor-based MT cont ras ts  sharply wi th  
the mainframe-based activity, where the 
significance of problems of economy of storage and 
efficiency of programs has decreased in recent 
years. The possibility of introducing an element 
of human interaction with the system (of. Kay, 
Ig80; Melby, 1981) is also highlighted in this 
environment. Contrast systems like SYSTRAN (Toma, 
1977) and GETA (Vauquois, 1975, lq7g; Boiler & 
Nedobejkine, IggO) which work on the principle of 
large-scale processing in batch mode. 
Our experience so far is chat the economy and 
efficiency in data-structure design and in the 
elaboration of interactions between programs and 
data and between different modules is of paramount 
importance. While it is relatively evident thac 
l a rge -sca le  HT can be s imulated in the 
microprocessor  environment, the cost in rea l  time 
is tremendous: entirely new design ~nd 
implementation strategies seem co be called for. 
The ancient skills of the programmer that have 
become eroded by the generosity afforded by modern 
mainframe configurations become highly valued in 
this microprocessor application. 
C. Cont ro l led  vocabulary and res t r i c ted  sync@x 
The state of the art of language processing is 
such chat the analysis of a significant range of 
syntactic patterns has been shown to be possible, 
and by means of a number of different approaches. 
Research in this area nowadays is concentrated on 
the treatment of more problematic constructions 
(e.g. Harcus, lqgO). This observation has led us 
tO believe that a degree of success in a small 
scale MT project can be achieved via the notion of 
res t r i c t ing  the complex i ty  of acceptable input ,  so 
that only constructions that are sure tc ne 
Correctly analysed are permitted. This notion of 
res t r i c ted  syntax  ~ has been t r ied  wi th  some 
success in larger systems (c f .  Elliston, IGYn: 
Lawson, 107q:81f; Somers & HcNaught, I9~O:ao~, 
resu l t ing  both in more accurate t rans la t ion ,  and 
in increased legibility from t~e human point of 
view. AS Elliston points  out, the development ef  
strict guidelines for writers leads not only t :  
the use of simpler constructions, but also to =he 
avoidance of potentially ambiguous text. In 
either case, the benefits for ~ are obvious. 
Less obvious however is the acceptability of such 
constraints; yet 'restricted syntax' need noc 
imply 'baby ta lk ' ,  and a reasonably extensive 
range of constructions can be included. 
Just as problems of syntact i c  analys is  ca~: e(. 
alleviated by imposing some degree of contrn~ over 
150 
the syntact i c  complexity of the input ,  so the 
corresponding problem of  lex ica l  disambiguation 
chat la rge-sca le  HT systems are faced with can be 
eased by the not ion of cont ro l led  vocabulary.  A 
major problem for  PIT is the choice of appropr iate  
t rans la t ion  equiva lents  at the lex ica l  leve l ,  a 
choice o f ten determined by a var ie ty  of fac tors  at 
a l l  l i ngu is t i c  leve ls  (syntax,  semantics, 
pragmatics) .  In the f ie ld  of mulCi l ingua l  
terminology,  th is  problem has been tackled v ia  the 
concept of te rmino log ica l  equivalence (WUster, 
1971): for  a given concept in one l anguage,  a 
t rans la t ion  in another language is es tab l i shed ,  
these being considered by de f in i t ion  to be in one- 
to-one correspondence. In the case of Beds, where 
the sub jec t -mat ter  of the texts  to be t rans la ted  
is f i xed ,  such an approach for  the ' techn ica l  
terms' in the corpus is c lear ly  feas ib le ;  the 
not ion is extended as far  as poss ib le  to general 
vocabulary as we l l .  For each concept a s ing le  
term only i s  permit ted,  and although the resu l t ing  
s ty le  may appear less mature (s ince the use of 
near synonyms for  the sake of var ie ty  is not 
permi t ted) ,  the problems described above are 
somewhat a l lev ia ted .  Polysemy is noC ent i re ly  
avo idab le ,  but i f  reduced co a bare  minimum, and 
permi t ted  only in spec i f i c  and acknowledged 
circumstances, the problem becomes more eas i ly  
manageable. 
D. In ter l in~ua 
A s ign i f i cant  dichotomy in PIT is between the 
' t rans fer '  and ' tn ter l ingua '  approaches. The 
former can be character i sed  by the use of 
b i l ingua l  t rans fer  modules which convert the 
resu l t s  of the analys is  of the source language 
into a representat ion  appropr iate  for  a spec i f i c  
ta rget  language. This contrasts  wlth the 
in ter l ingua  avproach in which the resu l t  of 
analys is  is passed d i rec t ly  co the appropr iate  
synthesis module. 
I t  is beyond the scope of the present paper to 
discuss in deta i l  the re la t ive  mer i ts  of the two 
approaches (see Vauquois, i975 : l&2f f ;  Hutchins, 
lq78). I~ should however consider soma of the 
major obstacles inherent in the incer l ingua 
approach. 
The development of an In ter l ingua  for  var ious 
purposes (noc only t rans la t ion)  has been the 
subject of ph i losoph ica l  debate for  some years, 
and proposals for  ~T have included the use of 
formal ized natural  language (e.g. Hel'~uk, Ig7&; 
Andreev, lg67), ar t i f i c ia l  languages (like 
~soeranco), or various symbolic representat ions ,  
~hecher linear (e.~. BUlcins, I061) or otherwise 
(e.~. "~ilks, 1073). Host of chess approaches are 
problematic however ( fo r  a thorough discussion of 
the lncer l ingua approach co ~,  see Often & Pacak 
(1071) and Barnes (ig83)). Nevertheless, some 
incer l ingua-based HT systems have been developed 
co a considerable degree: for  example, the 
~renohle team's first attempts at wT cook this 
approach (Ve i l l on ,  106R), whi le the TITUS system 
s t i l l  in use ac the Ànscicut Text i le  de France 
(Ducroc. Ig72; Zinge\[, 1~78~ is claimed to be 
(ncerl in~u,l-based. 
151 
I t  seems that  i t  can be assumed a pr io r i  thac 
an ent i re ly  language-independent theoret i ca l  
representat ion  of a given text  is for  all 
pract i ca l  purposes impossible.  A more rea l i s t i c  
ta rget  seems to be a representat ion  in which 
s ign i f i cant  syntact i c  d i f fe rences  between the 
languages in quest ion are neut ra l i zed  so chat the 
best one can aim fo r  is a languages-spec i f ic  ( s i c )  
representat ion .  This approach impl ies the 
de f in i t ion  of an In ter l ingua  which cakes advantage 
of  anything the languages in the system have in 
common, whi le  accomodating the i r  id iosyncras ies .  
This mains chat for   system which involves 
several  fairly c lose ly  re la ted  languages the 
in ter l insua  approach is at least  feas ib le ,  on the 
understanding that the in t roduct ion  of a 
s ign i f i cant ly  d i f fe rent  type of language may 
involve the complete redef in i t ion  of the 
Incer l ingua  (Barnes, 1983). ~rom the point  of 
view of Beds, then, the common base of the 
languages involved can be used to great advantage. 
The not ion of  res t r i c ted  syntax described above 
can be employed to f i l te r  out const ruct ions  chac 
cause par t i cu la r  problems for  the chosen 
In ter l ingua  representat ion .  
There remains however the problem of ~he 
representat ion  of lex ica l  items in the 
In ter l ingua .  Theoret ica l  approaches co th i s  
problem (e .g .  Andreev, 1967) seem qui te  
unsat i s fac tory .  BuC the not ion of cont ro l led  
vocabulary" seems to o f fe r  a so lu t ion .  If a one- 
co-one equivalence of ' techn ica l '  terms can be 
achieved, th i s  leaves only a re la t ive ly  small area 
of  vocabulary for which an incer l ingua l  
representat ion  must be devised. I t  seems 
reasonable, on a small scale,  co t reat  general 
vocaOuiary tn an enelagous way co techn ica l  
vocabulary,  in par t i cu la r  c reat ing  lex ica l  items 
in one language that  are ambiguous with respect co 
any of the ocher languages as 'homographs'. Their 
'd isambiguat ion '  must cake place in Analys is  as 
there is no b i l tgua l  'T rans fer '  phase, and 
Synthesis is purely deterministic. While this 
approach would be quite unsuitable for  a larRe- 
scale general purpose HT system, in the present 
context  - where the problem can be minimised - ~c 
seems Co be a reasonable approach. 
Our own model for  the Bede tnCerl ingua has noc 
yet been f ina l i sed .  We bel ieve th is  co be an area 
for  research and exper imentat ion once the system 
software has been more fu l ly  developed. ~ur 
current  hypothesis is chat the In ter l inRua w i l l  
cake the form of a canonical representation of the 
text in which valency-houndness and (deep) ~e 
wi l l  play a s ign i f i cant  ro le .  Sentent ia l  features 
such as tense and aspect wi l l  be capcured by 
' un iversa l '  system of values for  the languages 
involved.  This concepcion of an In ter l ingua  
c lear ly  fa l l s  short of the language-independent 
p ivot  representat ion  typ ica l ly  envisaged Ccf. 
Boitet & NedobeJklne, 1980:2), but we hope :o 
demonstrate chac i t  is su f f i c ient  for  the 
languages in our system, and chat i t  could be 
adapted wi thout  s ign i f i cant  d i f f i cu l t ies  to cater  
for  the in t roduct ion  of other ( re la ted)  Western 
European languages. We feel  chat research in chLs 
area will, when the time comes, be a siEniflcanc 
and valuable by-product of the pro jec t  as a whole. 
II. DESCRIPTION OF THE SYSTEM DESIGN 
In this second half of the paper we present a 
description of the translation process in Bede, as 
it is currently envisaged. The process is divided 
broadly into two parts, analysis and synthesis, 
the interface between the two being provided by 
the Interlingua. The analysis module uses a 
Char t - l i ke  s t ruc ture  (c f .  Kaplan, 1973) and a 
series of grammars to produce from the source text 
the Incerlingua tree structure which serves as 
input to synthesis, where it is rearranged into a 
va l id  surface s t ruc ture  for  the ta rget  language. 
The ' t rans la t ion  un i t '  (TU) is taken co be the 
sentence, or equ iva lent  (e .g .  sect ion heading, 
title, figure caption). Full details of the rule 
formalisms are given in Somers (Ig81). 
A. Strln~ segmentation 
The TU is first subjected to a two-stage 
string-segmentation and 'lemmatlsation' analysis. 
In the first stage it is compared word by word 
with a 'stop-list' of frequently occurring words 
(mostly funct ion  words); words not found in the 
stop-list undergo str ing-segmentatlon analysis, 
again on a word by word basis. String- 
segmentation rules form a f inite-state grammar of 
aff ix-str ipping ru les  ('A-rules') which handle 
mostly inflectional morphology. The output is a 
Chart with labelled arcs indicating lexical unit 
(LU) and possible interpretatio n o£ the s t r ipped  
affixes, this 'hypothesis' to be confirmed by 
dictionary look-up. By way of example, consider 
(I~, a possible French rule, which takes any word 
ending in -issons (e.g. finissons or h4rissons) 
and constructs an arc on the Chart recording the 
hypothesis that the word is an inflected form of 
an '-it' verb (i.e. finir or *h4rir). 
(I) V + "-ISSONS" ~ V ~ "-IR" 
\[PERS=I & NUM=PLUR & TENSE=PRES & HOOD=INDIC\] 
At the end of d ic t ionary  l ook -up ,  a temporary  
'sentence d ic t ionary '  is created,  cons is t ing  of 
copies of the d ic t ionary  ent r ies  for  (on ly)  those 
LUs found in the current TU. This is purely an 
eff iciency measure. The sentence dictionary may 
of course include entries for  homographs which 
will later be re jec ted .  
B. S t ruc tura l  ana lys i s  
I .  ' P - ru les '  
The chart then undergoes a two-stage structural 
ana lysts .  In the f i r s t  stage, context -sens i t i ve  
augmented phrase-s t ruc ture  ru les ( 'P - ru les ' )  work 
towards c reat ing  a s ingle arc spanning the ent i re  
TU. Arcs are labelled with appropriate syntactic 
class and syncact ico-semant ic  feature  information 
and a trace of the lower arcs which have been 
subsumed from which the parse tree can be simply 
extracted. The trivial P-rule (2) iS provided as 
an examnle. 
(2) <NUM(DET)=NUM(N) & GDR(DET) . INT .GDR(N~ r.. ~ > 
DET + N -~ NP 
<GDR(NP):=GDR(N) & NUM(NP 3:=NLvM(N)  
P-ru les  consist of ' cond i t ion  s t ipu la t ions ' ,  a 
'geometry ' ,  and 'assignment s t ipu la t ions ' .  The 
nodes of the Chart are by de fau l t  ident i f ied  by 
the value of the assoc iated var iab le  CLASS, though 
i t  is also poss ib le  to re fe r  to a node by a loca l  
var iab le  name and tes t  for  or assign the value of 
CLASS in the s t ipu la t ions .  Our ru le  formal isms 
are qu i te  de l iberate ly  designed to re f lec t  the 
formalisms of traditional l inguist ics .  
This formalism allows experimentation with a 
large number of different context-free parsing 
a lgor i thms.  We are in fac t  s t i l l  exper iment ing in 
th i s  area.  For a s imi la r  invest igat ion ,  though on 
a machine with signif icantly different time and 
space const ra in ts ,  see Slocum (1981) .  
2. 'T-rules' 
In the second stage of s t ruc tura l  ana lys i s ,  the 
t ree s t ruc ture  impl ied by the labels  and traces on 
these arcs is d i s jo ined  from the Char~ and 
undergoes general t ree -Co-c ree- t ransduct ions  as 
descr ibed by 'T - ru les ' ,  resu l t ing  in a s ing le  tree 
structure representing the canonical form of the 
TU. 
 The formalism for the T-rules is similar co 
that for  the P-rules, except in the geometry part, 
where tree structures rather than arc sequences 
are defined. Consider the necessari ly more 
complex (though still simplified) example (3~. 
which regularises a simple English passive. 
(3) < LU(AUX)="BE" & PART(V)=PASTPART & 
LU(PREP)="BY" & CASE(NP{2})=ACE?;T > 
S(NP{I} * AUX - V ÷ NP{2}(PREP . ~)  
s (~P(2}(s )  ~ v + ~p{ l})  
<DSF(NP{2}):=DSUJ & VOICE(V):=PASSV & 
DSF(NP{I}:=DOBJ  
Notice the necessity to 'disamb£Ruate' the two 
NPs via curly-bracketted disamblRuators; the 
possibi l ity of defining a partial geometry via the 
'dummy' symbol ($~; and how the AUX and PREP are 
eliminated in the resulting tree structure. 
Labell ings for nodes are copied over by default 
unless specif ically suppressed. 
With source-language LUs replaced by unique 
mul t i i i ngua l -d ic t ionary  addresses, th is  canonical  
representat ion  is the In ter l ingua  which is passed 
for  synthesis  in to  the target  language(s~. 
C. Synthesis 
Assuming the analys is  has been cor rec t ly  
per formed,  synthesis  is a relatively straight- 
forward determin is t i c  process. Synthesis 
commences with the application of further T-rules 
which assign new order and structure ~o she 
Interlingua as appropriate. The synthesis T-rules 
for a given language can be viewed as analogues ~f 
the T-rules that are used for analysis of that 
language, though it is unlikely that for syntbes~s 
152 
the ana lys i s  ru les  could be simpLy reversed,  
Once the des i red  s t ruc ture  has been ar r ived  a t ,  
the trees undergo a ser ies  of  context -sens i t ive  
rules used to assign mainly syntactic features co 
the leaves ( ' L - ru les ' ) ,  fo r  example fo r  the 
purpose of  ass ign ing  number and gender concord 
(e tc . ) .  The formal ism for the L - ru les  is ag l in  
s imi la r  to that  fo r  the p - ru les  and T - ru les ,  the 
geOmett'y per t  th i s  time def inYng a s ing le  t ree  
s t ruc ture  with no s t ructura l  modification 
impl ied .  A simple example fo r  German is p rov ided  
here (4 ) .  
(4) <SF(NP)=SUBJ> 
NP(Drr + N) 
<CASE(DET):=NOH & CASE(N):=NOH & 
NI~H(DET):=NUH(NP) & GDR(DET):-GDR(N)> 
The llst of  labe l led  leaves resu l t ing  from the 
app l i ca t ion  of  L - ru les  is  passed to morpho log ica l  
synthesis (the superior branches are no longer 
needed), where a f in i te -s ta te  grammar of  
morpbographemic and a f f txat ion  ru les  ( 'H - ru les ' )  
is app l ied  to produce the ta rget  s t r ing .  The 
formal ism for  H- ru les  is much less complex than 
the A - ru le  fomel i sm,  the grammar being again 
s t ra ight fo rward ly  deterministic. The only tax ing  
requirement of  the M-ru le  formal ism (which,  at the 
~ime of  wr i t ing ,  has not been f ina l i sed)  is  that  
i t  must permit  a wide var ie ty  of  s t r ing  
manipu la t ions  to be descr ibed,  and that  it must 
de f ine  a t ransaparent  in ter face  with the 
d ic t ionary .  A typ ica l  ru le  fo r  French fo r  example 
might consist of  s t ipu la t ions  concerning 
i n fo rmat ion  found both on the lea f  in quest ion  and 
in the d ic t ionary ,  as in (5 ) .  
(5) lea f  in fo . :  CLASS.V; TENSE.PRES; NUH.SING; 
PEgs-3; HOOD=INDIC 
dict. info.: CONJ(V)=IRREG 
assign: Af f ix  "-T" to STEHI(V) 
D. General comments on system design 
The general modular i ty  of the system wi l l  have 
been qu i te  ev ident .  A key fac tor ,  as mentioned 
above, is that each of these grammars is j us t  
powerful enough for the cask required of It: thus 
no computing power is 'wasted'  at any of  the 
in termediate  stages.  
At each interface between grammars on ly  a small 
part  of  the data s t ruc tures  used by the donat ing 
module is requ i red  by the rece iv ing  module. The 
'unwanted' data s t ruc tures  are wr i t ten  to 
peripheral store co enable recovery of partial 
s~ructures in the case of fa i lure or 
mistranslation, though automatic backtracking to 
previous modules by the system as such is not 
envisaged as a major component. 
The ' s ta t i c '  data used by the system consist of 
the d i f fe rent  sets of  l~nguistic ru le  packages, 
plus ~he d ic t ionary .  The system essent ia l l y  has 
one large mu\[ti l ingual d ic t ionary  from which 
numerous software packages generate various 
subd icc ionar ies  as required either in the 
:rans\[acion process itself, or for lexicographers 
153 
working on the system. Alphabetical or other 
structured language-specific listings can be 
produced, while of course dictionary updating and 
editing packages are a lso  prov ided .  
The system as a whole can be viewed as a 
co l lec t ion  o f  Product ion  Systems (PSs) (Newel l ,  
1973; Davis & King, 1977; see a lso  Ashman (1982) 
on the use of  PSs in HT) in the way that  the ru le  
packages (which,  inc identa l ly ,  as an e f f i c ient7  
i I~a lute ,  undergo separate syntax ver i f i ca t ion  and 
' compi la t ion '  in to  in terpretab le  ' code ' )  operate 
on the data s t ruc ture .  The system d i f fe rs  from 
the c lass ica l  PS setup in d i s t r ibut ing  i t s  s ta t i c  
data over two databases:  the ru le  packages and the 
d ic t ionary .  The combinat ion of the ru le  packages 
and the d ic t ionary ,  the sof tware  in ter fac ing  
these,  end the ru le  in terpreter  can however be 
cons idered as analgous to the rule i n te rpreter  of 
a c lass ica l  P$. 
IIl. CONCLUSION 
As an experimental research project, Bede 
provides us with an extremely varied range of 
computational linguistics problems, ranging from 
the pr inc ipa l ly  l ingu is t i c  task of  ru le -wr i t ing ,  
to the essent ia l l y  computat iona l  work of sof tware  
tmplen~lncatton, wi th  lex icography  and termino logy  
p lay ing  the i r  par t  along the way. 
gut we hope too that  Bade is more than an 
academic exerc i se ,  and that  we are making a 
s ign i f i cant  cont r ibut ion  to app l ied  Computat ional  
l ingu is t i cs  research.  
IV. ACKNOWLEDCHENTS 
I present  th i s  paper on ly  as spokesman fo r  a 
large group o£ people who have worked, are 
work ing,  or w i l l  work on Bede. There fore  I would 
l i ke  to thank co l leagues  and students  at C .C.L . ,  
past ,  present ,  and future for their work on the 
pro jec t ,  and in par t i cu la r  Rod Johnson, Jock 
HcNeughc,  Pete White lock,  K ieran ~ i lby ,  Tonz 
Barnes, Paul Bennett and Rever ley Ashman fo r  he\[~ 
with ~his wr i te -up .  I of course accept 
respons ib i l i ty  fo r  any er rors  thac s l ipped  through 
that  t ight  net .  
V. REFERENCES 
Aho, A l f red  V.,  John E. Hopcrofc & Je f f rey  B. 
Utlman. The design and ana lys i s  of  computer 
a lgor i thms.  Reading, Hass.:  Addison- : ;es lev .  
Ig74.  
Andreev, N.D. The in termed iary  language as the 
foca l  po int  of  machine t rans la t ion .  In A.D. 
Booth (ed) ,  Hachine Trans la t ion ,  Amsterdam: 
Nor th -Ho l land ,  1967, 1-27. 
Ashman, Bever ley  D. Product ion Systems and the i r  
app l i ca t ion  to Hachine Transl#,t ion~ Trans fer  
Report (CCL/UHIST Report No. ~2/01. ~fanchester: 
Centre fo r  Computat ional  L ingu is t i cs ,  Un ivers i ty  
of  Hanchester Ins t i tu te  of  Science and 
Technology, 1982. 
Barnes, Antonia M.N. An investigation into the 
syntactic structures of abstracts, and the 
definition of an 'interlingua' for their 
translation by machine. MSc thesis. Centre for 
Computational Linguistics, University of 
Manchester Institute of Science and Technology, 
1983. 
Boiler, C. & N. NedobeJkine. Russian-French at 
GETA: Outline of the method and derailed example 
(Rapport de Recherche No. 219). Grenoble: GETA, 
1980. 
B~Iting, Rudolph.  A double  in termediate  language 
for Machine Translation. In Allen Kent (ed), 
Information Retrieval and Machine Translation, 
Part 2 (Advances in Documentation and Library 
Science, Volume III), New York: Interscience, 
1961, I139-I144. 
Boscad, Dale A. Quality control procedures in 
modification of the Air Force Russian-English MT 
system. In Veronica Lawson (ed), Practical 
Experience of Machine Translation, Amsterdam: 
North-Holland, 1982, 129-133. 
Colmerauer, Alain. Les syst~mes-Q: ou un 
formalisme pour anal~ser et s~nthdciser des 
phrases sur ordinateur. (Publication interne no. 
43). Moncr4al: Projet de Traduction Automatique 
de l'Universitd de Montr4al, 1970. 
Davis, Randall & Jonathan King. An overview of 
Production Systems. In E.W. Elcock & D. Michie 
(eds), Machine Intelligence Volume 81 Machine 
representation of knowledBe, New York: Halated, 
1977, 300-332. 
Ducroc, J .M.  Research for an automatic 
translation s~stem for the diffusion of 
scientific and technical textile documentation 
in English speaking countries: F ina l  report. 
Boulogne-Billancourt: Insticut Textile de 
France, I972. 
Kernighan, Brian W. & Dennis ~I. Ritchi~. ~he C 
programmin K language. Eng|ewood Cli~fs, ~:J: 
Prentice-Hall, 1978. 
King, M. EUROTRA - a European system for machine 
translation. Lebende Sprachen 1981, 26:12-1&. 
King, M. & S. Perschke. EUROTRA and its object- 
ives. Multilin~ua, 1982, 1127-32. 
Lawson, Veronica. Tigers and polar bears, or: 
translating and the computer. The Incorpnrated 
Linguist, 1979, 18181-85. 
Lehmann, Winfred P., Winfield S. Bennett. Jonathan 
Slocum, Howard Smith, Solveig M.V. Pfluger & 
Sandra A. Eveland. The METAL system (RADC-TR- 
80-37&). Austin, TX: Linguistics Research 
Center, University of Texas, 1080. 
Marcus, Mitchell P. A theory of syntactic 
recognition for natural language, Cambridge, MA: 
MIT Press, 1980. 
Melby, Alan K. Translators and machines - can 
they cooperate? META, 1981, 26:23-34. 
Mel'~uk, I.A. Grammatical meanings in 
interlinguas for automatic translation and the 
concept of grammatical meaning. In V. Ju. 
Rozencvejg (ed), Machine Translation and Applied 
Linguistics, Volume I, Frankfurt am Main: 
Athenaion Verlag, 1974, 95-113. 
Newell, A. Production systems: Models of control 
structures. In William G. Chase (ed) - Visual 
information processing, New York: Academic 
Press, 1973, ~63-526. 
Otten, Hichael & Milos G. Pacak. Intermediate 
languages for automatic language processina. In 
Julius T. Tou (edi, Software Engineering: CO~:~ 
I l l ,  Volume 2, New York: Academic Press, i c - I ,  
105-118. 
Ellis(on, John S.C. Computer aided translation: a 
business viewpoint. In Barbara M. Snell (ed) - 
Translatin~ and the computer, Amsterdam: North- 
Holland, 197g, I~0-158. 
Johnson, Rod. Contemporary perspectives in 
machine translation. In Suzanne Hanon & Vigge 
Hj~rneger Pedersen (edsl, Human translation 
machine translation (Noter og Kommentarer 39). 
Odensel Romansk Inst i tut ,  Odense Universitet, 
lOgO, 13~-1~7.  
Hutchins, W.j. Machine translation and machine 
aided translation. Journal of Documentation, 
1978, 34:119-159. 
Kaplan, Ronald N. A general syntactic processor. 
In Randall Rustin (ed), Natural Language 
Processin~ (Courant Computer Symposium Q~, New 
York: Algnrithmics Press, 1073, 103-2&I. 
Kay, "larcin. The proper place of men and machines 
in language transla\[ion (Report in. CSL-80-ll). 
Pa lo  .\~Co, CA: Xerox, l g~O.  
Richards, Martin & Colin Whitby-Screvens. BCPL - 
the language and its compiler. Camhridze: 
Cambridge University Press, I QTQ . 
S\[ocum, Jonathan. A practical comparison ~f 
parsin R strategies for Machine Translation and 
other Natural Language Processing Purposes. PhF 
dissertation. University of Texas at Austin, 
I981. \[ = Technical Report NL-41, Department of 
Computer Sciences, The University of Texas, 
Austin, TX.\] 
Somers, H.L. Bede - the CCL,/I~IIST Machine 
Translation system: Rule-writinE formalism '3rd 
revision) (CCL/~IIST Report Xo. 81 '5 ' .  
Manchester :  Cent re  fo r  Computat iona l  
Linguistics, University of Manchester £nst~cute 
of Science and Technology, 1981. 
Somers ,  H .L .  & d. HcNaught .  The t rans la tor  as  
computer user. The incorporated Lin~.uist, IO~,  
1Q:&g-53. 
154 
Sorcim. Pa__~sca_I/H u____se.r.'.sr~.fere.ns.e manua.\[ _. :'alnur. 
Creek, C.%: Digic.~l '.lar!<ecing, 1°79. 
TA\[/~. Le  sysr~me de craduction aucoma~que de 
l'Universit~ de Montreal (TA(Df). HETA0 1q73, 
la :227-2~O. 
Toma, P,P. SYSTRAN as a mul t i l i ngua l  ~achtne 
Trans la t ion  system. In Commission of the 
European Communities, Thi rd ~uropean ConRress on 
Information Systems and Plecwor~s=..Overcomtn~ the 
tan~uaRe bar r ie r ,  Volume 1, HUnchen: Ver\[ag 
Dokumencac~on, 1977, 569-581. 
Vauquois, Bernard. La craduct ion automaclque 
Grenoble (Documents de L/nguisc ique Quant i ta t ive  
2~), Par is :  Dunod, 1975. 
Vauquots, B. Aspects of mechanical t rans la t ion  in 
1079 (Conference for Japan I~  Sc ient i f i c  
Program). Grenoble: Groupe d'Ecudes pour la 
Traduct ion Aucomatique, 1979o 
Vauquois, Bernard. L ' tn format ique au service de 
la ¢raduccion. ~ETA, 1981. 26:8-17. 
VeiZZon, C. Descr ip t ion  du Iangage p ivot  du 
sysCEme de craduct ion automatique du C.E.T.A. 
?.A. \ [nformat ions,  1068, 1:B-17. 
WtIks, Yor ick.  An Ar t i f i c ia l  In te l l igence  
approach co Machine Trans la t ion .  In Ro~er C. 
Schank & ~enneth ~ark Colby (eds),  Computer 
models of chou~ht and language, San Francisco: 
Freeman, lq73, 114-151. 
~¢Oscer, ~uRen. Begr i f f s -  und ThemakIasst f ik-  
acionen: Uncerschiede in threm ~esen und in 
threr  Anwendung. ~achrtchcen fur Dokumenc- 
aclon, t971, 22:qR-IO~. 
Zin~e\[, Hermann-losef. Experiences with TITUS II. 
Tn~ernatinna\[ Classlfication, Ig7a, 5:33-37. 
\[55 
