Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 278–289,
October 25-29, 2014, Doha, Qatar.
c
©2014 Association for Computational Linguistics
An Unsupervised Model for Instance Level Subcategorization Acquisition
Simon Baker
Computer Laboratory
University of Cambridge
sb895@cam.ac.uk
Roi Reichart
Technion, IIT
Haifa, Israel
roiri@ie.technion.ac.il
Anna Korhonen
Computer Laboratory
University of Cambridge
alk23@cam.ac.uk
Abstract
Most existing systems for subcategoriza-
tion frame (SCF) acquisition rely on su-
pervised parsing and infer SCF distribu-
tions at type, rather than instance level.
These systems suffer from poor portability
across domains and their benefit for NLP
tasks that involve sentence-level process-
ing is limited. We propose a new unsuper-
vised, Markov Random Field-based model
for SCF acquisition which is designed
to address these problems. The system
relies on supervised POS tagging rather
than parsing, and is capable of learning
SCFs at instance level. We perform eval-
uation against gold standard data which
shows that our system outperforms several
supervised and type-level SCF baselines.
We also conduct task-based evaluation in
the context of verb similarity prediction,
demonstrating that a vector space model
based on our SCFs substantially outper-
forms a lexical model and a model based
on a supervised parser
1
.
1 Introduction
Subcategorization frame (SCF) acquisition in-
volves identifying the arguments of a predicate
and generalizing about its syntactic frames,
where each frame specifies the syntactic type and
number of arguments permitted by the predicate.
For example, in sentences (1)-(3) the verb distin-
guish takes three different frames, the difference
between which is not evident when considering
the phrase structure categorization:
(1) Direct Transitive: [They]NP [distin-
guished]VP [the mast]NP [of [ships on the
horizon ]NP ]PP .
1
The verb similarity dataset used for the evaluation of our
model is publicly available at ie.technion.ac.il/?roiri/.
(2) Indirect Transitive: [They]NP [distin-
guished]VP [between [me and you]ADVP ]PP .
(3) Ditransitive: [They]NP [distinguished]VP
[him]NP [from [the other boys]NP ]PP.
As SCFs describe the syntactic realization of
the verbal predicate-argument structure, they are
highly valuable for a variety of NLP tasks. For
example, verb subcategorization information has
proven useful for tasks such as parsing (Carroll
and Fang, 2004; Arun and Keller, 2005; Cholakov
and van Noord, 2010), semantic role labeling
(Bharati et al., 2005; Moschitti and Basili, 2005),
verb clustering, (Schulte im Walde, 2006; Sun
and Korhonen, 2011) and machine translation (hye
Han et al., 2000; Haji?c et al., 2002; Weller et al.,
2013).
SCF induction is challenging. The argument-
adjunct distinction is difficult even for humans,
and is further complicated by the fact that both ar-
guments and adjuncts can appear frequently in po-
tential argument head positions (Korhonen et al.,
2000). SCFs are also highly sensitive to domain
variation so that both the frames themselves and
their probabilities vary depending on the meaning
and behavior of predicates in the domain in ques-
tion (e.g. (Roland and Jurafsky, 1998; Lippincott
et al., 2010; Rimell et al., 2013), Section 4).
Because of the strong impact of domain vari-
ation, SCF information is best acquired automat-
ically. Existing data-driven SCF induction sys-
tems, however, do not port well between do-
mains. Most existing systems rely on hand-
written rules (Briscoe and Carroll, 1997; Korho-
nen, 2002; Preiss et al., 2007) or simple co-
occurrence statistics (O’Donovan et al., 2005;
Chesley and Salmon-Alt, 2006; Ienco et al., 2008;
Messiant et al., 2008; Lenci et al., 2008; Al-
tamirano and Alonso i Alemany, 2010; Kawa-
hara and Kurohashi, 2010) applied to the gram-
matical dependency output of supervised statisti-
cal parsers. Even the handful of recent systems
278
that use modern machine learning techniques (De-
bowski, 2009; Lippincott et al., 2012; Van de
Cruys et al., 2012; Reichart and Korhonen, 2013)
use supervised parsers to pre-process the data
2
.
Supervised parsers are notoriously sensitive to
domain variation (Lease and Charniak, 2005). As
annotation of data for each new domain is un-
realistic, current SCF systems suffer from poor
portability. This problem is compounded for
the many systems that employ manually devel-
oped SCF rules because rules are inherently ig-
norant to domain-specific preferences. The few
SCF studies that focused on specific domains (e.g.
biomedicine) have reported poor performance due
to these reasons (Rimell et al., 2013).
Another limitation of most current SCF systems
is that they produce a type-level SCF lexicon (i.e.
a lexicon which lists, for a given predicate, dif-
ferent SCF types with their relative frequencies).
Such a lexicon provides a useful high-level pro-
file of the syntactic behavior of the predicate in
question, but is less useful for downstream NLP
tasks (e.g. information extraction, parsing, ma-
chine translation) that involve sentence processing
and can therefore benefit from SCF information
at instance level. Sentences (1)-(3) demonstrate
this limitation - a prior distribution over the pos-
sible syntactic frames of distinguish provides only
a weak signal to a sentence level NLP application
that needs to infer the verbal argument structure of
its input sentences.
We propose a new unsupervised model for SCF
induction which addresses these problems with
existing systems. Our model does not use a parser
or hand-written rules, only a part-of-speech (POS)
tagger is utilizes in order to produce features for
machine learning. While POS taggers are also
sensitive to domain variation, they can be adapted
to domains more easily than parsers because they
require much smaller amounts of annotated data
(Lease and Charniak, 2005; Ringger et al., 2007).
However, as we demonstrate in our experiments,
domain adaptation of POS tagging may not even
be necessary to obtain good results on the SCF ac-
quisition task.
Our model, based on the Markov Random Field
(MRF) framework, performs instance-based SCF
learning. It encodes syntactic similarities among
verb instances across different verb types (derived
2
(Lippincott et al., 2012) does not use a parser, but the
syntactic frames induced by the system do not capture sets of
arguments for verbs, so are not SCFs in a traditional sense.
from a lexical and POS-based feature representa-
tion of verb instances) as well as prior beliefs on
the tendencies of specific instances of the same
verb type to take the same SCF.
We evaluate our model against corpora anno-
tated with verb instance SCFs (Quochi et al.,
2012). In addition, following the Levin verb
clustering tradition (Levin, 1993) which ties verb
meanings with their syntactic properties, we eval-
uate the semantic predictive power of our clusters.
In the former evaluation, our model outperforms a
number of strong baselines, including supervised
and type-level ones, achieving an accuracy of up
to 69.2%. In the latter evaluation a vector space
model that utilized our induced SCFs substantially
outperforms the output of a type-level SCF system
that uses the fully trained Stanford parser.
2 Previous Work
Several SCF acquisition systems are available for
English (O’Donovan et al., 2005; Preiss et al.,
2007; Lippincott et al., 2012; Van de Cruys et
al., 2012; Reichart and Korhonen, 2013) and other
languages, including French (Messiant, 2008),
Italian (Lenci et al., 2008), Turkish (Uzun et al.,
2008), Japanese (Kawahara and Kurohashi, 2010)
and Chinese (Han et al., 2008). The promi-
nent input to these systems are grammatical re-
lations (GRs) which express binary dependen-
cies between words (e.g. direct and indirect ob-
jects, various types of complements and conjunc-
tions). These are generated by some parsers (e.g.
(Briscoe et al., 2006)) and can be extracted from
the output of others (De-Marneffe et al., 2006).
Two representative systems for English are the
Cambridge system (Preiss et al., 2007) and the
BioLexicon system which was used to acquire a
substantial lexicon for biomedicine (Venturi et al.,
2009). These systems extract GRs at the verb in-
stance level from the output of a parser: the RASP
general-language unlexicalized parser
3
(Briscoe et
al., 2006) and the lexicalized Enju parser tuned to
the biomedical domain (Miyao and Tsujii, 2005),
respectively. They generate potential SCFs by
mapping GRs to a predefined SCF inventory us-
ing a set of manually developed rules (the Cam-
bridge system) or by simply considering the sets
of GRs including verbs in question as potential
SCFs (BioLexicon). Finally, a type level lexicon
3
A so-called unlexicalized parser is a parser trained with-
out explicit SCF annotations.
279
is built through noisy frame filtering (based on
frequencies or on external resources and annota-
tions), which aims to remove errors from parsing
and argument-adjunct distinction. Clearly, these
systems require extensive manual work: a-priori
definition of an SCF inventory and rules, manu-
ally annotated sentences for training a supervised
parser, SCF annotations for parser lexicalization,
and manually developed resources for optimal fil-
tering.
A number of recent works have applied mod-
ern machine learning techniques to SCF induc-
tion, including point-wise co-occurrence of ar-
guments (Debowski, 2009), a Bayesian network
model (Lippincott et al., 2012), multi-way tensor
factorization (Van de Cruys et al., 2012) and De-
terminantal Point Processes (DPPs) -based clus-
tering (Reichart and Korhonen, 2013). However,
all of these systems induce type-level SCF lexi-
cons and, except from the system of (Lippincott et
al., 2012) that is not capable of learning traditional
SCFs, they all rely on supervised parsers.
Our new system differs from previous ones in
a number of respects. First, in contrast to most
previous systems, our system provides SCF anal-
ysis for each verb instance in its sentential con-
text, yielding more precise SCF information for
systems benefiting from instance-based analysis.
Secondly, it addresses SCF induction as an unsu-
pervised clustering problem, avoiding the use of
supervised parsing or any of the sources of man-
ual supervision used in previous works. Our sys-
tem relies on POS tags - however, we show that it
is not necessary to train a tagger with in-domain
data to obtain good performance on this task, and
therefore our approach provides a more domain-
independent solution to SCF acquisition.
We employ POS-tagging instead of unsuper-
vised parsing for two main reasons. First, while
a major progress has been made on unsupervised
parsing (e.g. (Cohen and Smith, 2009; Berg-
Kirkpatrick et al., 2010)), the performance is still
considerably behind that of supervised parsing.
For example, the state-of-the-art discriminative
model of (Berg-Kirkpatrick et al., 2010) achieves
only 63% directed arc accuracy for WSJ sentences
of up to 10 words, compared to more than 95%
obtained with supervised parsers. Second, current
unsupervised parsers produce unlabeled structures
which are substantially less useful for SCF acqui-
sition than labeled structures produced by super-
vised parsers (e.g. grammatical relations).
Finally, a number of recent works addressed re-
lated tasks such as argument role clustering for
SRL (Lang and Lapata, 2011a; Lang and Lapata,
2011b; Titvo and Klementiev, 2012) in an unsu-
pervised manner. While these works differ from
ours in the task (clustering arguments rather than
verbs) and the level of supervision (applying a su-
pervised parser), like us they analyze the verb ar-
gument structure at the instance level.
3 Model
We address SCF induction as an unsupervised
verb instance clustering problem. Given a set of
plain sentences, our algorithm aims to cluster the
verb instances in its input into syntactic clusters
that strongly correlate with SCFs. In this sec-
tion we introduce a Markov Random Field (MRF)
model for this task: Section 3.1 describes our
model’s structure, components and objective; Sec-
tion 3.2 describes the model potentials and the
knowledge they encode; and Section 3.3 describes
how clusters are induced from the model.
3.1 Model Structure
We implement our model in the MRF framework
(Koller and Friedman, 2009). This enables us to
encode the two main sources of information that
govern SCF selection in verb instances: (1) At
the sentential context, the verbal syntactic frame
is encoded through syntactic features. Verb in-
stances with similar feature representations should
therefore take the same syntactic frame; and (2)
At the global context, per verb type SCF distribu-
tions tend to be Zipfian (Korhonen et al., 2000).
Instances of the same verb type should therefore
be biased to take the same syntactic frame.
Given a collection of plain input sentences, we
denote the number of verb instances in the col-
lection with n, and the number of data-dependent
equivalence classes (ECs) with K (see below for
their definition), and define an undirected graphi-
cal model (MRF), G = (V,E, L). We define the
vertex set as V = X ?C, with X = {x
1
, . . . , x
n
}
consisting of one vertex for every verb instance in
the input collection, and C = {c
1
. . . c
K
} consist-
ing of one vertex for each data-dependent EC. The
set of labels used by the model, L, corresponds to
the syntactic frames taken by the verbs in the in-
put data. The edge set E is defined through the
model’s potentials that are described below.
280
We encode information in the model through
three main sets of potentials: one set of single-
ton potentials - defined over individual model ver-
texes, and two sets of pairwise potentials - defined
between pairs of vertexes. The first set consists of
a singleton potential for each vertex in the model.
Reflecting the Zipfian distribution of SCFs across
the instances of the same verb type, these poten-
tials encourage the model to assign such verb in-
stances to the same frame (cluster). The infor-
mation encoded in these potentials is induced via
a pre-processing clustering step. The second set
consists of a pairwise potential for each pair of ver-
texes x
i
, x
j
? X - that is, for each verb instance
pair in the input, across verb types. These poten-
tials encode the belief, computed as feature-based
similarity (see below), that their verb instance ar-
guments implement the same SCF.
Finally, potentials from the last set bias the
model to assign the same SCF to high cardinal-
ity sets of cross-type verb instances based on their
syntactic context. While these are pairwise poten-
tials defined between verb instance vertexes (X)
and EC vertexes (C), they are designed so that
they bias the assignment of all verb instance ver-
texes that are connected to the same EC vertex to-
wards the same frame assignment (l ? L). The
two types of pairwise potentials complement each
other by modeling syntactic similarities among
verb instance pairs, as well as among higher cardi-
nality verb instance sets.
The resulted maximum aposteriori problem
(MAP) takes the following form:
MAP (V ) = argmax
x,c?V
n?
i=1
?
i
(x
i
) +
n?
i=1
n?
j=1
?
i,j
(x
i
, x
j
)+
n?
i=1
K?
j=1
?
i,j
(x
i
, c
j
) · I(x
i
? EC
j
) +
K?
i=1
K?
j=1
?
i,j
(c
i
, c
j
)
where the predicate I(x
i
? EC
j
) returns 1 if
the i-th verb instance belongs the j-th equivalence
class and 0 otherwise. The ? pairwise potentials
defined between EC vertexes are very simple po-
tentials designed to promise different assignments
for each pair of EC vertexes. They do so by assign-
ing a ?? score to assignments where their argu-
ment vertexes take the same frame and a 0 other-
wise. In the rest of this section we do not get back
to this simple set of potentials.
A graphical illustration of the model is given
in Figure 1. Note that we could have selected a
richer model structure, for example, by defining
a similarity potential over all verb instance ver-
texes that share an equivalence class. However, as
the figure demonstrates, even the structure of the
pruned version of our model (see Section 3.3) usu-
ally contains cycles, which makes inference NP-
hard (Shimony, 1994). Our design choices aim to
balance between the expressivity of the model and
the complexity of inference. In Section 3.3 we de-
scribe the LP relaxation algorithm we use for in-
ference.
C1 C2
Figure 1: A graphical illustration of our model
(after pruning, see Sec. 3.3) for twenty verb in-
stances (|X| = 20), each represented with a black
vertex, and two equivalence classes (ECs), each
represented with a gray vertex (|C| = 2). Solid
lines represent edges (and ?
i,j
pairwise potentials)
between verb instance vertexes. Dashed lines rep-
resent edges between verb instance vertexes and
EC vertexes (?
i,j
pairwise potentials) or between
EC vertexes (?
i,j
pairwise potentials) .
3.2 Potentials and Encoded Knowledge
Pairwise Syntactic Similarity Potentials. The
pairwise syntactic similarity potentials are defined
for each pair of verb instance vertexes, x
i
, x
j
? X .
They are designed to encourage the model to as-
sign verb instances with similar fine-grained fea-
ture representations to the same frame (l ? L)
and verb instances with dissimilar representations
to different frames. For this aim, for every verb
pair i, j with feature representation vectors v
i
, v
j
and verb instance vertexes x
i
, x
j
? X , we define
the following potential function:
?
i,j
(x
i
= l
1
, x
j
= l
2
) =
{
?(v
i
, v
j
) if l
1
= l
2
0 otherwise
}
Where l
1
, l
2
? L are label pairs and ? is a verb
instance similarity function. Below we describe
the feature representation and the ? function.
The verb instance feature representation is de-
fined through the following process. For each
281
word instance in the input sentences we first build
a basic feature representation (see below). Then,
for each verb instance we construct a final fea-
ture representation defined to be the concatena-
tion of that verb’s basic feature representation with
the basic representations of the words in a size
2 window around the represented verb. The fi-
nal feature representation for the i-th verb in-
stance in our dataset is therefore defined to be
v
i
= [w
?2
, w
?1
, vb
i
, w
+1
, w
+2
], where w
?k
and
w
+k
are the basic feature representations of the
words in distance ?k or +k from the i-th verb in-
stance in its sentence, and vb
i
is the basic feature
representation of that verb instance.
Our basic feature representation is inspired
from the feature representation of the MST parser
(McDonald et al., 2005) except that in the parser
the features represent a directed edge in the com-
plete directed graph defined over the words in a
sentence that is to be parsed, while our features are
generated for word n-grams. Particularly, our fea-
ture set is a concatenation of two sets derived from
the MST set described in Table 1 of (McDonald et
al., 2005) in the following way: (1) In both sets the
parent word in the parser’s set is replaced with the
represented word; (2) In one set every child word
in the parser’s set is replaced by the word to the
left of the represented word and in the other set it
is replaced by the word to its right. This choice of
features allows us to take advantage of a provably
useful syntactic feature representation without the
application of any parse tree annotation or parser.
We compute the similarity between the syntac-
tic environments of two verb instances, i, j, using
the following equation:
?(v
i
, v
j
) = W · cos(v
i
, v
j
)? S
Where W is a hyperparameter designed to bias
verb instances of the same verb type towards the
same frame. Practically, W was tuned to be 3 for
instances of the same type, and 1 otherwise
4
.
While the cosine function is the standard mea-
sure of similarity between two vectors, its val-
ues are in the [0, 1] range. In the MRF modeling
framework, however, we must encode a negative
pairwise potential value between two vertexes in
order to encourage the model to assign different
labels (frames) to them. We therefore added the
positive hyperparameter S which was tuned, with-
4
All hyperparameters that require gold-standard annota-
tion for tuning, were tuned using held-out data (Section 4).
out access to gold standard manual annotations, so
that there is an even number of negative and pos-
itive pairwise syntactic similarity potentials after
the model is pruned (see Section 3.3)
5
.
Type Level Singleton Potentials. The goal of
these potentials is to bias verb instances of the
same type to be assigned to the same syntactic
frame while still keeping the instance based nature
of our algorithm. For this aim, we applied Algo-
rithm 1 for pre-clustering of the verb instances and
encoded the induced clusters into the local poten-
tials of the corresponding x ? X vertexes. For
every x ? X the singleton potential is therefore
defined to be:
?
i
(x
i
= l) =
{
F · max? if l is induced by Algorithm 1
0 otherwise
}
where max? is the maximum ? score across all
verb instance pairs in the model and F = 0.2 is a
hyperparamter.
Algorithm 1 has two hyperparameters: T and
M , the first is a similarity cut-off value used to de-
termine the initial set of clusters, while the second
is used to determine whether two clusters are simi-
lar enough to be merged. We tuned these hyperpa-
rameters, without manually annotated data, so that
the number of clusters induced by this algorithm
will be equal to the number of gold standard SCFs.
T was tuned so that the first part of the algorithm
generates an excessive number of clusters, and M
was then tuned so that these clusters are merged to
the desired number of clusters.
The ? function, used to measure the similar-
ity between two verbs, is designed to bias the in-
stances of the same verb type to have a higher sim-
ilarity score. Algorithm 1 therefore tends to assign
such instances to the same cluster. In our experi-
ments that was always the case for this algorithm.
High Cardinality Verb Sets Potentials. This
set of potentials aims to bias larger sets of verb
instances to share the same SCF. It is inspired by
(Rush et al., 2012) who demonstrated, that syn-
tactic structures that appear at the same syntac-
tic context, in terms of the surrounding POS tags,
tend to manifest similar syntactic behavior. While
they demonstrated the usefulness of their method
for dependency parsing and POS tagging, we im-
plement it for higher level SCFs.
We identified syntactic contexts that imply simi-
lar SCFs for verb instances appearing inside them.
5
The values in practice are S = 0.43 for labour legislation
and S = 0.38 for environment.
282
Algorithm 1 Verb instance pre-clustering algo-
rithm.
ˆ
? is the average ? score between the mem-
bers of its cluster arguments. T and M are hyper-
parametes tuned without access to gold standard
data.
Require: K = ?
for all x ? X do
for all k ? K do
for all u ? k do
if ?(v
x
, v
u
) > T then
k = k ? {x}
Go to next x
end if
end for
end for
k1 = {x}
K = K ? k1
end for
for all k
1
, k
2
? K: k
1
6= k
2
do
if
ˆ
?(k
1
, k
2
) > M then
Merge (k
1
, k
2
)
end if
end for
Contexts are characterized by the coarse POS tag
to the left and to the right of the verb instance.
While the number of context sets is bounded only
by the number of frames our model is designed
to induce, in practice we found that defining two
equivalence sets led to the best performance gain,
and the sets we used are presented in Table 1.
In order to encode this information into our
MRF, each set of syntactic contexts is associated
with an equivalence class (EC) vertex c ? C and
the verb instance vertexes of all verbs that appear
in a context from that set are connected with an
edge to c. The pairwise potential between a vertex
x ? X and its equivalence class is defined to be:
?
i,j
(x
i
= l
1
, c
j
= l
2
) =
{
U if l
1
= l
2
0 otherwise
}
U = 10 is a hyperparameter that strongly biases x
vertexes to get the same SCF as their EC vertex.
3.3 Verb Cluster Induction
In this section we describe how we induce verb
instance clusters from our model. This process
is based on the following three steps: (1) Graph
pruning; (2) Induction of an Ensemble of approx-
imate MAP inference solutions in the resulted
graphical model; and, (3) Induction of a final clus-
tering solution based on the ensemble created at
step 2. Below we explain the necessity of each of
these steps and provide the algorithmic details.
EC-1 EC-2
Left Right Left Right
, D V T
N D R T
V . N D
R D R N
Table 1: POS contexts indicative for the syntactic
frame of the verb instance they surround. D: de-
terminer, N: noun, V: verb, T: the preposition ’to’
(which has its own POS tag in the WSJ POS tag set
which we use), R: adverb. EC-1 and EC-2 stand
for the first and second equivalence class respec-
tively. In addition, the following contexts where
associated with both ECs: (T,D), (T,N), (N,N)
and (V, I) where I stands for a preposition.
Graph Pruning. The edge set of our model
consists of an edge for every pair of verb in-
stance vertexes and of the edges that connect verb
instance vertexes and equivalence class vertexes.
This results in a large tree-width graph which sub-
stantially complicates MRF inference. To alleviate
this we prune all edges with a positive score lower
than p
+
and all edges with a negative score higher
than p
?
, where p
+
and p
?
are manually tuned hy-
perparametes
6
.
MAP Inference. For most reasonable values of
p
+
and p
?
our graph still contains cycles even af-
ter it is pruned, which makes inference NP-hard
(Shimony, 1994). Yet, thanks to our choice of an
edge-factorized model, there are various approxi-
mate inference algorithms suitable for our case.
We applied the message passing algorithm for
linear-programming (LP) relaxation of the MAP
assignment (MPLP, (Sontag et al., 2008)). LP re-
laxation algorithms for the MAP problem define
an upper bound on the original objective which
takes the form of a linear program. Consequently,
a minimum of this upper bound can be found us-
ing standard LP solvers or, more efficiently, using
specialized message passing algorithms (Yanover
et al., 2006). The MPLP algorithm described in
(Sontag et al., 2008) is appealing in that it itera-
tively computes tighter upper bounds on the MAP
objective (for details see their paper).
Cluster Ensemble Generation and a Final
Solution. As our MAP objective is non-convex,
6
The values used in practice are p
+
= 0.28, p
?
= ?0.17
for the labour legislation dataset, and p
+
= 0.25, p
?
=
?0.20 for the environment set.
283
the convergent point of an optimization algorithm
applied to it is highly sensitive to its initializa-
tion. To avoid convergence to arbitrary local max-
ima which may be of poor quality, we turn to a
perturbation protocol where we repeatedly intro-
duce random noise to the MRF’s potential func-
tions and then compute the approximate MAP so-
lution of the resulted model using the MPLP algo-
rithm. Noising was done by adding an  term to
the lambda values described in section 3.2
7
. This
protocol results in a set of cluster (label) assign-
ments for the involved verb instances, which we
treat as an ensemble of experts from which a final,
high quality, solution is to be induced.
The basic idea in ensemble learning is that if
several experts independently cluster together two
verb instances, our belief that these verbs belong
in the same cluster should increase. (Reichart et
al., 2012) implemented this idea through the k-
way normalized cut clustering algorithm (Yu and
Shi, 2003). Its input is an undirected graph
ˆ
G =
(
ˆ
V ,
ˆ
E,
ˆ
W ) where
ˆ
V is the set of vertexes,
ˆ
E is
the set of edges and
ˆ
W is a non-negative and sym-
metric edge weight matrix. To apply this model
to our task, we construct the input graph
ˆ
G from
the labelings (frame assignments) contained in the
ensemble. The graph vertexes
ˆ
V correspond to the
verb instances and the (i, j)-th entry of the matrix
ˆ
W is the number of ensemble members that assign
the same label to the i-th and j-th verb instances.
For A,B ?
ˆ
V define:
links(A,B) =
?
i?A,j?B
ˆ
W (i, j)
Using this definition, the normalized link ratio
of A and B is defined to be:
NormLinkRatio(A,B) =
links(A,B)
links(A,
ˆ
V )
The k-way normalized cut problem is to mini-
mize the links that leave a cluster relative to the
total weight of the cluster. Denote the set of clus-
terings of
ˆ
V that consist of k clusters by
ˆ
C =
{cˆ
1
, . . . cˆ
t
} and the j-th cluster of the i-th cluster-
7
 was accepted by first sampling a number in the [0, 1]
range using the Java psuodorandom generator and then scal-
ing it to 1% of cos(v
i
, v
j
). This value was tuned, without
access to gold standard manual annotations, so that there is
an even number of negative and positive pairwise syntactic
similarity potentials after the model is pruned (Section 3.3).
ing by cˆ
ij
. Then
c
?
= argmin
cˆ
i
?
ˆ
C
k
?
j=1
NormLinkRatio(cˆ
ij
,
ˆ
V ? cˆ
ij
)
The algorithm of (Yu and Shi, 2003) solves this
problem very efficiently as it avoids the heavy
eigenvalues and eigenvectors computations re-
quired by traditional approaches.
4 Experiments and Results
Our model is unique compared to existing systems
in two respects. First, it does not utilize supervi-
sion in the form of either a supervised syntactic
parser and/or manually crafted SCF rules. Conse-
quently, it induces unnamed frames (clusters) that
are not directly comparable to the named frames
induced by previous systems. Second, it induces
syntactic frames at the verb instance, rather than
type, level. Evaluation, and especially comparison
to previous work, is therefore challenging.
We therefore evaluate our system in two ways.
First, we compare its output, as well as the output
of a number of clustering baselines, to the gold
standard annotation of corpora from two differ-
ent domains (the only publicly available ones with
instance level SCF annotation, to the best of our
knowledge). Second, in order to compare the out-
put of our system to a rule-based SCF system that
utilizes a supervised syntactic parser, we turn to
a task-based evaluation. We aim to predict the
degree of similarity between verb pairs and, fol-
lowing (Pado and Lapata, 2007) , we do so using
a syntactic-based vector space model (VSM). We
construct three VSMs - (a) one that derives fea-
tures from our clusters; (b) one whose features
come from the output of a state-of-the-art verb
type level, rule based, SCF system (Reichart and
Korhonen, 2013) that uses a modern parser (Klein
and Manning, 2003); and (c) a standard lexical
VSM. Below we show that our system compares
favorably in both evaluations.
Data. We experimented with two datasets taken
from different domains: labor legislation and en-
vironment (Quochi et al., 2012). These datasets
were created through web crawling followed by
domain filtering. Each sentence in both datasets
may contain multiple verbs but only one target
verb has been manually annotated with a SCF.
The labour legislation domain dataset contains
4415 annotated verb instances (and hence also
284
sentences) of 117 types, and the environmental
domain dataset contains 4503 annotated verb in-
stances of 116 types. In both datasets no verb type
accounts for more than 4% of the instances and
only up to 35 verb types account for 1% of the
instances or more. The lexical difference between
the corpora is substantial: they share only 42 anno-
tated verb types in total, of which only 2 verb types
(responsible for 4.1% and 5.2% of the instances in
the environment and labor legislation domains re-
spectively) belong to the 20 most frequent types
(responsible for 37.9% and 46.85% of the verb in-
stances in the respective domains) of each corpus.
The 29 members of the SCF inventory are de-
tailed in (Quochi et al., 2012). Table 2, presenting
the distribution of the 5 highest frequency frames
in each corpus, demonstrates that, in addition to
the significant lexical difference, the corpora differ
to some extent in their syntactic properties. This is
reflected by the substantially different frequencies
of the ”dobj:iobj-prep:su” and ”dobj:su” frames.
As a pre-processing step we first POS tagged
the datasets with the Stanford tagger (Toutanova
et al., 2003) trained on the standard POS training
sections of the WSJ PennTreebank corpus.
4.1 Evaluation Against SCF Gold Standard
Experimental Protocol The computational com-
plexity of our algorithm does not allow us to run it
on thousands of verb instances in a feasible time.
We therefore repeatedly sampled 5% of the sen-
tences from each dataset, ran our algorithm as well
as the baselines (see below) and report the average
performance of each method. The number of rep-
etitions was 40 and samples were drawn from a
uniform distribution while still promising that the
distribution of gold standard SCFs in each sam-
ple is identical to their distribution in the entire
dataset. Before running this protocol, 5% of each
corpus was kept as held-out data on which hyper-
parameter tuning was performed.
EvaluationMeasures and Baselines. We com-
pare our system’s output to instance-level gold
standard annotation. We use standard measures
for clustering evaluation, one measure from each
of the two leading measure types: the V measure
(Rosenberg and Hirschberg, 2007), which is an in-
formation theoretic measure, and greedy many-to-
one accuracy, which is a mapping-based measure.
For the latter, each induced cluster is first mapped
to the gold SCF frame that annotates the highest
number of verb instances this induced cluster also
annotates and then a standard instance-level accu-
racy score is computed (see, e.g., (Reichart and
Rappoport, 2009)). Both measures scale from 100
(perfect match with gold standard) to 0 (no match).
As mentioned above, comparing the perfor-
mance of our system with respect to a gold stan-
dard to the performance of previous type-level
systems that used hand-crafted rules and/or su-
pervised syntactic parsers would be challenging.
We therefore compare our model to the follow-
ing baselines: (a) The most frequent class (MFC)
baseline which assigns all verb instances with the
SCF that is the most frequent one in the gold stan-
dard annotation of the data; (b) The Random base-
line which simply assigns every verb instance with
a randomly selected SCF; (c) Algorithm 1 of sec-
tion 3.2 which generates unsupervised verb in-
stance clustering such that verb instances of the
same type are assigned to the same cluster; and
(d) Finally, we also compare our model against
versions where everything is kept fixed, except a
subset of potentials which is omitted. This enables
us to study the intricacies of our model and the rel-
ative importance of its components. For all mod-
els, the number of induced clusters is equal to the
number of SCFs in the gold standard.
Results Table 3 presents the results, demon-
strating that our full model substantially outper-
forms all baselines. For the first two simple heuris-
tic baselines (MFC and Random) the margin is
higher than 20% for both the greedy M-1 mapping
measure and the V measure. Note tat the V score
of the MFC baseline is 0 by definition, as it as-
signs all items to the same cluster. The poor per-
formance of these simple baselines is an indication
of the difficulty of our task.
Recall that the type level clustering induced by
Algorithm 1 is the main source of type level in-
formation our model utilizes (through its single-
ton potentials). The comparison to the output of
this algorithm (the Type Pre-clustering baseline)
therefore shows the quality of the instance level
refinement our model provides. As seen in table 3,
our model outperforms this baseline by 6.9% for
the M-1 measure and 5.2% for the V measure.
In order to compare our model to its compo-
nents we exclude either the EC potentials (? and
?) only (Model - EC), or the EC and the singleton
potentials (?
i
, Model - EC - Type pre-clustering).
The results show that our model gains much more
285
Environment Labour Legislation
SCF Frequency SCF Frequency
dobj:su 46% dobj:su 39%
su 9% dobj:iobj-prep:su 15%
iobj-prep:su 8% su 10%
dobj:iobj-prep:su 6% su:xcompto-vbare 8%
su:xcompto-vbare 6% iobj-prep:su 7%
Table 2: Top 5 most frequent SCFs for the Environment and Labour Legislation datasets used in our
experiments.
Environment Labour Legislation
M-1 V M-1 V
Full Model 66.4 57.3 69.2 55.6
Baselines
MFC 46.2 0 39.4 0
Random 34.6 28.1 36.5 27.8
Type Pre-clustering 60.1 52.1 62.3 51.4
Model Components
Model - EC 64.9 56.2 67.4 54.6
Model - EC - Type pre-clustering 48.3 48.9 45.7 44.7
Table 3: Results for our full model, the baselines (Type Pre-clustering: the pre-clustering algorithm
(Algorithm 1 of section 3.2), MFC: the most frequent class (SCF) in the gold standard annotation and
Random: random SCF assignment) and the model components. The full model outperforms all other
models across measures and datasets.
from the type level information encoded through
the singleton potentials than from the EC poten-
tials. Yet, EC potentials do lead to an improvement
of up to 1.5% in M-1 and up to 1.1% in V and are
therefore responsible for up to 26.1% and 21.2%
of the improvement over the type pre-clustering
baseline in terms of M-1 and V, respectively.
4.2 Task Based Evaluation
We next evaluate our model in the context of vec-
tor space modeling for verb similarity prediction
(Turney and Pantel, 2010). Since most previous
word similarity works used noun datasets, we con-
structed a new verb pair dataset, following the pro-
tocol used in the collection of the wordSimilarity-
353 dataset (Finkelstein et al., 2002).
Our dataset consists of 143 verb pairs, con-
structed from 122 unique verb lemma types. The
participating verbs appear ? 10 times in the con-
catenation of the labour legislation and the envi-
ronment datasets. Only pairs of verbs that were
considered at least remotely similar by human
judges (independent of those that provided the
similarity scores) were included. A similarity
score between 1 and 10 was assigned to each pair
by 10 native English speaking annotators and were
then averaged in order to get a unique pair score.
Our first baseline is a standard VSM based on
lexical collocations. In this model features corre-
spond to the number of collocations inside a size
2 window of the represented verb with each of the
5000 most frequent nouns in the Google n-gram
corpus (Goldberg and Orwant, 2013). Since our
corpora are limited in size, we use the collocation
counts from the Google corpus.
We used our model to generate a vector repre-
sentation of each verb in the following way. We
run the model 5000 times, each time over a set of
verbs consisting of one instance of each of the 122
verb types participating in the verb similarity set.
The output of each such run is transformed to a
binary vector for each participating verb, where
all coordinates are assigned the value of 0, ex-
cept from the one that corresponds to the cluster to
which the verb was assigned which has the value
of 1. The final vector representation is a concate-
nation of the 5000 binary vectors. Note that for
this task we did not use the graph cut algorithm to
generate a final clustering from the multiple MRF
286
runs. Instead we concatenated the output of all
these runs into one feature representation that fa-
cilitates similarity prediction. For our model we
estimated the verb pair similarity using the Tani-
mato similarity score for binary vectors:
T (X,Y ) =
?
i
X
i
? Y
i
?
i
x
i
? Y
i
For the baseline model, where the features are
collocation counts, we used the standard cosine
similarity.
Our second baseline is identical to our model,
except that: (a) the data is parsed with the Stan-
ford parser (version 3.3.0, (Klein and Manning,
2003)) which was trained with sections 2-21 of the
WSJ corpus; (b) the phrase structure output of the
parser is transformed to the CoNLL dependency
format using the official CoNLL 2007 conversion
script (Johansson and Nugues, 2007); and then (c)
the SCF of each verb instance is inferred using the
rule-based system used by (Reichart and Korho-
nen, 2013). The vector space representation for
each verb is then created using the process we de-
scribed for our model and the same holds for vec-
tor comparison. This baseline allows direct com-
parison of frames induced by our SCF model with
those derived from a supervised parser’s output.
We computed the Pearson correlation between
the scores of each of the models and the human
scores. The results demonstrate the superiority
of our model in predicting verb similarity: the
correlation of our model with the human scores
is 0.642 while the correlation of the lexical col-
location baseline is 0.522 and that of the super-
vised parser baseline is only 0.266. The results
indicate that in addition to their good alignment
with SCFs, our clusters are also highly useful for
verb meaning representation. This is in line with
the verb clustering theory of the Levin tradition
(Levin, 1993) which ties verb meaning with their
syntactic properties. We consider this an intrigu-
ing direction of future work.
5 Conclusions
We presented an MRF-based unsupervised model
for SCF acquisition which produces verb instance
level SCFs as output. As opposed to previous sys-
tems for the task, our model uses only a POS tag-
ger, avoiding the need for a statistical parser or
manually crafted rules. The model is particularly
valuable for NLP tasks benefiting from SCFs that
are applied across text domains, and for the many
tasks that involve sentence-level processing.
Our results show that the accuracy of the model
is promising, both when compared against gold
standard annotations and when evaluated in the
context of a task. In the future we intend to im-
prove our model by encoding additional informa-
tion in it. We will also adapt it to a multilingual
setup, aiming to model a wide range of languages.
Acknowledgments
The first author is supported by the Common-
wealth Scholarship Commission (CSC) and the
Cambridge Trust.
References
Ivana Romina Altamirano and Laura Alonso i Ale-
many. 2010. IRASubcat, a highly customizable,
language independent tool for the acquisition of ver-
bal subcategorization information from corpus. In
Proceedings of the NAACL 2010 Workshop on Com-
putational Approaches to Languages of the Ameri-
cas.
Abhishek Arun and Frank Keller. 2005. Lexicalization
in crosslinguistic probabilistic parsing: The case of
french. In Proceedings of ACL-05.
Taylor Berg-Kirkpatrick, Alexander Bouchard-Cote,
John DeNero, and Dan Klein. 2010. Painless un-
supervised learning with features. In Proceedings of
NAACL-HLT-10.
Akshar Bharati, Sriram Venkatapathy, and Prashanth
Reddy. 2005. Inferring semantic roles using sub-
categorization frames and maximum entropy model.
In Proceedings of CoNLL-05.
Ted Briscoe and John Carroll. 1997. Automatic ex-
traction of subcategorization from corpora. In Pro-
ceedings of ANLP-97.
Ted Briscoe, John Carroll, and Rebecca Watson. 2006.
The second release of the rasp system. In Proceed-
ings of ACL-COLING-06.
John Carroll and Alex Fang. 2004. The automatic ac-
quisition of verb subcategorisations and their impact
on the performance of an HPSG parser. In Proceed-
ings of IJCNLP-04.
Paula Chesley and Susanne Salmon-Alt. 2006. Au-
tomatic extraction of subcategorization frames for
french. In Proceedings of LREC-06.
Kostadin Cholakov and Gertjan van Noord. 2010. Us-
ing unknown word techniques to learn known words.
In Proceedings of EMNLP-10.
287
Shay Cohen and Noah Smith. 2009. Shared logistic
normal distributions for soft parameter tying in un-
supervised grammar induction. In Proceedings of
NAACL-HLT-09.
Marie-Catherine De-Marneffe, Bill Maccartney, and
Christopher Manning. 2006. Generating typed de-
pendency parses from phrase structure parses. In
Proceedings of LREC-06.
Lukasz Debowski. 2009. Valence extraction using EM
selection and co-occurrence matrices. Proceedins of
LREC-09.
Lev Finkelstein, Evgeniy Gabrilovich, Yossi Matias,
Ehud Rivlin, Zach Solan, Gadi Wolfman, and Ei-
tan Ruppin. 2002. Placing search in context: The
concept revisited. ACM Transactions on Informa-
tion Systems, 20:116–131.
Yoav Goldberg and Jon Orwant. 2013. A dataset of
syntactic-ngrams over time from a very large corpus
of english books. In Proceedings of (*SEM)-13. As-
sociation for Computational Linguistics.
Jan Haji?c, Martin mejrek, Bonnie Dorr, Yuan Ding, Ja-
son Eisner, Daniel Gildea, Terry Koo, Kristen Par-
ton, Gerald Penn, Dragomir Radev, and Owen Ram-
bow. 2002. Natural language generation in the con-
text of machine translation. Technical report, Cen-
ter for Language and Speech Processing, Johns Hop-
kins University, Baltimore. Summer Workshop Final
Report.
Chung hye Han, Benoit Lavoie, Martha Palmer, Owen
Rambow, Richard Kittredge, Tanya Korelsky, and
Myunghee Kim. 2000. Handling structural diver-
gences and recovering dropped arguments in a ko-
rean/english machine translation system. In Pro-
ceedings of the AMTA-00.
Dino Ienco, Serena Villata, and Cristina Bosco. 2008.
Automatic extraction of subcategorization frames
for italian. In Proceedings of LREC-08.
Richard Johansson and Pierre Nugues. 2007. Ex-
tended constituent-to-dependency conversion for en-
glish. In Proceedings of NODALIDA-07.
Daisuke Kawahara and Sadao Kurohashi. 2010. Ac-
quiring reliable predicate-argument structures from
raw corpora for case frame compilation. In Proceed-
ings of LREC-10.
Dan Klein and Christopher Manning. 2003. Accurate
unlexicalized parsing. In Proceedings of ACL-03.
Daphne Koller and Nir Friedman. 2009. Probabilistic
graphical models: principles and techniques. The
MIT Press.
Anna Korhonen, Genevieve Gorrell, and Diana Mc-
Carthy. 2000. Statistical filtering and subcate-
gorization frame acquisition. In Proceedings of
EMNLP-00.
Anna Korhonen. 2002. Semantically motivated sub-
categorization acquisition. In Proceedings of the
ACL-02 workshop on Unsupervised lexical acquisi-
tion.
Joel Lang and Mirella Lapata. 2011a. Unsupervised
semantic role induction via split-merge clustering.
In Proceedings of ACL-11.
Joel Lang and Mirella Lapata. 2011b. Unsupervised
semantic role induction with graph partitioning. In
Proceedings of EMNLP-11.
Matthew Lease and Eugene Charniak. 2005. Parsing
biomedical literature. In Proceedings of IJCNLP-
05.
Alessandro Lenci, Barbara Mcgillivray, Simonetta
Montemagni, and Vito Pirrelli. 2008. Unsupervised
acquisition of verb subcategorization frames from
shallow-parsed corpora. In Proceedings of LREC-
08.
Beth Levin. 1993. English verb classes and alterna-
tions: A preliminary investigation. Chicago, IL.
Tom Lippincott, Anna Korhonen, and Diarmuid Os-
eaghdha. 2010. Exploring subdomain variation in
biomedical language. BMC Bioinformatics.
Tom Lippincott, Aanna Korhonen, and Diarmuid Os-
eaghdha. 2012. Learning syntactic verb frames us-
ing graphical models. In Proceedings of ACL-12.
Ryan McDonald, Koby Crammer, and Fernando
Pereira. 2005. Online large-margin training of de-
pendency parsers. In Proceedings of ACL-05.
Cedric Messiant, Anna Korhonen, and Thierry
Poibeau. 2008. LexSchem: A large subcategoriza-
tion lexicon for French verbs. In Proceedings of
LREC-08.
Cedric Messiant. 2008. A subcategorization acquis-
tion system for french verbs. In Proceedings of
ACL08-SRW.
Yusuke Miyao and Junichi Tsujii. 2005. Probabilistic
disambiguaton models for wide-coverage hpsg pars-
ing. In Proceedings of ACL-05.
Alessandro Moschitti and Roberto Basili. 2005. Verb
subcategorization kernels for automatic semantic la-
beling. In Proceedings of the ACL-SIGLEX Work-
shop on Deep Lexical Acquisition.
Ruth O’Donovan, Michael Burke, Aoife Cahill, Josef
van Genabith, and Andy Way. 2005. Large-scale
induction and evaluation of lexical resources from
the penn-ii and penn-iii treebanks. Computational
Linguistics, 31:328–365.
Sebastian Pado and Mirella Lapata. 2007.
Dependency-based construction of semantic space
models. Computational Linguistics, 33:161–199.
288
Judita Preiss, Ted Briscoe, and Anna Korhonen. 2007.
A system for large-scale acquisition of verbal, nom-
inal and adjectival subcategorization frames from
corpora. In Proceedings of ACL-07.
Valeria Quochi, Francesca Frontini, Roberto Bartolini,
Olivier Hamon, Marc Poch, Muntsa Padr, Nuria Bel,
Gregor Thurmair, Antonio Toral, and Amir Kam-
ram. 2012. Third evaluation report. evaluation of
panacea v3 and produced resources. Technical re-
port.
Roi Reichart and Anna Korhonen. 2013. Improved
lexical acquisition through dpp-based verb cluster-
ing. In Proceedings of ACL-13.
Roi Reichart and Ari Rappoport. 2009. The nvi
clustering evaluation measure. In Proceedings of
CoNLL-09.
Roi Reichart, Gal Elidan, and Ari Rappoport. 2012. A
diverse dirichlet process ensemble for unsupervised
induction of syntactic categories. In Proceedings of
COLING-12.
Laura Rimell, Thomas Lippincott, Karin Verspoor, He-
len Johnson, and Anna Korhonen. 2013. Acqui-
sition and evaluation of verb subcategorization re-
sources for biomedicine. Journal of Biomedical In-
formatics, 46:228–237.
Eric Ringger, Peter McClanahan, Robbie Haertel,
George Busby, Marc Carmen, James Carroll, Kevin
Seppi, and Deryle Lonsdale. 2007. Active learning
for part-of-speech tagging: Accelerating corpus an-
notation. In Proceedings of the ACL-07 Linguistic
Annotation Workshop.
Douglas Roland and Daniel Jurafsky. 1998. subcate-
gorization frequencies are affected by corpus choice.
In Proceedings of ACL-98.
Andrew Rosenberg and Julia Hirschberg. 2007. V
measure: a conditional entropybased external cluster
evaluation measure. In Proceedings of EMNLP-07.
Alexander Rush, Roi Reichart, Michael Collins, and
Amir Globerson. 2012. Improved parsing and pos
tagging using inter-sentence consistency constraints.
In Proceedings of EMNLP-12.
Sabine Schulte im Walde. 2006. Experiments on
the automatic induction of german semantic verb
classes. Computational Linguistics, 32(2):159–194.
Solomon Shimony. 1994. Finding the maps for belief
networks is np-hard. Artificial Intelligence, 68:399–
310.
David Sontag, Talya Meltzer, Amir Globerson, Tommi
Jaakkola, and Yair Weiss. 2008. Tightening lp re-
laxations for map using message passing. In Pro-
ceedings of UAI-08.
Lin Sun and Anna Korhonen. 2011. Hierarchical verb
clustering using graph factorization. In Proceedings
of EMNLP-11.
Ivan Titvo and Alexandre Klementiev. 2012. A
bayesian approach to unsupervised semantic role in-
duction. In Proceedings of EMNLP-12.
Kristina Toutanova, Dan Klein, Christopher Manning,
and Yoram Singer. 2003. Feature-rich part-of-
speech tagging with a cyclic dependency network.
In Proceedings of NAACL-03.
Peter Turney and Patrick Pantel. 2010. From fre-
quency to meaning: Vector space models of se-
mantics. Journal of artificial intelligence research,
37:141–188.
Tim Van de Cruys, Laura Rimell, Thierry Poibeau, and
Anna Korhonen. 2012. Multi-way tensor factor-
ization for unsupervised lexical acquisition. In Pro-
ceedings of COLING-12.
Giulia Venturi, Simonetta Montemagni, Simone
Marchi, Yutaka Sasaki, Paul Thompson, John Mc-
Naught, and Sophia Ananiadou. 2009. Bootstrap-
ping a verb lexicon for biomedical information ex-
traction. Computational Linguistics and Intelligent
Text Processing, 5449:137–148.
Marion Weller, Alexander Fraser, and Sabine Schulte
im Walde. 2013. Using subcategorization knowl-
edge to improve case prediction for translation to
german. In Proceedings of ACL-13.
Chen Yanover, Talya Meltzer, and Yair Weiss. 2006.
Linear programming relazations and belief pro-
pogataion an empitical study. JMLR Special Issue
on Machine Learning and Large Scale Optimization.
Stella Yu and Jianbo Shi. 2003. Multiclass spectral
clustering. In Proceedings of ICCV-13.
289
