On Reason ing  wi th  Ambigu i t ies  
Uwe Reyle 
Institute for Computational Linguistics 
University of Stuttgart 
Azenbergstr.12, D-70174 Stuttgart, Germany 
e-mail: uwe@ims.uni-stuttgart.de 
Abstract 
The paper adresses the problem of reasoning with 
ambiguities. Semantic representations are presented 
that leave scope relations between quantifiers and/or 
other operators unspecified. Truth conditions are 
provided for these representations and different con- 
sequence relations are judged on the basis of intuitive 
correctness. Finally inference patterns are presented 
that operate directly on these underspecified struc- 
tures, i.e. do not rely on any translation into the set 
of their disambiguations. 
1 Introduction 
Whenever we hear a sentence or read a text we build 
up mental representations i  which some aspects of 
the meaning of the sentence or text are left underspe- 
cified. And if we accept what we have heard or read 
as true, then we will use these underspecified repre- 
sentations as premisses for arguments. The challenge 
is, therefore, to equip underspecified semantic repre- 
sentations with well-defined truth conditions and to 
formulate inference patterns for these representati- 
ons that follow the arguments that we judge as in- 
tuitively correct. Several proposals exist for the de- 
finition of the language, but only very few authors 
have addressed the problem of defining a logic of 
ambiguous reasoning. 
\[8\] considers lexical ambiguities and investigates 
structural properties of a number of consequence r - 
lations based on an abstract notion of coherency. It
is not clear, however, how this approach could be 
extended to other kinds of ambiguities, especially 
quantifier scope ambiguities and ambiguities trigge- 
red by plural NPs. \[1\], \[7\] and \[6\] deal with ambigui- 
ties of the latter kind. They give construction rules 
and define truth conditions according to which an 
underspecified representation f an ambiguous ent- 
ence is true if one of its disambiguations is. The pro- 
blem of reasoning is adressed only in \[5\] and \[7\]. \[5\]'s 
inference schemata yield a very weak logic only; and 
\[7\]'s deductive component is too strong. Being weak 
and strong depends of course on the underlying con- 
sequence relation. Neither \[5\] nor \[7\] make any att- 
empt to systematically derive the consequence r la- 
tion that holds for reasoning with ambiguities on the 
basis of an empirical discussion of intuitively valid 
arguments. 
The present paper starts out with such a discussion 
in Section 2. Section 3 gives a brief introduction to 
the theory of UDRSs. It gives a sketch of the princip- 
les to construct UDRSs and shows how scope ambi- 
guities of quantifiers and negation are represented in 
an underspecified way. As the rules of inference pre- 
sented in \[7\] turn out to be sound also with respect 
to the consequence r lation defined in Section 2 the- 
se rules (for the fragment without disjunction) will 
be discussed only briefly in Section 4. The change 
in the deduction system that is imposed by the new 
consequence r lation comes with the rules of proof. 
Section 5 shows that it is no longer possible to use 
rules like Conditionalisation or Reductio ad Absur- 
dum when we deal with real ambiguities in the goal. 
An alternative set of rules is presented in Section 6. 
2 Consequence Relations 
In this section we will discuss some sample argu- 
ments containing ambiguous expressions in the data 
as well as in the goal. We consider three kinds of am- 
biguities: lexical ambiguities, quantifier scope ambi- 
guities, and ambiguities with respect o distributi- 
ve/collective readings of plural noun phrases. The 
discussion of the arguments will show that the mea- 
ning of ambiguous entences not only depends on 
the set of its disambiguations. Their meanings al- 
so depend on the context, especially on other oc- 
currences of ambiguities. Each disambiguation of an 
ambiguous entence may be correlated to disambi- 
guations of other ambiguous entences such that the 
choice of the first disambiguation also determines the 
choice of the latter ones, and vice versa. Thus the re- 
presentation of ambiguities requires ome means to 
implement these correlations. 
To see that this is indeed the case let us start discus- 
sing some consequence r lations that come to mind 
when dealing with ambiguous reasoning. The first 
one we will consider is the one that allows to derive 
a(n ambiguous) conclusion 7 from a set of (ambi- 
guous) premisses F if some disambiguation of 7 fol- 
lows from all readings of F. Assuming that 5 and 5~ 
are operators mapping a set of ambiguous represen- 
tations a onto one of its disambiguations a ~ or a ~' 
we may represent this by. 
(1) v~3~'(r ~p ¢ ' ) .  
Obviously (1) is the relation we get if we interpret 
ambiguities as being equivalent to the disjunctions of 
their readings. To interpret ambiguities in this way 
is, however, not correct. For ambiguities in the goal 
this is witnessed by (2). 
(2) ~ Everybody slept or everybody didnlt sleep. 
Intuitively (2) is contingent, but would - according 
to the relation in (1) - be classified as a tautology. 
In this case the consequence r lation in (3) gives the 
correct result and therefore seems to be preferable. 
(3) v v l(r p ¢') 
But there is another problem with (3). It does not 
fulfill Reflexivity, which (1) does. 
Ref lex iv i ty  F ~ ¢, if ¢ e F 
To do justice to both, the examples in (2) and Refle- 
xivity, we would have to interpret ambiguous ent- 
ences in the data also as conjunctions of their rea- 
dings, i.e. accept (4) as consequence r lation. 
(4) 35'3~(r ~~ 7 ~') 
But this again contradicts intuitions. (4) would sup- 
port the inferences in (5), which are intuitively not 
correct. 
a. There is a big plant in front of my house. 
(5) ~ There is a big building in front of my house. 
b. Everybody didn't sleep. ~ Everybody was awake. 
c. Three boys got £10. ~ Three boys got £10 each. 
Given the examples in (5) we are back to (1) and may 
think that ambiguities in the data are interpreted as 
disjunctions of their readings. But irrespective of the 
incompatibility with Reflexivity this picture cannot 
be correct either, because it distroys the intuitively 
valid inference in (6). 
(6) If the students get £10 then they buy books. 
The students get £10. ~ They buy books. 
This example shows that disambiguation is not an 
operation 5 that takes (a set of) isolated sentences. 
Ambiguous sentences of the same type have to be 
disambiguated simultaneously. 1 Thus the meaning of 
1We will not give a classification or definition of am- 
biguities of the same type here. Three major classes will 
consist of lexical ambiguities, ambiguities with respect 
to distributive/collective readings of plural noun phra- 
ses, and quantifier scope ambiguities. As regards the last 
type we assume on the one hand that only sentences 
with the same argument structure and the same set of 
readings can be of the same type. More precisely, if two 
sentences are of the same type with respect o quanti- 
fier scope ambiguities, then the labels of their UDRS's 
the premise of (6) is given by (7b) not by (7a), where 
al represents the first and a2 the second reading of 
the second sentence of (6). 
a. ((al b) V (a2 b)) ^  V 
(7) b. ((al -+ b) A el) V ((a2 --+ b) A a2) 
We will call sentence representations that have to 
be disambiguated simultaneously correlated ambi- 
guities. The correlation may be expressed by coinde- 
xing. Any disambiguation ~ that simultaneously di- 
sambiguates a set of representations coindexed with 
i is a disambiguation that respects i, in symbols ~. A 
disambiguation ~i that respects all indices of a given 
set I is said to respect I, written ~.  Let I be a set 
of indices, then the consequence r lation we assume 
to underly ambiguous reasoning is given in (8) 
(s) p 
The general picture we will follow in this paper is the 
following. We assume that a set of representations F 
represents the mental state of a reasoning agent R. 
r contains underspecified representations. Correlati- 
ons between elements of r indicate that they share 
possible ways of disambiguation. Suppose V is only 
implicitly contained in r .  Then R may infer it from 
F and make it explicit by adding it to its mental 
state. This process determines the consequence r la- 
tion relative to which we develop our inference pat- 
terns. That means we do not consider the case where 
R is asked some query 7 by another person B. The 
additional problem in this case consists in the array 
of possibilities to establish correlations between B's 
query and R's data, and must be adressed within a 
proper theory of dialogue. 
Consider the following examples. The data contains 
two clauses. The first one is ambiguous, but not in 
the context of the second. 
a. Every pitcher was broken. They had lost. 
Every pitcher was broken. 
b. Everybody didn't sleep. John was awake. 
(9) ~ Everybody didn't sleep. 
c. John and Mary bought a house. 
It was completely delapidated. 
John and Mary bought a house. 
If the inference is now seen as the result of R's task 
to make the first sentence xplicit (which of course 
is trivial here), then the goal will not be ambiguous, 
because it simply is another occurrence of the repre- 
sentation in the data, and, therefore, will carry the 
same correlation index. In the second case, i.e. the 
case where the goal results from R's processing some 
external input, there is no guarantee for such a cor- 
relation. R might consider the goal as ambiguous, 
and hence will not accept it as a consequence. (B 
might after all have had in mind just that reading 
of the sentence that is not part of R's knowledge.) 
must be ordered isomorphically. On the other hand two 
sentences may carry an ambiguity of the same type if 
one results from the other by applying Detachment to a 
universally quantified NP (see Section 4). 
2 
We will distinguish between these two situations by 
requiring the provability relation to respect indices. 
The rule of direct proof will then be an instance of 
Reflexivity: F t- 7i if ~'i E F. 
3 A short introduct ion to UDRSs  
The base for unscoped representations proposed in 
\[7\] is the separation of information about the struc- 
ture of a particular semantic form and of the content 
of the information bits the semantic form combines. 
In case the semantic form is given by a DRS its struc- 
ture is given by the hierarchy of subDRSs, that is de- 
termined by ==v, -% V and (>. We will represent this 
hierarchy explicitly by the subordination relation <. 
The semantic ontent of a DRS consists of the set of 
its discourse referents and its conditions. To be more 
precise, we express the structural information by a 
language with one predicate _< that relates individu- 
al constants l, called labels. The constants are names 
for DRS's. < corresponds to the subordination rela- 
tion between them, i.e. the set of labels with < is a 
upper semilattice with one-element (denoted by/7-). 
Let us consider the DRSs (11) and (12) representing 
the two readings of (10). 
(10) Everybody didn't pay attention. 
(11) I hum:n(x) \] =~ \] .~\[x pay attention\] I I 
(12) -, hum:n(x) I =*z I x pay attention \] \] 
The following representations make the distinction 
between structure and content more explicit. The 
subordination relation <_ is read from bottom to top. 
(13) 1 hum:n(x) I=¢~J 
Ix pay attention\] Ix pay attention 1 
Having achieved this separation we are able to re- 
present he structure that is common to both, (11) 
and (12), by (14). 
human(x) =~ 
Ix ~)ay att. I
(14) is already the UDRS that represents (10) with 
scope relationships left unresolved. We call the no- 
des of such graphs UDRS-components. Each UDRS- 
component consists of a labelled DRS and two func- 
tions scope and res, which map labels of UDRS- 
components o the labels of their scope and restric- 
tor, respectively. DRS-conditions are of the form 
(Q, l~1, l~2), with quantifier Q, restrictor//1 and scope 
li2, of the form lil~li2, or of the form li:-~lil. A 
UDRS is a set of UDRS-components ogether with 
a partial order ORD of its labels. 
If we make (some) labels explicit we may represent 
(14) as in (15). 
If ORD in (15) is given as {12 <_ scope(ll),13 <_ 
scope(12)} then (15) is equivalent o (11), and in 
case ORD is {11 _< scope(12), 13 <_ scope(ll)} we get 
a description of (12). If ORD is {13 _< scope(ll), 13 <_ 
scope(12)} then (15) represents (14), because it only 
contains the information common to both, (11) and 
(12). 
In any case ORD lists only the subordination re- 
lations that are neither implicitly contained in the 
partial order nor determined by complex UDRS- 
conditions. This means that (15) implicitly contains 
the information that, e.g., res(/2) < lT, and also that 
res(/2) ~ 12, res(ll) ~_ lT and scope(ll) ~ lT. 
In this paper we consider the fragment of UDRSs wi- 
thout disjunction. For reason of space we cannot con- 
sider problems that arise when indefinites occurring 
in subordinate clauses are interpreted specifically. 2 
We will, therefore assume that indefinites behave li- 
ke generalized quantifers in that their scope is clause 
bounded too, i.e. require l<_l' for all i in clause (ii.c) 
of the following definition. 
Def in i t ion 1: 
(i) (I:<UK,C K U C~>,res(1), scope(l),ORDt) is a 
UDRS-component, if (UK, CSK) is a DRS containing 
standard DRS-conditions only, and C~: is one of the 
following sets of labelled DRS-conditions, where//1 
and/(2 are standard DRSs, Qx is a generalized quan- 
tification over x, and l' is the upper bound of a (sub- 
ordinate) UDRS-clause (l':(7o,...,Tn),ORD~) (defi- 
ned below). 
(a) {}, or {sub(l')} 
(b) {l 1 ::~/2, ll :K1,/2:1(2}, or 
{ll ~ 12,11 :K1, /2 :K2,11 :sub(l') } 
(c) {(Off1,/2), l, :K1,/2:K2}, or 
{(Q, 11,12), ll.'Ki, 12K2, ll :sub(l') } } 3 
(d) ,{",l,, l, :K1} 
If C~ ¢ {} then 11 ~ /2, (Qzll,/2), or -~11 is called 
distinguished condition of K, referred to by l:7. 
res and scope are functions on the set of labels, and 
ORDt is a partial order of labels, res(l), scope(l), 
and ORDt are subject o the following restrictions: 
~These problems axe discussed extensively in \[7\] and 
the solution given there can be taken over to the rules 
presented here. 
3Whenever convenient we will simply use implicative 
conditions of the form ll =:~ /2, to represent universally 
quantified NPs (instead of their generalized quantifier 
representation (every, 11, /2) ). 
3 
(a) (a) If-~11E C~:, then 
res(l) = scope(1) = 11 and l l<l E ORDI. 4 
(f~) If (~ ,  11,12)E C~:, or Q~ll, 12E C~, then 
res(1) = 11, scope(1) = 12, and ll<l, 12<l, 
11~12 C ORDt. 
(5') Otherwise res(1) -- scope(l) = l 
(b) If k:sub(l~)E C~, then l'<k E ORDz and 
ORD~, c ORD~. 
(ii) A UDRS-clause is a pair (l:(~0, ...,'Yn), ORDt), 
where 7~ -~ (l i :Ki,res(l i) ,scope(l i),ORDl,), 0 <_ i 
_< n, are UDRS components, and ORDl contains all 
of the conditions in (a) to (c) and an arbitrary subset 
oif those in (d) and (e). 
(a) ORDI, C ORDI, for all i, 0 < i < n 
(b) IQ<_scope(li) E ORDt for all i, 1 < i < n 
(c) li<<_l e ORDI for all i, 1 < i < n. 
(d) l~<_scope(lj) E ORDt, for some i,j 1 <_ i,j <_ n 
such that ORD is a partial order. 
For each i, 1 < i < n, li is called a node. I is called 
upper bound and/0 lower bound of the UDRS-clause. 
Lower bounds neither have distinguished conditions 
nor is there an/I such that l ~<l. 
(iii) A UDRS-database is a set of UDRSs 
((/iT:F, ORDl~))i. A UDRS-goal is a UDRS. 
For the fragment of this paper UDRS-components 
that contain distinguished conditions do not contain 
anything else, i.e. they consist of labelled DRSs K 
for which UK = C~ = {) if C~: ~ {). We assume 
that semantic values of verbs are associated with 
lower bounds of UDRS-clauses and NP-meanings 
with their other components. Then the definition of 
UDRSs ensures that 5 
(i) the verb is in the scope of each of its arguments, 
(clause (ii.b)), 
(ii) the scope of proper quantifiers is clause boun- 
ded, (clause (ii.c)) 
For relative clauses the upper bound label l ~ is sub- 
ordinated to the label I of its head noun (i.e. the 
restrictor of the NP containing the relative) by l'<l 
(see (ii)). In the case of conditionals the upper bound 
label of subordinate clauses is set equal to the la- 
bel of the antecedent/consequent of the implicati- 
ve condition. The ordering of the set of labels of a 
UDRS builds an upper-semilattice with one-element 
IT. We assume that databases are constructed out of 
sequences $1, ..., S~ of sentences. Having a unique 
one-element / r associated with each UDRS repre- 
senting a sentence Si is to prevent any quantifier of 
Si to have scope over (parts of) any other sentence. 
4Wedef inel<l '  := l< l  IA l¢ l  t. 
5For the construction of underspecified representati- 
ons see \[2\], this volume. 
4 Ru les  of  In fe rence  
The four inference rules needed for the fragment wi- 
thout generalized quantifiers 6 and disjunction are 
non-empty universe (NeU), detachment (DET), am- 
biguity introduction (AI), and ambiguity eliminati- 
on (DIFF). NeU allows to add any finite collection 
of discourse referents to a DRS universe. It reflects 
the assumption that there is of necessity one thing, 
i.e. that we consider only models with non-empty 
universes. DET is a generalization of modus ponens. 
It allows to add (a variant of) the consequent of an 
implication (or the scope of a universally quantified 
condition) to the DRS in which the condition occurs 
if the antecedent (restrictor) can be mapped to this 
DRS. AI allows one to add an ambiguous represen- 
tation to the data, if the data already contains all 
of its disambiguations. And an application of DIFF 
reduces the set of readings of an underspecified re- 
presentation i  the presence of negations of some 
of its readings. The formulations of NeU, DET and 
DIFF needed for the consequence r lation (8) defi- 
ned in Section 2 of this paper are just refinements of
the formulations needed for the consequence r lation 
(1). As the latter case isextensively discussed in \[7\] 
and a precise and complete formulation of the rules 
is also given there we will restrict ourselves to the 
refinements needed to adapt these rules to the new 
consequence r lation. 
As there is nothing more to mention about NeU we 
start with DET. We first present a formulation of 
DET for DRSs. It is an extended formulation of stan- 
dard DET as it allows for applications not only at 
the top level of a DRS but at levels of any depth. 
Correctness of this extension is shown in \[4\]. 
DET  Suppose a DRS K contains a condition of the 
form K1 ::~ K2 such that K1 may be embedded 
into K by a function f, where K is the merge of 
all the DRSs to which K is subordinate. Then 
we may add K~ to K, where K~ results from 
K2 by replacing all occurrences of discourse re- 
ferents of UK2 by new ones and the discourse 
referents x declared in UK1 by f(x). 
We will generalize DET to UDRSs such that the 
structure that results from an application of DET 
to a UDRS is again a UDRS, i.e. directly represents 
some natural language sentence. We, therefore, in- 
corporate the task of what is usually done by a rule 
of thinning into the formulation of DET itself and 
also into the following definition of embedding. We 
define an embedding f of a UDRS into a UDRS to be 
a function that maps labels to labels and discourse 
referents to discourse referents while preserving all 
conditions in which they occur. We assume that f is 
one-to-one when f is restricted to the set of discour- 
6We will use implicative conditions of the form 
(=}, 11, 12), to represent universally quantified NPs (in- 
stead of their generalized quantifier representation 
(every, Zl, 12)). 
4 
se referents occurring in proper sub-universes. Only 
discourse referents occurring in the universe associa- 
ted with 1T may be identified by f. We do not assume 
that the restriction of f to the set of labels is one- 
to-one also. But f must preserve -~, :=> and V, i.e. 
respect he following restrictions. 
(i) if l:~(ll,12) occurs in K', then f(/)::=~(f(ll),f(12)), 
(ii) if l:-~ll occurs in K', then f(/):-~f(ll). 
For the formulation of the deduction rules it is con- 
venient o introduce the following abbreviation. Let 
\]C be a UDRS and l some of its labels. Then \]Ct is 
the sub-UDRS of )~ dominated by l, i.e. Kz contains 
all conditions l':~ such that l'<_l and its ordering re- 
lation is the restriction of \]C's ordering relation. 
Suppose 7 = lo:ll==>12 is the distinguished conditi- 
on of a UDRS component l:K occurring in a UDRS 
clause \]Ci of a UDRS K:. And suppose there is an 
embedding f of \]G1 into a set of conditions ?:5 of \]C 
such that l <: ?. Then the result of an application 
of DET to 7 is a clause \]~ that is obtained from 
\]Cl by (i) eliminating/C h from K:l (ii) replacing all 
occurrences of discourse referents in the remaining 
structure by new ones and the discourse referents x
declared in the universe of / i ,  by f(x); (iii) substitu- 
ting l' for l, /1, and /2 in ORDt; and (iv) replacing 
all other labels of K:l by new ones. 
But note that applications of DET are restricted to 
NPs that occur 'in the context of' implicative condi- 
tions, or monotone increasing quantifiers, as shown 
in (16). Suppose we know that John is a politician, 
then: 
(16)Few problems preoccupy every politician. 
t/Few problems preoccupy John. 
Every politician didn't sleep. 
~/John didn't sleep. 
At least one problem preoccupies every pol. 
}- At least one problem preoccupies John. 
(16) shows that DET may only be applied to a con- 
dition 7 occurring in l:K, if there is no component 
l':K I such that the distinguished condition l':7' of 
K '  is either a monotone decreasing quantifier or a 
negation, and such that for some disambiguation of
the clause in which 7 occurs we get l <_ scope(l'). 
As the negation of a monotone decreasing quantifier 
is monotone increasing and two negations neutralize 
each other the easiest way to implement the restric- 
tion is to assign polarities to UDRS components and 
restrict applications of DET to components with po- 
sitive polarity as follows. 
Suppose l:K occurs in a UDRS clause 
(/0:(7o,...,Tn),ORDzo), where l0 has positive pola- 
rity, written lo +. Then l has positive (negative) pola- 
rity if for each disambiguation the cardinality of the 
set of monotone decreasing components (i.e. mono- 
tone decreasing quantifiers or negations) that takes 
wide scope over l is even (odd). Negative polarity 
of l0 is induces the complementary distribution of 
polarity marking for l. If l is the label of a com- 
plex condition, then the polarity of l determines the 
polarity of the arguments of this condition accor- 
ding to the following patterns: l+ : l -~ ,  l - :~12- ,  
/+ : -~ ,  and l - : -~ ,  l~ has positive polarity for every 
i. The polarity of the upper bound label of a UDRS- 
clause is inherited from the polarity of the label the 
UDRS-clause is attached to. Verbs, i.e. lower bounds 
of UDRS-clauses, always have definite polarities if 
the upper bound label of the same clause has. 
Two remarks are in order before we come to the for- 
mulation of DET. First, the polarity distribution can 
be done without explicitly calculating all disambi- 
guations. The label l of a component l:K is positive 
(negative) in the clause in which occurs, if the set 
of components on the path to the upper bound la- 
bel l + of this clause contains an even (odd) number 
of polarity changing elements, and all other com- 
ponents of the clause (i.e. those occurring on other 
paths) do not change polarity. Second, the fragment 
of UDRSs we are considering in this paper does not 
contain a treatment of n-ary quantifiers. Especial- 
ly we do not deal with resumptive quantifiers, like 
<no boy, no girl> in No boy  likes no girl. If we 
do not consider the fact that this sentence may be 
read as No boy  likes any girl  the polarity mar- 
king defined above will mark the label of the verb as 
positive. But if we take this reading into account, i.e. 
allow to construe the two quantified NPs as constitu- 
ents of the resumptive quantifier, then one negation 
is cancelled and the label of the verb cannot get a 
definite value. 7 
To represent DET schematically we 
write (IT:a(F:7),ORD) to indicate that i~:K is a 
component of the UDRS K:IT with polarity 7r and 
distinguished condition 7. 
A (lT:a(~:~ ~ ~),ORD)  f : /Q , ,  ~-+ A exists 
The scheme for DET allows the arguments of the 
implicative condition to which it is applied still to be 
ambiguous. The discussion of example (6) in Section 
2 focussed on the ambiguity of its antecedent only. 
(We ignored the ambiguity of the consequent there.) 
To discuss the case of ambiguous consequents we 
consider the the following argument. 
(17)If the chairman talks, everybody doesn't sleep. 
The chairman talks. ~- Everybody doesn't sleep. 
There is a crucial difference between (17) and (6): 
The truth of the conclusion in (17) depends on the 
fact that it is derived from the conditional. It, the- 
refore, must be treated as correlated with the conse- 
quent of the conditional under any disambiguation. 
No non-correlated disambiguations are allowed. To 
ensure this we must have some means to represent 
7A general treatment of n-ary quantification within 
the theory of UDRSs has still to be worked out. In \[6\] it 
is shown how cumulative quantification may be treated 
using identification of labels. 
5 
the 'history' of the clauses that are added to a set of 
data. As (8) suggests this could be done by coinde- 
xing K:l,1 and/Cf(ln) in the representation f (17). 
In contrast o the obligatory coindexing in the ca- 
se of (17) the consequence r lation in (8) does allow 
for non-correlated interpretations in the case of (2). 
Such interpretations aturally occur if, e.g., the con- 
ditional and the minor premiss were introduced by 
very distinct parts of a text from which the databa- 
se had been constructed. In such cases the interpre- 
ter may assume that the contexts in which the two 
sentences occurred are independent of each other. 
He, therefore, leaves leeway for the possibility that 
(later on) each context could be provided with more 
information in such a way that those interpretations 
trigger different disambiguations of the two occur- 
rences. In such cases "crossed interpretations" must 
be allowed, and any application of DET must be 
refused by contraindexing - except the crossed in- 
terpretations can be shown to be equivalent. For the 
sake of readability we present he rule only for the 
propositional case. 
A oq =~ fl.i o~k i = k V (i # k A A F- c~i 4:~ c~k) 
at 
But the interpreter could also adopt the strategy to 
accept the argument also in case of non-correlated 
interpretations without checking the validity of a i¢*  
ak. In this case he will conclude that fit holds un- 
der the proviso that he might revise this inference 
if there will be additional information that forces 
him to disambiguate in a non-correlated way. If then 
ai 4:~ ak does not hold he must be able to give up 
the conclusion nit and every other argument hat 
was based on it. To accomodate this strategy we 
need more than just coindexing. We need means to 
represent the structure of whole proofs. As we ha- 
ve labels available in our language we may do this 
by adopting the techniques of labelled deductive sy- 
stems (\[3\]). For reasons of space we will not go into 
this in further detail. 
The next inference rule, AI, allows one to introduce 
ambiguities. It contrasts with the standard rule of 
disjunction introduction in that it allows for the in- 
troduction of a UDRS a that is underspecified with 
respect o the two readings al and a2 only if both, 
al and as, are contained in the data. This shows 
once more that ambiguities are not treated as dis- 
junctions. 
Ambigu i t iy  In t roduct ion  Let or1 and a2 be two 
UDRSs of A that differ only w.r.t, their ORDs. 
Then we may add a UDRS a3 to A that is like 
al but has the intersection of ORD and ORD ~ 
as ordering of its labels. The index of aa is new 
to A. 
We give an example to show how AI and DET inter- 
act in the case of non-correlated readings: Suppose 
the data A consists of a~, 0"2 and a3 ~ % We want 
to derive 3'. We apply AI to al and 62 and add au to 
A. As the index of a3 is new we must check whether 
a l  ~=> a2 can be derived from A. Because A contains 
both of them the proof succeeds. 
The last rule of inference, DIFF, eliminates ambi- 
guities on the basis of structural differences in the 
ordering relations. Suppose ~1 and c~2 are a under- 
specified representations with three scope bearing 
components 11, 12, and 13. Assume further that al  
has readings that correspond to the following orders 
of these components: (h, /2, 11), (h, h, ll), and (h, 
ll, /3), whereas a2 is ambiguous between (/2, /3, /1) 
and (/2, ll, /3). Suppose now that the data contains 
al  and the negation of a2. Then this set of data 
is equivalentto the reading given by (/3, /2, 11). To 
see that this holds the structural difference between 
the structures ORD,~ and ORD~ has to be calcu- 
lated. The structural difference between two struc- 
tures ORD~ and ORDa2 is the partial order that 
satisfies ORD~ but not ORD~2, if there is any; and 
it is falsity if there is no such order. Thus the noti- 
on of structural difference generalizes the traditional 
notion of inconsistency. Again a precise formulation 
of DIFF is given in \[7\]. 
5 Ru les  of  P roo f  
Rules of proof are deduction rules that allow us to 
reduce the complexity of the goal by accomplishing 
/~ subproof. We will consider COND(itionalization) 
and R(eductio)A(d)A(bsurdum) and show that they 
may not be applied in the case of ambiguous goals 
(i.e. goals in which no operator has widest scope). 
Suppose we want to derive everybody  d idn ' t  sno- 
re from everybody  d idn ' t  s leep and the fact 
that snoring implies sleeping. I.e. we want to car- 
ry out the proof in (18), where ORD = {13 < 
scope(ll), 13 ~ scope(12), 15 <_ scope(14)} and ORIY 
= {Is < scope(17), Is < scope(16)}. 
(IT : (14 : X snore , 15 : ~-~P-~, ORD) 
,8 oRo ,  
(18) 
Let us try to apply rules of proof to reduce the com- 
plexity of the goal. We use the extensions of COND 
and RAA given in \[7\]. There use is quite simple. 
An application of COND to the goal in (18) results 
in adding <IT:\] a I, { }) to the data and leaves 
(/tc:(lT:q q , l s :~  }, ORD" ) to be shown, whe- 
re ORIY' results from ORIY by replacing 16 and 
scope(16) with l~-. RAA is now applicable to the 
new goal in a standard way. It should be clear, ho- 
wever, that the order of application we have cho- 
6 
sen, i.e. COND before RAA, results in having given 
the universal quantifier wide scope over the negati- 
on. This means that after having applied COND we 
are not in the process of proving the original ambi- 
guous goal any more. What we are going to prove 
instead is that reading of the goal with universal 
quantifier having wide scope over the negation. Be- 
ginning with RAA instead of COND assigns the ne- 
gation wide scope over the quantifier, as we would 
add ( l~r : ( l~: \ [~  ~,  I s :~) ,ORD") to  the 
data in order to derive a contradiction, s Here ORlY' 
results from ORU by replacing 17 and scope(17) with 
l~-. 
If we tried to keep the reduction-of-the-goal strategy 
we would have to perform the disambiguation steps 
to formulas in the data that the order of applica- 
tion on COND and RAA triggers. And in addition 
we would have to check all possible orders, not only 
one. Hence we would perform exactly the same set of 
proofs that would be needed if we represented ambi- 
guous sentences by sets of formulas. Nothing would 
have been gained with respect o any traditional ap- 
proach. 
We thus conclude that applications of COND and 
RAA are only possible if either =v or -, has wide 
scope in the goal. In this case standard formulati- 
ons of COND and RAA may be applied even if the 
goal is ambiguous at some lower level of structure. 
In case the underspecification ccurs with respect 
to the relative scope of immediate daughters of 1T, 
however, we must find some other means to rela- 
te non-identical UDRSs in goal and data. What we 
need are rules for UDRSs that generalize the success 
case for atoms within ordinary deduction systems. 
6 Deduction rules for top-level 
ambiguities 
The inference in (18) can be realised very easily if 
we allow components of UDRSs that are marked ne- 
gative to be replaced by components with a smal- 
ler denotation. Likewise components of UDRSs that 
are marked positive may be replaced by components 
with a larger denotation. If the component to be re- 
placed is the restrictor of a generalized quantifier, 
then in addition to the polarity marking the sound- 
ness of such substitutions depends on the persist- 
ence property of the quantifier. In the framework 
of UDRSs persistence of quantifiers has to be defi- 
ned relative to the context in which they occur. Let 
NPi be a persistent (anti-persistent) NP. Then NPi 
is called persistent (anti-persistent) in clause S, if 
sIf we would treat ambiguous clauses as the disjunc- 
tions of their meanings, i.e. take the consequence relation 
in (1), then this disambiguation could be compensated 
for by applying RESTART (see \[7\] for details). But re- 
lative to the consequence r lation under (8) RESTART 
is not sound! 
this property is preserved under each disambiguati- 
on of S. So everybody  is anti-persistent in (19e), 
but not in (19a), because the wide scope reading for 
the negation blocks the inference in (19b). It is not 
persistent in (19c) nor in (19d). 
(19)a. Everybody didn't come. 
b. Everybody didn't come. 
Every woman didn't come. 
c. More than half the problems were solved 
by everybody. 
d. It is not true that everybody didn't come. 
e. Some problem was solved by everybody. 
The main rule of inference for UDRSs is the following 
R(eplacement)R(ule). 
RR  Whenever some UDRS K:~- occurs in a UDRS- 
database A and A I-K:~- >>/C~ holds, then K:g 
may be added to A. 
RR is based on the following substitution rule. The 
>>-rules are given below. 
SUBST Let hK be a DRS component occurring in 
some UDRS )U, A a UDRS-database. Let K:' be 
the UDRS that results from K: by substituting 
K '  for K. 
Then A KK: >>/C', if (i) or (ii) holds. 
(i) l has positive polarity and A K K >> K'.  
(ii) l has negative polarity and A K K '  >> K. 
Schematically we represent the rule (for the case of 
positive polarity) as follows. 
3- +' l+:K if A K l+:K >> l+:K I A, IC~- +--, l+:K ' 
For UDRS-components we have the following rule. 
>> DRS:  A K K>>K' if there is a function 
f: UK--r UK, such that for all 7' E CK, there is a 
"\[ E CK with A ~- f (7)>>7' .  9
Complex conditions are dealt with by the following 
set of rules. Except for persistence properties they 
are still independent of the meaning of any particu- 
lar generalized quantifier. The success of the rules 
can be achieved in two ways. Either by recursively 
applying the >>-rules. Or, by proving the implicative 
condition which will guarantee soundness of SUBST. 
>>=¢~: 
A F- (~,l l ,12)>>(~,l~,l~) if 
A K Kl~ >> K:t~, or 
A K (--+,L:tl,/Ct,) 
. 
2. 
>>Q: 
(i) A K 
1. 
2. 
(ii) A K 
1. 
(Q, ll, 12}>>(Q, l~, l~) if Q is persistent and 
A K1Q1 >>Etl ,o r  
A K (-%/Q1,/CI~ }
(Q, ll, 12)>>(Q, l~, l~) if Q is anti-pers, and 
A ~- \]Ct~ >2> \]Cll, or 
9f(7) is 7 with discourse referents x occurring in 7 
replaced by f(z). 
7 
2. A }- {-~,\]qi,~,,) 
>> -~- 
A }- {-~,/i)>>{-~,/~) if 
1. A ~- Kq >> Kt,, or 
2. A ~- (--+, ~2~;, K,,) 
The following rules involve lexical meaning of words. 
We give some examples of determiner rules to indi- 
cate how we may deal with the logic of quantifiers 
in this rule set. Rules for nouns and verbs refer to 
a further inference relation, t-n. This relation takes 
the meaning postulates into account that a parti- 
cular lexical theory associates with particular word 
meanings. 
>> Lex: 
(i) (every, 11,12>>>(more than half, 11,12> 
(ii) (every, ll, 12)>>({}, {Mary}, 12} 
(iii) (no, ll, 12)>>(every, 11,I~2:-~12) 
(iv) (some, 11, ll2:-,12)>>(not every, 11,/2) 
(v) snore>>sleep if }_z: snore>>sleep 
The last rule allows relative scopes of quantifiers to 
be inverted. 
>> 7r: 
(i) Let ~ :~/1 and 12 :V2 be two quantifiers of a UDRS 
\]C such that 11 immediately dominates /2 (/2 _<i 
scope(f1)). Let 7r be the relation between quantifiers 
that allows neigbourhood exchanges, i.e. 7~ ~ V2 iff 
\]Q, ~- \]C~,, where/C~, results from \]Q1 by exchanging 
71 and V2, i.e. by replacing 12 <i scope(f1) in /Ch's 
ORD by 11 <i scope(12). Then 
A }- /C h >> /CI, if 11:71 7r 4:72 and 11:71 ~r l':~/' for 
all l' :V ~ that may be immediately dominated by/1 :V1 
(in any disambiguation). 
(ii) Analoguously for the case of 1/7:71 having nega- 
tive polarity. 
The formulation of this rule is very general. In the 
simplest case it allows one to derive a sentence where 
an indefinite quantifier is interpreted non-specifically 
from an interpretation where it is assigned a speci- 
fic meaning. If the specific/non-specific d stinction is 
due to a universally quantified NP then the rule uses 
the fact that (a,l, s}~(every, l, s) holds. As other 
scope bearing elements may end up between the in- 
definite and the universal in some disambiguation 
the rule may only be applied, if these elements be- 
have exactly the same way as the universal does, i.e. 
allow the indefinite to be read non-specifically. In ca- 
se such an element is another universally quantified 
NP we thus may apply the rule, but we cannot apply 
it is a negation. 
7 Conclusion and Further 
Perspect ives  
The paper has shown that it is possible to reason 
with ambiguities in a natural, direct and intuitively 
correct way. 
The fact that humans are able to reason with am- 
biguities led to a natural distinction between deduc- 
tion systems that apply rules of proof to reduce the 
complexity of a goal and systems of logic that are 
tailored directly for natural language interpretati- 
on and reasoning. Human interpreters seem to use 
both systems when they perform reasoning tasks. 
We know that we cannot surmount undecidability 
(in a non-adhoc way) if we take quantifiers and/or 
connectives as logical devices in the traditional sen- 
se. But as the deduction rules for top-level ambi- 
guities given here present an extension of Aristoteli- 
an syllogism metamathematical results about their 
complexity will be of great interest as well as the 
proof of a completeness theorem. Apart from this re- 
search the use of the rule system within the task of 
natural language understanding is under investiga- 
tion. It seems that the Replacement Rules are par- 
ticularly suited to do special reasoning tasks nec- 
cessary to disambiguate l xical ambiguities, because 
most of the deductive processes needed there are in- 
dependent of any quantificational structure of the 
sentences containing the ambiguous item. 
Acknowledgements 
The ideas of this paper where presented, first at an 
international workshop of the SFB 340 "Sprachtheo- 
~etisehe Grundlagen der Computerlinguistik" in Oc- 
tober 1993, and second, at a workshop on 'Deduction 
and Language' that took place at SOAS, London, in 
spring 1994. I am particularly grateful for comments 
made by participants of these workshops. 
Literatur 
\[1\] Hiyan Alshawi and Richard Crouch. Monotonic se- 
mantic interpretation. In Proceedings ofACL, pages 
32-39, Newark, Delaware, 1992. 
\[2\] Anette Frank and Uwe Reyle. Principle based seman- 
tics for hpsg. In Proceedings of EACL 95, Dublin, 
1995. 
\[3\] Dov Gabbay. Labelled deductive systems. Technical 
report, Max Planck Institut fiir Informatik, 1994. 
\[4\] Hans Kamp and Uwe Reyle. Technical report. 
\[5\] Massimo Poesio. Scope ambiguity and inference. 
Technical report, University of Rochester, N.Y., 
1991. 
\[6\] Uwe Reyle. Monotonic disambiguation and plural 
pronoun resolution. In Kees van Deemter and Stan- 
ley Peters, editors, CSLI Lecture Notes: Semantic 
Ambiguity and Underspecification. 
\[7\] Uwe Reyle. Dealing with ambiguities by underspecifi- 
cation: Construction, representation, and deduction. 
Journal of Semantics, 10(2), 1993. 
\[8\] Kees van Deemter. On the Composisiton ofMeaning. 
PhD thesis, University of Amsterdam, 1991. 
8 
