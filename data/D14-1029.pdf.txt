Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 227–232,
October 25-29, 2014, Doha, Qatar.
c©2014 Association for Computational Linguistics
Reordering Model for Forest-to-String Machine Translation
Martin
?
Cmejrek
IBM Watson Group
Prague, Czech Republic
martin.cmejrek@us.ibm.com
Abstract
In this paper, we present a novel exten-
sion of a forest-to-string machine transla-
tion system with a reordering model. We
predict reordering probabilities for every
pair of source words with a model using
features observed from the input parse for-
est. Our approach naturally deals with the
ambiguity present in the input parse forest,
but, at the same time, takes into account
only the parts of the input forest used
by the current translation hypothesis. The
method provides improvement from 0.6 up
to 1.0 point measured by (Ter ? Bleu)/2
metric.
1 Introduction
Various commonly adopted statistical machine
translation (SMT) approaches differ in the amount
of linguistic knowledge present in the rules they
employ.
Phrase-based (Koehn et al., 2003) models are
strong in lexical coverage in local contexts, and
use external models to score reordering op-
tions (Tillman, 2004; Koehn et al., 2005).
Hierarchical models (Chiang, 2005) use lexi-
calized synchronous context-free grammar rules
to produce local reorderings. The grammatical-
ity of their output can be improved by addi-
tional reordering models scoring permutations of
the source words. Reordering model can be either
used for source pre-ordering (Tromble and Eisner,
), integrated into decoding via translation rules ex-
tension (Hayashi et al., 2010), additional lexical
features (He et al., ), or using external sources of
information, such as source syntactic features ob-
served from a parse tree (Huang et al., 2013).
Tree-to-string (T2S) models (Liu et al., 2006;
Galley et al., 2006) use rules with syntactic struc-
tures, aiming at even more grammatically appro-
priate reorderings.
Forest-to-string (F2S) systems (Mi et al., 2008;
Mi and Huang, 2008) use source syntactic forest
as the input to overcome parsing errors, and to al-
leviate sparseness of translation rules.
The parse forest may often represent several
meanings for an ambiguous input that may need
to be transtated differently using different word or-
derings. The following example of an ambiguous
Chinese sentence with ambiguous part-of-speech
labeling motivates our interest in the reordering
model for the F2S translation.
S. t?aol`un (0) SSS. h`ui (1) SSS z?enmey`ang (2)
discussion/NN SS meeting/NN how/VV
discuss/VV SSSSSwill/VV
There are several possible meanings based on
the different POS tagging sequences. We present
translations for two of them, together with the in-
dices to their original source words:
(a) NN NN VV:
How
2
was
2
the
0
discussion
0
meeting
1
?
(b) VV VV VV:
Discuss
0
what
2
will
1
happen
1
.
A T2S system starts from a single parse corre-
sponding to one of the possible POS sequences,
the same tree can be used to predict word reorder-
ings. On the other hand, a F2S system deals with
the ambiguity through exploring translation hy-
potheses for all competing parses representing the
different meanings. As our example suggests, dif-
ferent meanings also tend to reorder differently
227
id rule
r
1
NP(t?aol`un/NN) ? discussion
r
2
NP(h`ui/NN) ? meeting
r
3
NP(x
1
:NP x
2
:NP) ? the x
1
x
2
r
4
IP(x
1
:NP z?enmey`ang/VV) ? how was x
1
r
5
IP(h`ui/VV z?enmey`ang/VV) ? what will happen
r
6
IP(t?aol`un/VV x
1
:IP) ? discuss x
1
Table 1: Tree-to-string translation rules (without
internal structures).
during translation. First, the reordering model suit-
able for F2S translation should allow for trans-
lation of all meanings present in the input. Sec-
ond, as the process of deriving a partial transla-
tion hypothesis rules out some of the meanings,
the reordering model should restrict itself to fea-
tures originating in the relevant parts of the input
forest. Our work presents a novel technique satis-
fying both these requirements, while leaving the
disambuiguation decision up to the model using
global features.
The paper is organized as follows: We briefly
overview the F2S and Hiero translation models in
Section 2, present the proposed forest reordering
model in Section 3, describe our experiment and
present results in Section 4.
2 Translation Models
Forest-to-string translation (Mi et al., 2008) is an
extension of the tree-to-string model (Liu et al.,
2006; Huang et al., 2006) allowing it to use a
packed parse forest as the input instead of a sin-
gle parse tree.
Figure 1 shows a tree-to-string translation
rule (Huang et al., 2006), which is a tuple
?lhs(r), rhs(r), ?(r)?, where lhs(r) is the source-
side tree fragment, whose internal nodes are la-
beled by nonterminal symbols (like NP), and
whose frontier nodes are labeled by source-
language words (like “z?enmey`ang”) or variables
from a finite set X = {x
1
, x
2
, . . .}; rhs(r) is
the target-side string expressed in target-language
words (like “how was”) and variables; and ?(r) is
a mapping from X to nonterminals. Each variable
x
i
? X occurs exactly once in lhs(r) and exactly
once in rhs(r).
The Table 1 lists all rules necessary to derive
translations (a) and (b), with their internal struc-
ture removed for simplicity.
Typically, an F2S system translates in two steps
(shown in Figure 2): parsing and decoding. In the
IP
x
1
:NP VP
VV
z?enmey`ang
? how was x
1
Figure 1: Tree-to-string rule r
4
.
parsing step, the source language input is con-
verted into a parse forest (A). In the decoding step,
we first convert the parse forest into a translation
forest F
t
in (B) by using the fast pattern-matching
technique (Zhang et al., 2009). Then the decoder
uses dynamic programing with beam search and
cube pruning to find the approximation to the best
scoring derivation in the translation forest, and
outputs the target string.
3 Forest Reordering Model
In this section, we describe the process of ap-
plying the reordering model scores. We score
pairwise translation reorderings for every pair of
source words similarly as described by Huang et
al. (2013). In their approach, an external model of
ordering distributions of sibling constituent pairs
predicts the reordering of word pairs. Our ap-
proach deals with parse forests rather than with
single trees, thus we have to model the scores dif-
ferently. We model ordering distributions for ev-
ery pair of close relatives–nodes in the parse forest
that may occur together as frontier nodes of a sin-
gle matching rule. We further condition the distri-
bution on a third node–a common ancestor of the
node pair that corresponds to the root node of the
matching rule. This way our external model takes
into acount the syntactic context of the hypothe-
sis. For example, nodes NP
0, 1
and NP
1, 2
are close
relatives, NP
0, 2
and IP
0, 3
are their common ances-
tors; NP
0, 1
and VV
2, 3
are close relatives, IP
0, 3
is
their common ancestor; NP
0, 1
and VV
1, 2
are not
close relatives.
More formally, let us have an input sentence
(w
0
, ...,w
n
) and its translation hypothesis h. For
every i and j such that 0 ? i < j ? n we as-
sume that the translations of w
i
and w
j
are in the
hypothesis h either in the same or inverted order-
ing o
i j
? {Inorder,Reorder}, with a probability
P
order
(o
i j
|h). Conditioning on h signifies that the
probabilistic model takes the current hypothesis as
a parameter. The reordering score of the entire hy-
228
(A)
IP
0, 3
NP
0, 2
NP
0, 1
t?aol`un
VV
0, 1
NP
1, 2
h`ui
VV
1, 2
IP
1, 3
z?enmey`ang
VV
2, 3
R
t
?
(B)
e
4
e
6
e
3
e
1
t?aol`un
e
2
h`ui
e
5
z?enmey`ang
Figure 2: Parse and translation hypergraphs. (A) The parse forest of the example sentence. Solid hy-
peredges denote the best parse, dashed hyperedges denote the second best parse. Unary edges were col-
lapsed. (B) The corresponding translation forest F
t
after applying the tree-to-string translation rule set R
t
.
Each translation hyperedge (e.g. e
4
) has the same index as the corresponding rule (r
4
). The forest-to-
string system can produce the example translation (a) (solid derivation: r
1
, r
2
, r
3
, and r
4
) and (b) (dashed
derivation: r
5
, r
6
).
pothesis f
order
(h) is then computed as
f
order
=
?
0?i< j?n
? log P
order
(o
i j
= o
h
i j
| h), (1)
where o
h
i j
denotes the actual ordering used in h.
The score f
order
can be computed recursively by
dynamic programing during the decoding. As an
example, we show in Table 2 reordering probabil-
ities retrieved in decoding of our sample sentence.
(a) If h is a hypothesis formed by a single trans-
lation rule r with no frontier nonterminals, we
evaluate all word pairs w
i
and w
j
covered by h
such that i < j. For each such pair we find the
frontier nodes x and y matched by r such that
x spans exactly w
i
and y spans exactly w
j
. (In
this case, x and y match preterminal nodes, each
spanning one position). We also find the node z
matching the root of r. Then we directly use the
Equation 1 to compute the score using an exter-
nal model P
order
(o
i j
|xyz) to estimate the probabil-
ity of reordering the relative nodes. For example,
when applying rule r
5
, we use the ordering dis-
tribution P
order
(o
1,2
|VV
1, 2
,VV
2, 3
, IP
1, 3
) to score
reorderings of h`ui and z?enmey`ang.
(b) If h is a hypothesis formed by a T2S rule
with one or more frontier nonterminals, we eval-
uate all word pairs as follows: If both w
i
and w
j
are spanned by the same frontier nonterminal (e.g.,
t?aol`un and h`ui when applying the rule r
4
), the
score f
order
had been already computed for the un-
derlying subhypothesis, and therefore was already
included in the total score. Otherwise, we compute
the word pair ordering cost. We find the close rel-
atives x and y representing each w
i
and w
j
. If w
i
is matched by a terminal in r, we select x as the
node matching r and spanning exactly w
i
. If w
i
is
spanned by a frontier nonterminal in r (meaning
that it was translated in a subhypothesis), we select
x as the node matching that nonterminal. We pro-
ceed identically for w
j
and y. For example, when
applying the rule r
4
, the word z?enmey`ang will be
represented by the node VV
2, 3
, while t?aol`un and
h`ui will be represented by the node NP
0, 2
.
Note that the ordering o
h
i j
cannot be determined
in some cases, sometimes a source word does not
produce any translation, or the translation of one
word is entirely surrounded by the translations of
another word. A weight corresponding to the bi-
nary discount feature f
o
unknown
is added to the score
for each such case.
The external model P
order
(o
i j
|xyz) is imple-
mented as a maximum entropy model. Features
of the model are observed from paths connecting
node z with nodes x and y as follows: First, we
pick paths z ? x and z ? y. Let z
?
be the last node
shared by both paths (the closest common ances-
tor of x and y). Then we distinguish three types of
path: (1) The common prefix z ? z
?
(it may have
zero length), the left path z ? x, and the right path
z ? y. We observe the following features on each
path: the syntactic labels of the nodes, the produc-
tion rules, the spans of nodes, a list of stop words
immediately preceding and following the span of
the node. We merge the features observed from
different paths z ? x and z ? y. This approach
229
rule word pair order probability
a) how
2
was
2
the discussion
0
meeting
1
r
3
(t?aol`un,h`ui) Inorder P
order
(
o
0,1
|NP
0, 1
,NP
1, 2
,NP
0, 2
)
r
4
(t?aol`un,z?enmey`ang) Reorder P
order
(
o
0,2
|NP
0, 2
,VV
2, 3
, IP
0, 3
)
(h`ui,z?enmey`ang) Reorder P
order
(
o
1,2
|NP
0, 2
,VV
2, 3
, IP
0, 3
)
b) discuss
0
what
2
will
1
happen
1
r
5
(h`ui, z?enmey`ang) Reorder P
order
(
o
1,2
|VV
1, 2
,VV
2, 3
, IP
1, 3
)
r
6
(t?aol`un, h`ui) Inorder P
order
(
o
0,1
|VV
0, 1
, IP
1, 3
, IP
0, 3
)
(t?aol`un, z?enmey`ang Inorder P
order
(
o
0,2
|VV
0, 1
, IP
1, 3
, IP
0, 3
)
Table 2: Example of reordering scores computed for derivations (a) and (b).
ignores the internal structure of each rule
1
, relying
on frontier node annotation. On the other hand it
is still feasible to precompute the reordering prob-
abilities for all combinations of xyz.
4 Experiment
In this section we describe the setup of the exper-
iment, and present results. Finally, we propose fu-
ture directions of research.
4.1 Setup
Our baseline is a strong F2S system (
?
Cmejrek
et al., 2013) built on large data with the full set
of model features including rule translation prob-
abilities, general lexical and provenance transla-
tion probabilities, language model, and a vari-
ety of sparse features. We build it as follows.
The training corpus consists of 16 million sen-
tence pairs available within the DARPA BOLT
Chinese-English task. The corpus includes a mix
of newswire, broadcast news, webblog data com-
ing from various sources such as LDC, HK Law,
HK Hansard and UN data. The Chinese text is seg-
mented with a segmenter trained on CTB data us-
ing conditional random fields (CRF).
Bilingual word alignments are trained and com-
bined from two sources: GIZA (Och, 2003) and
maximum entropy word aligner (Ittycheriah and
Roukos, 2005).
Language models are trained on the English
side of the parallel corpus, and on monolingual
corpora, such as Gigaword (LDC2011T07) and
Google News, altogether comprising around 10
billion words.
We parse the Chinese part of the training data
with a modified version of the Berkeley parser
1
Only to some extent, the rule still has to match the input
forest, but the reordering model decides based on the sum of
paths observed between the root and frontier nodes.
(Petrov and Klein, 2007), then prune the ob-
tained parse forests for each training sentence with
the marginal probability-based inside-outside al-
gorithm to contain only 3n CFG nodes, where n is
the sentence length.
We extract tree-to-string translation rules from
forest-string sentence pairs using the forest-based
GHKM algorithm (Mi and Huang, 2008; Galley et
al., 2004).
In the decoding step, we use larger input
parse forests than in training, we prune them to
contain 10n nodes. Then we use fast pattern-
matching (Zhang et al., 2009) to convert the parse
forest into the translation forest.
The proposed reordering model is trained on
100, 000 automatically aligned forest-string sen-
tence pairs from the parallel training data. These
sentences provide 110M reordering events that are
used by megam (Daum´e III, 2004) to train the max-
imum entropy model.
The current implementation of the reordering
model requires offline preprocessing of the input
hypergraphs to precompute reordering probabili-
ties for applicable triples of nodes (x, y, z). Since
the number of levels in the syntactic trees in T2S
rules is limited to 4, we only need to consider such
triples, where z is up to 4 levels above x or y.
We tune on 1275 sentences, each with 4 refer-
ences, from the LDC2010E30 corpus, initially re-
leased under the DARPA GALE program.
We combine two evaluation metrics for tun-
ing and testing: Bleu (Papineni et al., 2002) and
Ter (Snover et al., 2006). Both the baseline and
the reordering experiments are optimized with
MIRA (Crammer et al., 2006) to maximize (Ter-
Bleu)/2.
We test on three different test sets: GALE
Web test set from LDC2010E30 corpus (1239
sentences, 4 references), NIST MT08 Newswire
230
System GALE Web MT08 Newswire MT08 Web
Ter?Bleu
2
Bleu Ter
Ter?Bleu
2
Bleu Ter
Ter?Bleu
2
Bleu Ter
F2S 8.8 36.1 53.7 5.6 40.6 51.8 12.0 31.3 55.3
+Reordering 8.2 36.4 52.7 4.8 41.7 50.5 11.0 31.7 53.7
? -0.6 +0.3 -1.0 -0.8 +1.1 -1.3 -1.0 +0.4 -1.6
Table 3: Results.
portion (691 sentences, 4 references), and NIST
MT08 Web portion (666 sentences, 4 references).
4.2 Results
Table 3 shows all results of the baseline and the
system extended with the forest reordering model.
The (Ter ? Bleu)/2 score of the baseline system
is 12.0 on MT08 Newswire, showing that it is a
strong baseline. The system with the proposed re-
ordering model significantly improves the base-
line by 0.6, 0.8, and 1.0 (Ter ? Bleu)/2 points on
GALE Web, MT08 Newswire, and MT08 Web.
The current approach relies on frontier node
annotations, ignoring to some extent the internal
structure of the T2S rules. As part of future re-
search, we would like to compare this approach
with the one that takes into accout the internal
structure as well.
5 Conclusion
We have presented a novel reordering model for
the forest-to-string MT system. The model deals
with the ambiguity of the input forests, but also
predicts specifically to the current parse followed
by the translation hypothesis. The reordering prob-
abilities can be precomputed by an offline pro-
cess, allowing for efficient scoring in runtime. The
method provides improvement from 0.6 up to 1.0
point measured by (Ter ? Bleu)/2 metrics.
Acknowledgments
We thank Ji?r´? Havelka for proofreading and help-
ful suggestions. We would like to acknowledge
the support of DARPA under Grant HR0011-12-
C-0015 for funding part of this work. The views,
opinions, and/or findings contained in this article
are those of the author and should not be inter-
preted as representing the official views or poli-
cies, either expressed or implied, of the DARPA.
References
David Chiang. 2005. A hierarchical phrase-based
model for statistical machine translation. In Pro-
ceedings of the ACL.
Koby Crammer, Ofer Dekel, Joseph Keshet, Shai
Shalev-Shwartz, and Yoram Singer. 2006. Online
passive-aggressive algorithms. Journal of Machine
Learning Research, 7.
Hal Daum´e III. 2004. Notes on CG and LM-BFGS op-
timization of logistic regression. Paper available at
http://pub.hal3.name#daume04cg-bfgs, im-
plementation available at http://hal3.name/
megam/.
Michel Galley, Mark Hopkins, Kevin Knight, and
Daniel Marcu. 2004. What’s in a translation rule?
In Proceedings of the HLT-NAACL.
Michel Galley, Jonathan Graehl, Kevin Knight, Daniel
Marcu, Steve DeNeefe, Wei Wang, and Ignacio
Thayer. 2006. Scalable inference and training of
context-rich syntactic translation models. In Pro-
ceedings of the COLING-ACL.
Katsuhiko Hayashi, Hajime Tsukada, Katsuhito Sudoh,
Kevin Duh, and Seiichi Yamamoto. 2010. Hi-
erarchical Phrase-based Machine Translation with
Word-based Reordering Model. In Proceedings of
the COLING.
Zhongjun He, Yao Meng, and Hao Yu. Maximum
entropy based phrase reordering for hierarchical
phrase-based translation. In Proceedings of the
EMNLP.
Liang Huang, Kevin Knight, and Aravind Joshi. 2006.
Statistical syntax-directed translation with extended
domain of locality. In Proceedings of the AMTA.
Zhongqiang Huang, Jacob Devlin, and Rabih Zbib.
2013. Factored soft source syntactic constraints for
hierarchical machine translation. In Proceeedings of
the EMNLP.
Abraham Ittycheriah and Salim Roukos. 2005. A max-
imum entropy word aligner for arabic-english ma-
chine translation. In Proceedings of the HLT and
EMNLP.
Philipp Koehn, Franz Joseph Och, and Daniel Marcu.
2003. Statistical phrase-based translation. In Pro-
ceedings of NAACL.
231
Philipp Koehn, Amittai Axelrod, Alexandra Birch
Mayne, Chris Callison-Burch, Miles Osborne, and
David Talbot. 2005. Edinburgh system description
for the 2005 iwslt speech translation evaluation. In
Proceedings of the IWSLT.
Yang Liu, Qun Liu, and Shouxun Lin. 2006. Tree-
to-string alignment template for statistical machine
translation. In Proceedings of COLING-ACL.
Haitao Mi and Liang Huang. 2008. Forest-based trans-
lation rule extraction. In Proceedings of EMNLP.
Haitao Mi, Liang Huang, and Qun Liu. 2008. Forest-
based translation. In Proceedings of ACL: HLT.
Franz Joseph Och. 2003. Minimum error rate training
in statistical machine translation. In Proceedings of
ACL.
Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
uation of machine translation. In Proceedings of
ACL.
Slav Petrov and Dan Klein. 2007. Improved inference
for unlexicalized parsing. In Proceedings of HLT-
NAACL.
Matthew Snover, Bonnie Dorr, Richard Schwartz, Lin-
nea Micciulla, and John Makhoul. 2006. A study of
translation edit rate with targeted human annotation.
In Proceedings of the AMTA.
Christoph Tillman. 2004. A unigram orientation
model for statistical machine translation. Proceed-
ings of the HLT-NAACL.
Roy Tromble and Jason Eisner. Learning linear order-
ing problems for better translation. In Proceedings
of the EMNLP.
Martin
?
Cmejrek, Haitao Mi, and Bowen Zhou. 2013.
Flexible and efficient hypergraph interactions for
joint hierarchical and forest-to-string decoding. In
Proceedings of the EMNLP.
Hui Zhang, Min Zhang, Haizhou Li, and Chew Lim
Tan. 2009. Fast translation rule matching for
syntax-based statistical machine translation. In Pro-
ceedings of EMNLP, pages 1037–1045, Singapore,
August.
232
