Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 1013–1022,
Lisbon, Portugal, 17-21 September 2015.
c
©2015 Association for Computational Linguistics.
Incorporating Trustiness and Collective Synonym/Contrastive Evidence
into Taxonomy Construction
Luu Anh Tuan
#1
, Jung-jae Kim
#2
, Ng See Kiong
?3
#
School of Computer Engineering, Nanyang Technological University, Singapore
1
anhtuan001@e.ntu.edu.sg,
2
jungjae.kim@ntu.edu.sg
?
Institute for Infocomm Research, Agency for Science, Technology and Research, Singapore
3
skng@i2r.a-star.edu.sg
Abstract
Taxonomy plays an important role in many
applications by organizing domain knowl-
edge into a hierarchy of is-a relations be-
tween terms. Previous works on the taxo-
nomic relation identification from text cor-
pora lack in two aspects: 1) They do not
consider the trustiness of individual source
texts, which is important to filter out in-
correct relations from unreliable sources.
2) They also do not consider collective
evidence from synonyms and contrastive
terms, where synonyms may provide ad-
ditional supports to taxonomic relations,
while contrastive terms may contradict
them. In this paper, we present a method
of taxonomic relation identification that
incorporates the trustiness of source texts
measured with such techniques as PageR-
ank and knowledge-based trust, and the
collective evidence of synonyms and con-
trastive terms identified by linguistic pat-
tern matching and machine learning. The
experimental results show that the pro-
posed features can consistently improve
performance up to 4%-10% of F-measure.
1 Introduction
Taxonomies which serve as backbone of struc-
tured knowledge are useful for many applica-
tions such as question answering (Harabagiu et
al., 2003) and document clustering (Fodeh et al.,
2011). Even though there are many hand-crafted,
well-structured taxonomies publicly available, in-
cluding WordNet (Miller, 1995), OpenCyc (Ma-
tuszek et al., 2006), and Freebase (Bollacker et
al., 2008), they are incomplete in specific domains,
and it is time-consuming to manually extend them
or create new ones. There is thus a need for auto-
matically extracting taxonomic relations from text
corpora to construct/extend taxonomies.
Previous works on the task of taxonomy con-
struction capture information about potential tax-
onomic relations between concepts, rank the can-
didate relations based on the captured information,
and integrate the highly ranked relations into a tax-
onomic structure. They utilize such information
as hypernym patterns (e.g. A is a B, A such as
B) (Kozareva et al., 2008), syntactic dependency
(Drumond and Girardi, 2010), definition sentences
(Navigli et al., 2011), co-occurrence (Zhu et al.,
2013), syntactic contextual similarity (Tuan et al.,
2014), and sibling relations (Bansal et al., 2014).
They, however, lack in the three following as-
pects: 1) Trustiness: Not all sources are trust-
worthy (e.g. gossip, forum posts written by
non-experts) (Dong et al., 2015). The trustiness
of source texts is important in taxonomic rela-
tion identification because evidence from unre-
liable sources can be incorrect. For example,
the invalid taxonomic relation between “American
chameleon” and “chameleon” is mistakenly more
popular in the Web than the valid taxonomic rela-
tion between “American chameleon” and “lizard”,
and statistical methods without considering the
trustiness may incorrectly extract the invalid rela-
tion instead of the latter. However, to the best of
our knowledge, no previous work considered this
aspect.
2) Synonyms: A concept may be expressed in
multiple ways, for example with synonyms. The
previous works mostly assumed that a term repre-
sents an independent concept, and did not combine
information about a concept, which is expressed
with multiple synonyms. The lack of evidence
from synonyms may hamper the ranking of can-
didate taxonomic relations. Navigli and Velardi
(2004) combined synonyms into a concept, but
only for those from WordNet, called synsets.
3) Contrastive terms: We observe that if two
terms are often contrasted (e.g. A but not B, A
is different from B) (Kim et al., 2006), they may
1013
not have a taxonomic relation.
In this paper, we present a method based on the
state-of-the-art method (Tuan et al., 2014), which
incorporates the trustiness of source texts and
the collective evidence from synonyms/contrastive
terms. Tuan et al. (2014) rank candidate tax-
onomic relations based on such evidence as hy-
pernym patterns, WordNet, and syntactic contex-
tual similarity, where the pattern matches and the
syntactic contexts are found from the Web by us-
ing a Web search engine. First, we calculate the
trustiness score of each data source with the four
following weights: importance (if it is linked by
many pages), popularity (if it is visited by many
users), authority (if it is from a creditable Web site)
and accuracy (if it has many facts). We integrate
this score to the work of (Tuan et al., 2014) so that
evidence for taxonomic relations from unreliable
sources is discarded.
Second, we identify synonyms of two terms (t
1
,
t
2
), whose taxonomic relation is being scrutinized,
by matching such queries as “t
1
also known as”
against the Web to find t
1
’s synonyms next to the
query matches (e.g. t in “t
1
also known as t”). We
then collect the evidence for all taxonomic rela-
tions between t
?
1
and t
?
2
, where t
?
i
is either t
i
or its
synonym (i ? {1, 2}), and combine them to calcu-
late the evidence score of the candidate taxonomic
relation between t
1
and t
2
. Similarly, for each pair
of two terms (t
1
, t
2
), we collect their contrastive
evidence by matching such queries as “t
1
is not a
type of t
2
” against the Web, and use them to pro-
portionally decrease the evidence score for taxo-
nomic relation between contrasting terms.
2 Related Work
The previous methods for identifying taxonomic
relations from text can be generally classified
into two categories: linguistic and statistical ap-
proaches. The former approach mostly exploits
lexical-syntactic patterns (e.g. A is a B, A such
as B) (Hearst, 1992). Those patterns can be man-
ually created (Kozareva et al., 2008; Wentao et al.,
2012) or automatically identified (Navigli et al.,
2011; Bansal et al., 2014). The pattern matching
methods show high precision when the patterns
are carefully defined, but low coverage due to the
lack of contextual analysis across sentences.
The latter approach, on the other hand, includes
asymmetrical term co-occurrence (Fotzo and Gal-
linari, 2004), clustering (Wong et al., 2007), syn-
tactic contextual similarity (Tuan et al., 2014), and
word embedding (Fu et al., 2014). The main idea
behind these techniques is that the terms that are
asymmetrically similar to each other with regard
to, for example, co-occurrences, syntactic con-
texts, and latent vector representation may have
taxonomic relationships. Such methods, however,
usually suffer from low accuracy, though show-
ing relatively high coverage. To get the balance
between the two approaches, Yang and Callan
(2009), Zhu et al. (2013) and Tuan et al. (2014)
combine both statistical and linguistic features in
the process of finding taxonomic relations.
Most of these previous methods do not consider
if the source text of evidence (e.g. co-occurrences,
pattern matches) is trustworthy or not and do not
combine evidence from synonyms and contrastive
terms as discussed earlier. Related to synonyms, a
few previous works utilize siblings for taxonomy
construction. Yang and Callan (2009) use siblings
as one of the features in the metric-based frame-
work which incrementally clusters terms to form
taxonomies. Wentao et al. (2012) also utilize such
sibling feature that, for example of the linguistic
pattern “A such as B
1
, B
2
, · · · and B
n
”, if the
concept at the k-th position (e.g. B
k
) from pat-
tern keywords (e.g. such as) is a valid sub-concept
(e.g. of A), then most likely its siblings from po-
sition 1 to position k-1 (e.g. B
1
, · · · , B
k?1
) are
also valid sub-concepts. Bansal et al. (2014) in-
clude the sibling factors to a structured probabilis-
tic model over the full space of taxonomy trees,
thus helping to add more evidence to taxonomic
relations. Navigli and Velardi (2004) utilize the
synonym feature (i.e. WordNet synsets) for the
process of semantic disambiguation and concept
clustering as mentioned above, but not for the pro-
cess of inducing novel taxonomic relations.
3 Methodology
We briefly introduce (Tuan et al., 2014) in Section
3.1. We then explain how to incorporate trustiness
(Section 3.2) and collective evidence from syn-
onyms (Section 3.3) and from contrastive terms
(Section 3.4) into the work of (Tuan et al., 2014).
3.1 Overview of baseline (Tuan et al., 2014)
Tuan et al. (2014) follow three steps to construct a
taxonomy: term extraction/filtering, taxonomic re-
lation identification and taxonomy induction. Be-
cause the focus of this paper is on the second step,
1014
taxonomic relation identification, we use the same
methods for the first and third steps as in (Tuan et
al., 2014) and will not discuss them here.
Given each ordered pair of two terms t
1
and t
2
from the term extraction/filtering, the taxonomic
relation identification of (Tuan et al., 2014) calcu-
lates the evidence score that t
1
is a hypernym of t
2
(denoted as t
1
 t
2
) based on the following three
measures:
String inclusion with WordNet (SIWN): This
measure is to check if t
1
is a substring of t
2
, con-
sidering synonymy between words using WordNet
synsets. Score
SIWN
(t
1
, t
2
) is set to 1 if there is
such evidence; otherwise, it is set to 0.
Lexical-syntactic pattern (LSP): This measure
is to find how much more evidence for t
1
 t
2
is found in the Web than for t
2
 t
1
. Specif-
ically, a list of manually constructed hypernym
patterns (e.g. “t
2
is a t
1
”) is queried with a Web
search engine to estimate the number of evidence
for t
1
 t
2
from the Web. The LSP measure is
calculated as follows, where C
Web
(t
1
, t
2
) denotes
the collection of search results:
Score
LSP
(t
1
, t
2
) =
log(|C
Web
(t
1
,t
2
)|)
1+log(|C
Web
(t
2
,t
1
)|)
Syntactic contextual subsumption (SCS): The
idea of this measure is to derive the hypernymy
evidence for two terms t
1
and t
2
from their syntac-
tic contexts, particularly from the triples of (sub-
ject,verb,object). They observe that if the context
set of t
1
mostly contains that of t
2
but not vice
versa, then t
1
is likely to be a hypernym of t
2
. To
implement this idea, they first find the most com-
mon relation (or verb) r between t
1
and t
2
, and
use the queries “t
1
r” and “t
2
r” to construct two
corpora Corpus
?
t
1
and Corpus
?
t
2
for t
1
and t
2
, re-
spectively. Then the syntactic context sets are cre-
ated from these contextual corpora using a non-
taxonomic relation identification method. The de-
tails of calculating Score
SCS
(t
1
, t
2
) can be found
in (Tuan et al., 2014).
They linearly combine the three scores as follows:
Score(t
1
, t
2
) = ?× Score
SIWN
(t
1
, t
2
)
+ ? × Score
LSP
(t
1
, t
2
) + ? × Score
SCS
(t
1
, t
2
)
(1)
If Score(t
1
, t
2
) is greater than a threshold value,
then t
1
is regarded as a hypernym of t
2
. We use
the same values of ?, ? and ? as in (Tuan et al.,
2014).
3.2 Trustiness of the evidence data
We introduce our method of estimating the trusti-
ness of a given source text in Section 3.2.1 and ex-
plain how to incorporate it into the work of (Tuan
et al., 2014) in Section 3.2.2.
3.2.1 Collecting trustiness score of the
evidence data
Given a data source (e.g. Web page), we consider
four aspects of trustiness as follows:
• Importance: A data source may be important
if it is referenced by many other sources.
• Popularity: If a data source is accessed by
many people, it is considered popular.
• Authority: If the data is created by a trusted
agency, such as government and education
institute, it may be more trustful than others
from less trusted sources such as forums and
social media.
• Accuracy: If the data contains many pieces
of accurate information, it seems trustful.
Importance
To measure the importance of a Web page (d) as
data source, we use the Google PageRank score
1
(Score
PageRank
(d)) that is calculated based on
the number and quality of links to the page. The
PageRank scores have the scale from 0 to 9, where
the bigger score means more importance than the
lower one. Using this score, the importance of a
page is calculated as follows:
Trust
Imp
(d) =
1
10? Score
PageRank
(d)
(2)
Note that we use the non-linearity for PageR-
ank score rather than just normalizing PageRank
to 0-1. The reason is to vary the gaps between the
important sites (which usually have the PageRank
score value from 7-10) and majority unimportant
site (which usually have the PageRank score value
less than 5).
Popularity
We use Alexa’s Traffic Rank
2
as the measure of
popularity, (Score
Alexa
(d)) which is based on the
traffic data provided by users in Alexa’s global
data panel over a rolling 3 month period. The
Traffic Ranks are updated daily. A site’s rank is
1
http://searchengineland.com/what-is-google-pagerank-
a-guide-for-searchers-webmasters-11068
2
http://www.alexa.com/
1015
based on a combined measure of unique visitors
and page views. Using this rank, the popularity of
a data source is calculated as follows:
Trust
Pop
(d) =
1
log(Score
Alexa
(d) + 1)
(3)
We use log transform in the popularity score in-
stead of, for example, linear scoring because we
want to avoid the bias of the much large gap be-
tween the Alexa scores of different sites (e.g. one
site has Alexa score 1000, but the other may have
score 100,000)
Authority
We rank the authority of a data source based on the
internet top-level domain (TLD). We observe that
the pages with limited and registered TLD (e.g.
.gov, .mil, .edu) are often more credible than those
with open domain (e.g. .com, .net). Therefore,
the authority score of a data source is calculated
as follows:
Trust
Auth
(d) =
{
1 if TLD of d is .gov, .mil or .edu
0 otherwise
(4)
Note that there are some reasons we choose
such implementation of Authority in an elemen-
tary way. First, we tried finer categorization of
various domains, e.g. .int has score 1/3, .com has
score 1/4, etc. However, the experimental results
did not show much change of performance. In ad-
dition, there is controversy on which open TLD
domains are more trustful than the others, e.g. it is
difficult to judge whether a .net site is more trust-
ful than .org or not. Thus, we let all open TLD
domains have the same score.
Accuracy
If the data source contains many pieces of accu-
rate information, it is trustful. Inspired by the idea
of Dong et al. (2015), we estimate the accuracy of
a data source by identifying correct and incorrect
information in form of the triples (Subject, Predi-
cate, Object) in the source, where Subject, Predi-
cate and Object are normalized with regard to the
knowledge base Freebase. The extraction of the
triples includes six tasks: named entity recogni-
tion, part of speech tagging, dependency parsing,
triple extraction, entity linkage (which maps men-
tions of proper nouns and their co-references to
the corresponding entities in Freebase) and rela-
tion linkage. We use three information extraction
(IE) tools (Angeli et al. (2014), Manning et al.
(2014), MITIE
3
) for the first four tasks, and de-
velop a method similar to Hachey et al. (2013)
for the last two tasks of entity linkage and relation
linkage.
Since the IE tools may produce noisy or unre-
liable triples, we use a voting scheme for triple
extraction as follows: A triple is only considered
to be true if it is extracted by at least two extrac-
tors. After obtaining all triples in the data source,
we use the closed world assumption as follows:
Given subject s and predicate p, O(s, p) denotes
the set of such objects that a triple (s,p,o) is found
in Freebase. Now given a triple (s, p, o) found
in the data source, if o ? O(s, p), we conclude
that the triple is correct; but if o 6? O(s, p) and
|O(s, p)| > 0, we conclude that the triple is incor-
rect. If |O(s, p)| = 0, we do not conclude any-
thing about the triple, and the triple is removed
from the set of facts found in the data source.
Given a data source d, we define cf(d) as the
number of correct facts, and icf(d) as the number
of incorrect facts found in d. The accuracy of d is
calculated as follows:
Trust
Accu
(d) =
1
1 + icf(d)
2
?
1
1 + cf(d)
2
(5)
Combining trustiness scores
The final trustiness score of a data source is the
linear combination of the four scores as follows:
Trust(d) = ?× Trust
Imp
(d) + ? × Trust
Pop
(d)
+ ? × Trust
Auth
(d) + ? × Trust
Accu
(d)
(6)
To estimate the optimal combination for parame-
ters ?, ?, ? and ?, we apply linear regression algo-
rithm (Hastie et al., 2009). For parameter learning,
we manually list 50 websites as trusted sources
(e.g. stanford.edu, bbc.com, nasa.gov), and the
top 15 gossip websites listed in a site
4
as untrusted
sources. Then we use the scores of their individual
pages by the four methods to learn the parameters
in Formula 6. The learning results are as follows:
?=0.46, ?=0.46, ?=2.03, ?=0.61.
3.2.2 Integrating trustiness into taxonomic
relation identification methods
Given a data collection C, we define:
AvgTrust(C) =
?
d?C
Trust(d)
|C|
3
https://github.com/mit-nlp/MITIE
4
http://www.ebizmba.com/articles/gossip-websites
1016
as the average trustiness score of all data in C.
We integrate the trustiness score to the three tax-
onomic relation identification methods described
in Section 3.1 as follows:
LSP method:
The LSP evidence score of the taxonomic relation
between t
1
and t
2
is recalculated as follows:
Score
Trust
LSP
(t
1
, t
2
) = Score
LSP
(t
1
, t
2
)×
(AvgTrust(C
Web
(t
1
, t
2
)) +AvgTrust(C
Web
(t
2
, t
1
)))
(7)
The intuition of Formula 7 is that the original
LSP evidence score is multiplied with the average
trustiness score of all evidence documents for the
taxonomic relation from the Web. If the number
of Web search results is too large, we use only the
first 1,000 results to estimate the average trustiness
score.
SCS method:
Similarly, the SCS evidence score is recalculated
as follows:
Score
Trust
SCS
(t
1
, t
2
) = Score
SCS
(t
1
, t
2
)×
(AvgTrust(Corpus
?
t
1
) +AvgTrust(Corpus
?
t
2
))
(8)
SIWN method:
This method does not use any evidence from the
Web, and so its measure does not change as fol-
lows:
Score
Trust
SIWN
(t
1
, t
2
) = Score
SIWN
(t
1
, t
2
) (9)
The three measures of trustiness are also linearly
combined as follows:
Score
Trust
(t
1
, t
2
) = ?× Score
Trust
SIWN
(t
1
, t
2
)+
? × Score
Trust
LSP
(t
1
, t
2
) + ? × Score
Trust
SCS
(t
1
, t
2
)
(10)
The values of ?, ?, and ? in Formula 10 are
identical to those for Formula 1.
3.3 Collective synonym evidence
3.3.1 Synonymy identification
We use the three following methods to collect syn-
onyms: dictionaries, pattern matching, and super-
vised learning.
Dictionaries: Synonyms can be found in dic-
tionaries like a general-purpose dictionary Word-
Net and also domain-specific ones. Since our do-
mains of interest include virus, animals, and plants
(see the next section for details), we also utilize
MeSH
5
, a well-known vocabulary in biomedicine.
Pattern matching: Given two terms t
1
and t
2
, we
use the following patterns to find their synonymy
evidence from the Web:
• t
1
also [known|called|named|abbreviated] as t
2
• Other common name[s] of t
1
[is|are|include] t
2
• t
1
, or t
2
, is a
• t
1
(short for t
2
)
, where [a|b] denotes a choice between a and b. If
the number of Web search results is greater than a
threshold ?, t
1
is considered as a synonym of t
2
.
Supervised learning: We randomly pick 100
pairs of synonyms in WordNet, and for each pair,
we use the Web search engine to collect sample
sentences in which both terms of the pair are men-
tioned. If the number of collected sentences is
greater than 2000, we use only the first 2000 sen-
tences for training. After that, we extract the fol-
lowing features from the sentences to train a logis-
tic regression model (Hastie et al., 2009) for the
synonymy identification:
• Headwords of the two terms
• Average distance between the terms
• Sequence of words between the terms
• Bag of words between the terms
• Dependency path between the terms (using
Stanford parser (Klein and Manning, 2003))
• Bag of words on the dependency path
The average F-measure of the obtained model
with 10-fold cross-validation is 81%. We use the
learned model to identify more synonym pairs in
the next step.
3.3.2 Embedding synonym information
Given a term t, we denote Syn(t) as the set of
synonyms of t (including t itself). The evidence
scores of the SCS and LSP methods are recalcu-
lated with synonyms as follows:
Score
Synonym
X
(t
1
, t
2
) =
?
t
?
1
?Syn(t
1
)
t
?
2
?Syn(t
2
)
Score
X
(t
?
1
, t
?
2
) (11)
, where the variable X can be replaced with SCS
and LSP.
5
http://www.ncbi.nlm.nih.gov/mesh
1017
The intuition of Formula (11) is that the evi-
dence score of the taxonomic relation between two
terms t
1
and t
2
can be boosted by adding all the
evidence scores of taxonomic relations between
them and their synonyms.
Again, as for the SIWN method, we do not
change the evidence score as follows:
Score
Synonym
SIWN
(t
1
, t
2
) = Score
SIWN
(t
1
, t
2
)
3.4 Contrastive evidence
Given two terms t
1
and t
2
, we use the following
patterns to find their contrastive (thus negative) ev-
idence from the Web:
• t
1
is not a t
2
• t
1
is not a [type|kind] of t
2
• t
1
, unlike the t
2
• t
1
is different [from|with] t
2
• t
1
but not t
2
• t
1
, not t
2
WH(t
1
, t
2
) denotes the total number of Web
search results, and the contrastive evidence score
between t
1
and t
2
is computed as follows:
Contrast(t
1
, t
2
) = log(WH(t
1
, t
2
) + 1) (12)
Similar to the collective synonym evidence, the
contrastive evidence score of taxonomic relation
between t
1
and t
2
is boosted with the contrastive
evidence scores of taxonomic relations between
the two terms and their synonyms as follows:
Score
Contrast
(t
1
, t
2
) =
?
t
?
1
?Syn(t
1
)
t
?
2
?Syn(t
2
)
Contrast(t
?
1
, t
?
2
)
|Syn(t
1
)| ? |Syn(t
2
)|
(13)
3.5 Combining trustiness, synonym and
contrastive evidence
We combine all the three features into the system
of (Tuan et al., 2014) as follows:
Score
Final
X
(t
1
, t
2
) =Score
Trust
X
(t
1
, t
2
)
+ Score
Synonym
X
(t
1
, t
2
)
(14)
, where the variable X can be replaced with each
of the three taxonomic relation evidence measures
(i.e. SCS, LSP, SIWN). The final combined score
is calculated as follows:
Score
Final
Combined
(t
1
, t
2
) = ?× Score
Final
SIWN
(t
1
, t
2
)
+ ? × Score
Final
LSP
(t
1
, t
2
) + ? × Score
Final
SCS
(t
1
, t
2
)
? ? × Score
Contrast
(t
1
, t
2
)
(15)
For each ordered pair of terms t
1
and t
2
, if
Score
Final
Combined
(t
1
, t
2
) is greater than a threshold
value, then t
1
is considered as a hypernym of t
2
.
We estimate the optimal values of parameters
?, ?, ? and ? in Formula 15 with ridge regres-
sion technique (Hastie et al., 2009) as follows:
First, we randomly select 100 taxonomic relations
in Animal domain as the training set. For each
taxonomic relation t
1
 t
2
, its evidence score is
estimated as ? +
1
Dist(t
1
,t
2
)
, where ? is the thresh-
old value for Score
Final
Combined
, and Dist(t
1
, t
2
) is
the length of the shortest path between t
1
and t
2
found in WordNet. Then we use our system to
find evidence scores with taxonomic relation iden-
tification methods in Formulas 13 and 14. Finally,
we build the training set using Formula 15, and
use the ridge regression algorithm to learn that the
best value for ? is 1.31, ? 1.57, ? 1.24 and ? 0.79,
where ?=2.3.
4 Experiment
4.1 Datasets
We evaluate our method for taxonomy construc-
tion against the following collections of six do-
mains:
• Artificial Intelligence (AI) domain: The cor-
pus consists of 4,976 papers extracted from
the IJCAI proceedings from 1969 to 2014 and
the ACL archives from year 1979 to 2014.
• Finance domain: The corpus consists of
1,253 papers extracted from the freely avail-
able collection of “Journal of Financial Eco-
nomics” from 1995 to 2012 and from “Re-
view Of Finance” from 1997 to 2012.
• Virus domain: We submit the query “virus”
to PUBMED search engine
6
and retrieve the
first 20,000 abstracts as the corpus of the
virus domain.
• Animals, Plants and Vehicles domains: Col-
lections of Web pages crawled by using
the bootstrapping algorithm described by
Kozareva et al. (2008).
We report the results of two experiments in
this section: (1) Evaluating the construction of
new taxonomies for Finance and AI domains (Sec-
tion 4.2), and (2) comparing with the curated
6
http://www.ncbi.nlm.nih.gov/pubmed
1018
databases’ sub-hierarchies. We compare our ap-
proach with other three state-of-the-art methods
in the literature, i.e. (Kozareva and Hovy, 2010),
(Navigli et al., 2011) and (Tuan et al., 2014) (Sec-
tion 4.3). In addition, for Animal domain, we also
compare with the reported performance of Bansal
et al. (2014), a recent work to construct taxonomy
using belief propagation.
4.2 Constructing new taxonomies for
Finance and AI domains
Referential taxonomy structures such as WordNet
and OpenCyc are widely used in semantic analyt-
ics applications. However, their coverage is lim-
ited to common, well-known areas, and many spe-
cific domains like Finance and AI are not well cov-
ered in those structures. Therefore, an automatic
method which can induce taxonomies for those
specific domains can greatly contribute to the pro-
cess of knowledge discovery.
To estimate the precision of a given method, we
randomly choose 100 relations among the results
of the method and manually check their correct-
ness. The results summarized in Table 1 show that
our method extracts much more relations, though
with slightly lower precision, than Kozareva et al.
(2008) and Navigli and Velardi (2004). Note that
due to the lack of gold standards in these two do-
mains, we do not compare the methods in terms
of F-score, which we will measure with curated
databases in the next section. Compared to Tuan
et al. (2014), which can be considered as the base-
line of our approach, our method has significant
improvement in both precision and the number
of extracted relations. It indicates that the three
incorporated features of trustiness, and synonym
and contrastive evidence are effective in improv-
ing the performance of existing taxonomy con-
struction methods.
Finance AI
P N P N
Kozareva 90% 753 94% 950
Navigli 88% 1161 93% 1711
Tuan 85% 1312 90% 1927
Our method 88% 1570 92% 2168
Table 1: Experiment result for finance and AI do-
mains. P stands for Precision, and N indicates the
number of extracted relations.
4.3 Evaluation against curated databases
We evaluate automatically constructed tax-
onomies for four domains (i.e. Animal, Plant,
Vehicle, Virus) against the corresponding sub-
hierarchies of curated databases. For Animal,
Plant and Vehicle domains, we use WordNet as
the gold standards, whereas for Virus domain, we
use MeSH sub-hierarchy of virus as the reference.
Note that in this comparison, to be fair, we
change our algorithm to avoid using WordNet in
identifying taxonomic relations (i.e. SIWN algo-
rithm), and we only use the exact string-matching
comparison without WordNet. The evaluation
uses the following measures:
Precision =
#relations found in database and by the method
#relations found by the method
Recall =
#relations found in database and by the method
#relations found in database
To understand the individual contribution of the
three introduced features (i.e. trustiness, synonym,
contrast), we also evaluate our method only with
one of the three features each time, as well as with
all the three features (denoted as “Combined”).
Tables 2 and 3 summarize the experiment re-
sults. Our combined method achieves significantly
better performance than the previous state-of-the-
art methods in terms of F-measure and Recall (t-
test, p-value < 0.05) for all the four domains.
For Animal domain, it also shows higher perfor-
mance than the reported performance of Bansal et
al. (2014). In addition, the proposed method im-
proves the baseline (i.e. Tuan et al. (2014)) up to
4%-10% of F-measure.
Furthermore, we find that the three features
have different contribution to the performance im-
provement. The trustiness feature contributes to
the improvement on both precision and recall. The
synonym feature has the tendency of improving
the recall further than the trustiness, whereas the
contrastive evidence improves the precision. Note
that we discussed these different contributions of
the features in the Introduction.
Animal Plant
P R F P R F
Kozareva 98 38 55 97 39 56
Navigli 97 44 61 97 38 55
Bansal 84 55 67
Tuan 95 56 70 95 53 68
Trustiness 97 61 75 97 56 71
Synonym 92 65 76 93 58 71
Contrast 97 55 70 97 53 69
Combined 97 65 78 96 59 73
Table 2: Experiment results for animal and plant
domains. P stands for Precision, R Recall, and F
F-score. The unit is %.
1019
Vehicle Virus
P R F P R F
Kozareva 99 60 75 97 31 47
Navigli 91 49 64 99 37 54
Tuan 93 69 79 93 43 59
Trustiness 96 72 82 97 48 64
Synonym 91 72 80 91 53 67
Contrastive 97 68 80 98 42 59
Combined 95 73 83 96 54 69
Table 3: Experiment results for vehicle and virus
domains. P stands for Precision, R Recall, and F
F-score. The unit is %.
4.3.1 Evaluation of individual methods for
trustiness and synonymy identification
We evaluate the individual methods for trusti-
ness measurement and synonymy identification
described in Sections 3.2.1 and 3.3.1. For this pur-
pose, we evaluate our system only with one of the
individual methods at a time (i.e. importance, pop-
ularity, authority and accuracy for trustiness mea-
sure, and dictionary, pattern matching, and ma-
chine learning methods for synonymy identifica-
tion).
As summarized in Table 4, the “Importance”
and “Accuracy” methods for trustiness measure-
ment based on PageRank and IE systems, respec-
tively, have more contribution than the others.
Similarly, the experiment results indicate that the
“Machine learning” method has the most contribu-
tion among the three methods of synonymy iden-
tification.
In addition, we also examine the interdepen-
dence of the four introduced aspects of trustiness
by running the system with the combination of
only two aspects, Importance and Accuracy. The
results in all domains show that when combining
only the Importance and Accuracy, the system al-
most achieves the same performance to that of the
combined system with all four criteria, except for
the Plant domain. It can be explained as the Impor-
tance aspect (which is expressed as the PageRank
score) may subsume the Popularity and Authority
aspects. Another interesting point is that the per-
formance of Accuracy, which is solely based on
the local information from the website, when ap-
plied individually, is almost the same with that of
Importance which is based on the distributed in-
formation. It shows that the method of ranking of
the sites based on the knowledge-based facts can
achieve the effectiveness as good as the traditional
ranking method using PageRank score.
Animal Plant Vehicle Virus
Trustiness:
Importance 74% 70% 81% 63%
Popularity 72% 69% 81% 61%
Authority 72% 69% 80% 61%
Accuracy 73% 70% 81% 62%
Imp + Accu 75% 70% 82% 64%
Synonym:
Dictionaries 73% 69% 79% 62%
Pattern matching 74% 69% 80% 64%
Machine learning 74% 70% 80% 65%
Table 4: Contribution of individual trustiness mea-
sures and collective synonym evidence in terms of
F-measure. Imp stands for Important and Accu
stands for Accuracy
4.4 Discussion
4.4.1 Case studies
We give two examples to illustrate how the pro-
posed features help to infer correct taxonomic re-
lations and filter out incorrect relations. Our base-
line (Tuan et al. (2014)) extracts an incorrect taxo-
nomic relation between ‘fox’ and ‘flying fox’ due
to the following reasons: (1) ‘flying fox’ includes
‘fox’ (SIWN) and (2) untrusted sources such as
a public forum
7
support the relation. Using our
proposed method, this relation is filtered out be-
cause those untrusted sources are discouraged by
the trustiness feature, and also because there are
contrastive evidence
8
saying that ‘flying fox’ is
NOT a ‘fox’. Specifically, the average trustiness
score of LSP method of the sources for the invalid
relation (i.e. AvgTrust(C
Web
(fox, flying fox)) +
AvgTrust(C
Web
(flying fox, fox))) is 0.63, which
is lower than the average of those scores, 0.90.
Also, the collective contrastive evidence score
(i.e. Score
Contrast
(fox, flying fox)) is 1.10, which
is higher than the average collective contrastive
score, 0.32.
On the other hand, the true taxonomic rela-
tion between ‘bat’ and ‘flying fox’ is not identi-
fied by the baseline, mainly due to the rare men-
tion of this relation in the Web. However, our
proposed method can recognize this relation be-
cause of two reasons: (1) ‘flying fox’ has many
synonyms such as ‘fruit bat’, ‘pteropus’, ‘kalong’,
and ‘megabat’, and there are much evidence that
these synonyms are kinds of ‘bat’ (i.e. using
the collective synonym evidence). (2) The ev-
idence for the taxonomic relation between ‘fly-
7
http://redwall.wikia.com/wiki/User:Ferretmaiden/Archive3
8
http://en.cc-english.com/index.php?shownews-1397
1020
ing fox’ and ‘bat’, though rare, is from trusted
sites
9
which are maintained by scientists. Thus,
the trustiness feature helps to boost the evidence
score for this relation over the threshold value.
Specifically, the average trustiness score of LSP
method (i.e. (AvgTrust(C
Web
(bat, flying fox)) +
AvgTrust(C
Web
(flying fox, bat)))), 2.84, is higher
than the average in total, 0.90.
We further investigate on 256 taxonomic rela-
tions that were missed by the baseline but correctly
identified by the proposed method. The average
Score
LSP
and the average Score
SCS
of the re-
lations by the baseline are 0.35 and 0.60, respec-
tively, while those by the proposed method are
1.17 and 0.82, respectively. We thus find that the
proposed method is more effective in correctly im-
proving the LSP method than the SCS method.
4.4.2 Empirical comparison with WordNet
By error analysis, we find that our results may
complement WordNet. For example, in Animal
domain, our method identifies ‘wild sheep’ as a
hyponym of ‘sheep’, but in WordNet, they are sib-
lings. However, many references
10 11
consider
‘wild sheep’ as a species of ‘sheep’. Another such
example is that our system recognizes ‘aquatic
vertebrate’ as a hypernym of ‘aquatic mammal’,
but WordNet places them in different subtrees in-
correctly
12
. Therefore, our results may help re-
structure and extend WordNet.
4.4.3 Threshold tuning
Our scoring methods utilize several thresholds to
select relations of high ranks. Here we discuss
them in details below.
The threshold value ? for the pattern match-
ing method in Section 3.3.1 controls the number
of synonymy relations extracted from text. The
threshold value for Score
Final
Combined
of Formula 15
in Section 3.5 controls the number of extracted
taxonomic relations. In general, the larger these
threshold values are, the higher number of syn-
onyms and taxonomic relations we can get. In
our experiments, we found that the threshold val-
ues for ? between 100 and 120, and those for
Score
Final
Combined
between 2.3 and 2.5 generally help
the system achieve the best performance.
9
http://krjsoutheastasianrainforests.weebly.com/animals-
in-biome-and-habitat-structures.html
10
http://en.wikipedia.org/wiki/Ovis
11
http://www.bjornefabrikken.no/side/norwegian-sheep/
12
http://en.wikipedia.org/wiki/Aquatic mammal
5 Conclusion
In this paper, we propose the features of trusti-
ness, and synonym and contrastive collective ev-
idence for the task of taxonomy construction, and
show that these features help the system improve
the performance significantly. As future work, we
will investigate into the task of automatically con-
structing patterns for the pattern matching meth-
ods in Sections 3.3 and 3.4, to improve cover-
age. We will also enhance the accuracy measure
of trustiness, based on the observation that some
untrusted sites copy information from other sites
to make them look more trustful.
References
Gabor Angeli, Julie Tibshirani, Jean Y. Wu, and
Christopher D. Manning. 2014. Combining Dis-
tant and Partial Supervision for Relation Extraction.
Proceedings of the Conference on Empirical Meth-
ods on Natural Language Processing, pages 1556–
1567.
Mohit Bansal, David Burkett, Gerard De Melo, and
Dan Klein. 2014. Structured learning for taxonomy
induction with belief propagation. Proceedings of
the 52nd Annual Meeting of the ACL, pages 1041–
1051.
Kurt Bollacker, Colin Evans, Praveen Paritosh, Tim
Sturge, and Jamie Taylor. 2008. Freebase: a col-
laboratively created graph database for structuring
human knowledge. Proceedings of the ACM SIG-
MOD International Conference on Management of
Data, pages 1247–1250.
Xin L. Dong, Evgeniy Gabrilovich, Kevin Murphy, Van
Dang, Wilko Horn, Camillo Lugaresi, Shaohua Sun,
and Wei Zhang. 2015. Knowledge-Based Trust: Es-
timating the Trustworthiness of Web Sources. Pro-
ceedings of the VLDB Endowment, 8(9).
Lucas Drumond and Rosario Girardi. 2010. Extract-
ing ontology concept hierarchies from text using
markov logic. Proceedings of the ACM Symposium
on Applied Computing, pages 1354–1358.
Samah Fodeh, Bill Punch, and Pang N. Tan. 2011. On
ontology-driven document clustering using core se-
mantic features. Knowledge and information sys-
tems, 28(2):395–421.
Hermine N. Fotzo and Patrick Gallinari. 2004.
Learning “generalization/specialization” relations
between concepts - application for automatically
building thematic document hierarchies. Pro-
ceedings of the 7th International Conference on
Computer-Assisted Information Retrieval.
1021
Ruiji Fu, Jiang Guo, Bing Qin, Wanxiang Che, Haifeng
Wang, and Ting Liu. 2014. Learning semantic hi-
erarchies via word embeddings. Proceedings of the
52nd Annual Meeting of the ACL, pages 1199–1209.
Ben Hachey, Will Radford, Joel Nothman, Matthew
Honnibal, and James R. Curran. 2013. Evaluat-
ing entity linking with Wikipedia. Artificial intel-
ligence, 194:130–150.
Sanda M. Harabagiu, Steven J. Maiorano, and Mar-
ius A. Pasca. 2003. Open-domain textual question
answering techniques. Natural Language Engineer-
ing, 9(3):231–267.
Trevor Hastie, Robert Tibshirani, and Jerome H. Fried-
man. 2009. The elements of statistical learning.
Springer-Verlag.
Marti A. Hearst. 1992. Automatic acquisition of hy-
ponyms from large text corpora. Proceedings of
the 14th Conference on Computational Linguistics,
pages 539–545.
Jung J. Kim, Zhuo Zhang, Jong C. Park, and See K.
Ng. 2006. Biocontrasts: extracting and exploiting
protein-protein contrastive relations from biomedi-
cal literature. Bioinformatics, 22(5):597–605.
Dan Klein and Christopher D. Manning. 2003. Accu-
rate Unlexicalized Parsing. Proceedings of the 41st
Annual Meeting of the ACL, pages 423–430.
Zornitsa Kozareva and Eduard Hovy. 2010. A Semi-
supervised Method to Learn and Construct Tax-
onomies Using the Web. Proceedings of the Con-
ference on Empirical Methods in Natural Language
Processing, pages 1110–1118.
Zornitsa Kozareva, Ellen Riloff, and Eduard H. Hovy.
2008. Semantic Class Learning from the Web with
Hyponym Pattern Linkage Graphs. Proceedings of
the 46th Annual Meeting of the ACL, pages 1048–
1056.
Christopher D. Manning, Mihai Surdeanu, John Bauer,
Jenny Finkel, Steven J. Bethard, and David Mc-
Closky. 2014. The stanford corenlp natural lan-
guage processing toolkit. Proceedings of the 52nd
Annual Meeting of the ACL, pages 55–60.
Cynthia Matuszek, John Cabral, Michael J. Witbrock,
and John DeOliveira. 2006. An introduction to the
syntax and content of cyc. Proceedings of the AAAI
Spring Symposium, pages 44–49.
George A. Miller. 1995. WordNet: a Lexical
Database for English. Communications of the ACM,
38(11):39–41.
Roberto Navigli and Paola Velardi. 2004. Learn-
ing Domain Ontologies from Document Warehouses
and Dedicated Web Sites. Computational Linguis-
tics, 30(2):151–179.
Roberto Navigli, Paola Velardi, and Stefano Faralli.
2011. A Graph-based Algorithm for Inducing Lex-
ical Taxonomies from Scratch. Proceedings of the
20th International Joint Conference on Artificial In-
telligence, pages 1872–1877.
Luu A. Tuan, Jung J. Kim, and See K. Ng. 2014.
Taxonomy Construction using Syntactic Contextual
Evidence. Proceedings of the EMNLP conference,
pages 810–819.
Wu Wentao, Li Hongsong, Wang Haixun, and
Kenny. Q. Zhu. 2012. Probase: A probabilistic tax-
onomy for text understanding. Proceedings of the
ACM SIGMOD conference, pages 481–492.
Wilson Wong, Wei Liu, and Mohammed Bennamoun.
2007. Tree-traversing ant algorithm for term cluster-
ing based on featureless similarities. Data Mining
and Knowledge Discovery, 15(3):349–381.
Hui Yang and Jamie Callan. 2009. A Metric-
based Framework for Automatic Taxonomy Induc-
tion. Proceedings of the 47th Annual Meeting of the
ACL, pages 271–279.
Xingwei Zhu, Zhao Y. Ming, and Tat S. Chua. 2013.
Topic hierarchy construction for the organization of
multi-source user generated contents. Proceedings
of the 36th ACM SIGIR conference, pages 233–242.
1022
