Proceedings of the Demonstrations at the 14th Conference of the European Chapter of the Association for Computational Linguistics, pages 1–4,
Gothenburg, Sweden, April 26-30 2014.
c©2014 Association for Computational Linguistics
ITU Turkish NLP Web Service
G¨uls¸en Eryi
?
git
Department of Computer Engineering
Istanbul Technical University
Istanbul, 34469, Turkey
gulsen.cebiroglu@itu.edu.tr
Abstract
We present a natural language processing
(NLP) platform, namely the “ITU Turk-
ish NLP Web Service” by the natural lan-
guage processing group of Istanbul Tech-
nical University. The platform (available
at tools.nlp.itu.edu.tr) operates
as a SaaS (Software as a Service) and pro-
vides the researchers and the students the
state of the art NLP tools in many lay-
ers: preprocessing, morphology, syntax
and entity recognition. The users may
communicate with the platform via three
channels: 1. via a user friendly web inter-
face, 2. by file uploads and 3. by using the
provided Web APIs within their own codes
for constructing higher level applications.
1 Introduction
ITU NLP research group is devoted to produce
Turkish NLP tools for more than 10 years. The
group offers many NLP courses in graduate level
and core NLP research components to different re-
search groups both in NLP field and other disci-
plines: e.g. linguistics, data mining, web mining
and information retrieval. The motivation of the
presented platform in this paper comes from the
real word problems of sharing the produced NLP
resources by different people from varying level of
computer background (starting from undergradu-
ates to PhD students or researchers, people from
other fields (e.g.linguistics)). These may be cate-
gorized under the following main problems:
1. Need to provide assistance for the installa-
tion and the usage of different tools, all pos-
ing different technological requirements in
the users’ computers.
2. Difficulty to share the updates and the new
modules introduced into the pipeline.
3. Difficulty of using the tools for educational
purposes within the classrooms and term
projects.
4. licensing issues of the underlying technolo-
gies (such as FST and machine learning soft-
wares)
The difficulty in the ease-of-use of Turkish NLP
tools and their inconsistencies with each others
were also causing the replication of the same effort
in different places and preventing the community
from working on less-studied higher level areas for
the Turkish language. A good example to this may
be the efforts for creating Turkish morphological
analyzers: some outstanding ones among many
others are (Oflazer, 1994; Eryi?git and Adal?, 2004;
Ak?n and Ak?n, 2007; Sak et al., 2008; C¸¨oltekin,
2010; S¸ahin et al., 2013))
In this paper, we present our new web ser-
vice which provides both a whole Turkish NLP
pipeline (from raw data to syntax, example given
in Figure1 priorly defined in (Eryi?git, 2012)) and
its atomic NLP components for stand-alone usage,
namely:
• Tokenizer
• Deasciifier
• Vowelizer
• Spelling Corrector
• Normalizer
• isTurkish
• Morphological Analyzer
• Morphological Disambiguator
• Named Entity Recognizer
• Dependency Parser
2 Provided Components
The provided components via our web service
may be grouped under 4 layers: preprocessing,
morphological processing, multiword expression
handling and syntactic processing.
2.1 Preprocessing
The preprocessing layer consists of many sub
components specifically developed for unformat-
1
Figure 1: ITU Turkish NLP Pipeline
2
ted social media data in focus. These are a tok-
enizer, a diacritic restorer, a vowelizer, a spelling
corrector and a normalizer. The diacritic restorer
1
is the component where the ASCII characters are
transformed into their proper Turkish forms. The
deasciifier (Adal? and Eryi?git, 2014) chooses the
most probable candidate within the current context
by using conditional random fields (CRFs). The
vocalizer (Adal? and Eryi?git, 2014) restores the
omitted vowels (generally within the social media
messages for shortening purpose): e.g. “svyrm”
will be converted to “seviyorum” (I love you).
The spelling corrector
2
is kind of an adaptation
of Wang et al.(2011) into agglutinative languages.
The normalizer (Toruno?glu and Eryi?git, 2014) is
constructed of the previous three components and
many other modules and provides a state of the art
text normalizer for Turkish.
2.2 Morphological Processing
This layer consists of a rule based morpholog-
ical analyzer (S¸ahin et al., 2013; S¸ahin, 2014)
which uses HFST-Helsinki Finite State Transducer
(Lind´en et al., 2009) and a hybrid morphological
disambiguator
3
. This layer also provides the is-
Turkish component which validates a word by us-
ing the morphological analyzer.
2.3 Multi Word Expressions
As shown in Eryigit et al. (2011), the detection
and unification of the named entities has the high-
est impact for the syntactic layer. That is why the
following Turkish named entity recognizer (S¸eker
and Eryi?git, 2012) is included within the pipeline
and the remaining multiword expressions are de-
tected in the syntactic layer as shown in Figure 1
(dependency label MWE).
2.4 Syntactic Parsing
For the syntactic layer we are providing the state
of the art dependency parser for Turkish presented
in (Eryi?git et al., 2008; Nivre et al., 2007) which
produces the ouputs in Conll format (Buchholz
and Marsi, 2006).
3 Conclusion and Future Work
We introduced our ITU Turkish NLP Web Plat-
form which provides us easier administration, au-
tomatic updates and patch management, com-
1
named as “deasciifier” since the term is already adopted
by the Turkish community
2
Publication in preparation.
3
Publication in preparation.
patibility, easier usage, easier collaboration
4
and
global accessibility by being designed as a SaaS.
Any body from any discipline with any level of un-
derlying computer background may easily use our
web interface either for only analyzing language
data or for constructing more complicated NLP
systems. The platform already attracted many
users from different universities in Turkey and it is
now started to get used in many research projects
and graduate theses. We believe as being the pi-
oneer serving almost all of the available and top
performing NLP tools for Turkish, ITU Turkish
NLP Web Service will fed light to new research
topics for this language.
For now, the pipeline is constructed by convert-
ing the input output formats of each individual
tools. But our current effort is to transform the
platform into a UIMA(Ferrucci and Lally, 2004)
compliant architecture so that it can also integrate
with other such platforms universally. We also
plan to service the new version of ITU Data Anno-
tation Tool (Eryi?git, 2007) from the same address
where the users will also be able to see their data
visually (e.g. dependency trees)
Acknowledgments
I want to thank my students without whose it
would be impossible to produce the ITU Turkish
NLP pipeline: Thomas Joole, Dilara Toruno?glu,
Umut Sulubacak and Hasan Kaya. This work is
part of a research project supported by TUBITAK
1001(Grant number: 112E276) as an ICT cost ac-
tion (IC1207) project.
References
K¨ubra Adal? and G¨uls¸en Eryi?git. 2014. Vowel and
diacritic restoration for social media texts. In 5th
Workshop on Language Analysis for Social Media
(LASM) at EACL, Gothenburg, Sweden, April. As-
sociation for Computational Linguistics.
Ahmet Afsin Ak?n and Mehmet D¨undar Ak?n. 2007.
Zemberek, an open source nlp framework for turkic
languages. Structure.
Sabine Buchholz and Erwin Marsi. 2006. Conll-X
shared task on multilingual dependency parsing. In
Proceedings of the 10th Conference on Computa-
tional Natural Language Learning, pages 149–164,
New York, NY. Association for Computational Lin-
guistics.
C¸a?gr? C¸¨oltekin. 2010. A freely available morpho-
logical analyzer for Turkish. In Proceedings of
the 7th International conference on Language Re-
sources and Evaluation (LREC2010), pages 820–
827.
4
The mailing list notifications are sent to registered users
with each new broadcast.
3
Figure 2: ITU Turkish NLP Web Interface
G¨uls¸en Eryi?git and Es¸ref Adal?. 2004. An affix strip-
ping morphological analyzer for Turkish. In Pro-
ceedings of the International Conference on Artifi-
cial Intelligence and Applications, pages 299–304,
Innsbruck, 16-18 February.
Gulsen Eryigit, Tugay Ilbay, and Ozan Arkan Can.
2011. Multiword expressions in statistical depen-
dency parsing. In Proceedings of the Second Work-
shop on Statistical Parsing of Morphologically Rich
Languages (IWPT), pages 45–55, Dublin, Ireland,
October. Association for Computational Linguistics.
G¨uls¸en Eryi?git. 2007. Itu treebank annotation tool.
In Proceedings of the ACL workshop on Linguistic
Annotation (LAW 2007), Prague, 24-30 June.
G¨uls¸en Eryi?git. 2012. The impact of automatic mor-
phological analysis & disambiguation on depen-
dency parsing of turkish. In Proceedings of the
Eighth International Conference on Language Re-
sources and Evaluation (LREC), Istanbul, Turkey,
23-25 May.
G¨uls¸en Eryi?git, Joakim Nivre, and Kemal Oflazer.
2008. Dependency parsing of Turkish. Computa-
tional Linguistics, 34(3):357–389.
David Ferrucci and Adam Lally. 2004. UIMA: an
architectural approach to unstructured information
processing in the corporate research environment.
Natural Language Engineering, 10(3-4):327–348.
Krister Lind´en, Miikka Silfverberg, and Tommi Piri-
nen. 2009. Hfst tools for morphology–an efficient
open-source package for construction of morpholog-
ical analyzers. In State of the Art in Computational
Morphology, pages 28–47. Springer.
Joakim Nivre, Johan Hall, Jens Nilsson, Atanas
Chanev, G¨uls¸en Eryi?git, Sandra K¨ubler, Stetoslav
Marinov, and Erwin Marsi. 2007. Maltparser:
A language-independent system for data-driven de-
pendency parsing. Natural Language Engineering
Journal, 13(2):99–135.
Kemal Oflazer. 1994. Two-level description of Turk-
ish morphology. Literary and Linguistic Comput-
ing, 9(2):137–148.
Muhammet S¸ahin, Umut Sulubacak, and G¨uls¸en
Eryi?git. 2013. Redefinition of Turkish morphol-
ogy using flag diacritics. In Proceedings of The
Tenth Symposium on Natural Language Processing
(SNLP-2013), Phuket, Thailand, October.
Muhammet S¸ahin. 2014. ITUMorph, a more accurate
and faster wide coverage morphological analyzer for
Turkish. Master’s thesis, Istanbul Technical Univer-
sity.
Has¸im Sak, Tunga G¨ung¨or, and Murat Sarac¸lar. 2008.
Turkish language resources: Morphological parser,
morphological disambiguator and web corpus. In
GoTAL 2008, volume 5221 of LNCS, pages 417–
427. Springer.
G¨okhan Ak?n S¸eker and G¨uls¸en Eryi?git. 2012. Initial
explorations on using CRFs for Turkish named en-
tity recognition. In Proceedings of COLING 2012,
Mumbai, India, 8-15 December.
Dilara Toruno?glu and G¨uls¸en Eryi?git. 2014. A cas-
caded approach for social media text normalization
of Turkish. In 5th Workshop on Language Analy-
sis for Social Media (LASM) at EACL, Gothenburg,
Sweden, April. Association for Computational Lin-
guistics.
Ziqi Wang, Gu Xu, Hang Li, and Ming Zhang. 2011.
A fast and accurate method for approximate string
search. In Proceedings of the 49th Annual Meet-
ing of the Association for Computational Linguis-
tics: Human Language Technologies, pages 52–61.
4
