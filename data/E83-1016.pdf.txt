RELATING SYNTAX AND SEMANTICS: 
THE sYNTACTICO-SEMANTIC LEXICON OF THE SYSTEM VIE-LANG 
Ingeborg Steinacker,  Ernst Buchberger 
Department of Medical Cybernet ics  
Univers i ty of Vienna, Austria 
ABSTRACT 
This paper descr ibes the structure 
and evaluat ion of the syntact ico-semant ic  
lexicon (SSL) of the German Natural 
Language Understanding System VIE-LANG 
\[3\]. VIE-LANG uses an SI-Net \[2\] as 
internal representat ion.  The SSL contains 
the rules according to which the mapping 
between net-structures and surface 
structures of a sentence is carr ied out. 
This information is structured in a way 
that it can be evaluated from two sides. 
The parser interprets it as 
product ion-ru les  that control  the 
analysis. Syntact ic and semantic features 
of the input sentence are evaluated and 
individuals are created in the semantic 
net. The generator  uses the same rules to 
express selected net-structures in 
adequate natural language expressions.  It 
is shown how both processes can make 
effect ive use of the SSL. The d i f ferent  
poss ib i l i t ies  for evaluating the SSL are 
explained and i l lustrated by examples. 
I OVERVIEW OF THE SYSTEM VIE-LANG 
A. Representat ion 
In the system VIE-LANG real world 
knowledge is represented within a semantic 
net (SN) which is realized in the 
formalism of an SI-Net \[2\]. The net is 
organized in two layers. 
The generic layer contains the static 
knowledge of the system. At the generic 
level real world knowledge is represented 
in the form of concepts and roles. A 
concept is defined by its attr ibutes which 
consist of two parts: role and value 
restr ict ion. The value restr ict ion is a 
concept which def ines the range of 
possible f i l lers for the attr ibute, the 
role def ines the relation of the fil ler to 
the concept being defined. 
Generic concepts are organized in a 
hierarchy of super-  and subconcepts in 
which a subconcept inherits all at t r ibutes 
of its superconcepts.  
The second layer of the net contains 
the dynamic knowledge which consists  of 
indiv idual ized concepts. The parser 
creates indiv iduals of those net 
structures which are addressed by the 
input words. As more input is analyzed 
more individuals and links are created. 
These indiv iduals  const i tute the episodic 
layer of the net. 
The conceptual  content of the net is 
organized according to the idea of 
semantic pr imit ives \[8\] which are 
character ized by typical attr ibutes.  
Act ion pr imit ives have attr ibutes which 
correspond to cases of a case grammar 
(AGENT, OBJECT, RECIPIENT, LOCATION, etc.) 
\[4\], \[ii\]. 
B. Parsin@ 
Our parser belongs to the class of 
semantic parsers as suggested by \[i\], \[7\]. 
Since syntax carr ies a lot of informat ion 
in German it has to be considered in 
analysis: The syntactic role of a 
const i tuent  cannot be determined by 
word-order,  instead its morphologica l  
endings which indicate the surface case of 
the const i tuent  have to be evaluated. 
The parser is a data-dr iven system, 
which combines syntactic and semantic 
processes. Syntax is used as the tool to 
gain information concerning the 
const i tuents  of the sentence, but the 
syntactic processes interact with semantic 
ones in order to conf irm their hypotheses 
about a const ituent.  To recognize NPs and 
PPs the parser uses an ATN, which accepts 
semant ica l ly  valid interpretat ions only. 
The resultant structures include syntact ic 
and semantic information about the 
const i tuent.  These structures are then 
col lected in a const i tuent  list. 
96 
The semantic representat ion of a 
sentence is bui lt  by l inking the 
const i tuents  to the predicate. This 
process is control led by the SSL-entry for 
the verb. F i rst  the dominant verb has to 
be d isambiguated \[9\]. SSL entr ies for 
verbs contain the information how 
verb-dependent  const i tuents are mapped 
onto the cases represented within the net. 
In a last step referents for modi fy ing 
const i tuents are determined and attached. 
A sentence is considered to have been 
parsed successfu l ly  after all const i tuents 
of the sentence have been incorporated. 
As a result the parser produces a 
conf igurat ion of individuals in the net - 
the semantic representat ion of the input. 
C. Generat ion 
The task of the generator is to 
convert a selected part of the episodic 
layer of the semantic net into surface 
sentences. This part - a root node and 
vert ices and nodes attached to it form a 
coherent graph - is assumed to have been 
determined previously by the dialogue 
component. Generat ion is accompl ished in 
two steps: step one performs a mapping of 
the SN to an intermediate structure (IMS) 
containing words together with syntact ical  
and morphological  data, and step two 
transforms the IMS to surface sentences by 
applying syntactical  t ransformations,  
l inear izat ions and a morphological  
synthesis.  
To produce a single sentence, the 
dominat ing verb is selected first, as it 
plays a central role in a sentence. The 
semantic pr imit ives of which the SN is 
composed imply that there is no one-to-one 
correspondence between concepts in the net 
and words of the language. Therefore the 
decis ion which verb to select depends on 
the pattern of individuals in the episodic 
layer of the net. The cr iter ia for this 
select ion are attached to the generic 
concept of the root node in form of a 
d iscr iminat ion net (DN) \[5\]. Its tests 
evaluate the filled attr ibutes of the root 
primit ive. The evaluat ion of this DN 
results not only in a verb, but in a 
verb-sense. 
The generator accesses the SSL entry 
for this verb-sense and continues by 
processing the di f ferent rules of which it 
is composed. The rules are evaluated from 
right to left. Right sides mainly deal 
with ent i t ies in the SN, especia l ly  
individuals. If an individual is relevant 
to generat ion,  it is put on a stack 
("current individual"). When the left 
side is processed, syntactical data along 
with the result of a recursive call of 
this part of the generator is passed to 
the IMS. The current individual (the 
argument of this call) is then removed 
from the stack and control is returned to 
the cal l ing procedure, thus al lowing the 
next rule to be processed. The IMS which 
is created during this part of the process 
forms the input for the step two processor 
which will f inal ly produce the output 
sentence \[6\]. 
II THE SYNTACTICO-SEMANTIC LEXICON 
By means of the SSL the mapping 
between surface expressions in natural 
language and structures of the 
representat ion is achieved. For an NLU 
dialogue system the relat ion between 
surface and representat ion is of interest 
in the context of parsing and the context  
of generat ing.  The structure of the SSL 
allows interpretat ion by both processes.  
Attr ibutes of act ions real ize the 
ideas of a case grammar. This leads to a 
correspondence between roles in the net 
and surface cases within the sentence. 
Cases of a case grammar at the one hand 
show regular i t ies in their re lat ion to 
syntact ic const i tuents (subject -> AGENT),  
at the other hand the relat ion between a 
role and a surface case is verb-dependent .  
E.g. the verb 'bekommen' (to get) relates 
the subject to the role RECIPIENT, the 
verb 'geben' (to give) relates the subject 
to the role SOURCE. The verb 'geben' 
requires the RECIPIENT to be expressed by 
a dative. Such dependencies are captured 
in the entr ies of the SSL whereas the 
regular i t ies are treated by defaults.  
A. Structure of the SSL 
The basic unit in the SSL is the 
entry for a word-sense. Associated to 
each word-sense is an optional number of 
pairs which we will descr ibe by the terms 
'Left Side' (LS) and 'Right Side' (RS). A 
pair descr ibes how a word (phrase) of the 
sentence is represented within the 
semantic net. 
LSs descr ibe features of the surface 
sentence. Most features refer to 
syntact ic propert ies,  e .g .  const i tuents  
of a given surface case, inf in it ive 
construct ions,  lexical categories,  surface 
words, and  some features indicate 
select ional restr ict ions. If a LS 
contains more than one feature they are 
combined with an operator.  One of the 
most frequent patterns that is used in LSs 
combines a syntact ic feature with a net 
concept which is interpreted as 
select ional restriction. This combinat ion 
reflects our general parsing approach to 
combine syntax with semantics. 
97 
RSs refer most ly  to structures within 
the semantic net. There is no one-to-one 
correspondence between word-senses and 
conceptual pr imit ives.  To represent word 
(or phrase) meanings pr imit ives are l inked 
forming more complex structures. By 
def in i t ion there is one d ist inguished 
concept in each RS 'the root concept' 
which is the central element of the 
representat ion.  All other structures 
referenced in an RS are l inked to it. 
A l though the number of 
act ion-pr imi t ives  is re lat ively small 
(14), the net provides poss ib i l i t ies  to 
express d i f ferences between related verbs. 
This is done by fi l l ing attr ibutes with 
certain values by default.  Such an 
attr ibute does not correspond to a 
const i tuent  of the sentence but is 'part' 
of the verb-sense,  e,g. 'gehen' (to go) 
is represented by the concept 
CHANGE OF LOCATION, 'laufen' (to run) 
addresSes-the same concept, but its 
attr ibute SPEED is filled by a d i f ferent  
value. 
Not all SSL entr ies are relevant to 
parser and generator - some entr ies are 
relevant to one process only. This should 
not be regarded as a disadvantage, on the 
contrary, such entr ies support ef f ic ient  
use of the SSL. Since each subsystem has 
its own typical way of interpret ing 
entr ies (LS and RS), process-spec i f ic  
entr ies are simply disregarded by the 
other system. 
B. Evaluat ion of the SSL 
Parser and generator treat the 
entr ies in the SSL as product ion-ru les ,  
each interpret ing LS and RS in its own 
way. The parser works from LSs to RSs 
whereas the generator works in the 
opposite direct ion.  
i. Parsin@ 
The parser needs to map 
sur face-const i tuents  onto elements of the 
semantic net. To produce the semantic 
representat ion of an input word the parser 
accesses the SSL entry of this word. For 
each word there may be several word-sense 
entries. The LSs of all word-sense 
entr ies for a word incorporate the 
information necessary to d ist inguish one 
sense from the others. The parser 
interprets the LSs as condit ions that have 
to be fulf i l led by the input sentence. 
The SSL contains at least one pair LS - RS 
for each word-sense. In order to choose 
the correct interpretat ion the LSs of the 
di f ferent word-senses are evaluated. 
After the parser has chosen a word-sense 
by matching sentence-patterns and 
LS-condit ions the associated RSs are 
interpreted as act ions and evaluated 
sequential ly.  For the parser the 
structures in the RS are interpreted as 
representat ion of the word, therefore the 
indicated net-structures are 
individual ized.  The complete structure 
that has been created after all RSs have 
been executed is used as the 
representat ion of the input-word. 
Verb-entr ies  for example speci fy  
the relat ion between surface const i tuents  
and the cases which are attr ibutes of the 
action concept. Each verb-sense cal ls for 
a typical sentential  pattern in which each 
const i tuent  has to fulfil certain semantic 
restr ict ions.  The parser selects a 
verb-sense if the features of const i tuents  
in the const i tuent  list sat isfy the 
condit ions of the LSs. After having 
selected one word-sense its RSs are 
evaluated and the const i tuents are l inked 
to the act ion as case-f i l lers.  
The parser uses the SSL entr ies 
to d isambiguate verbs. The LSs 
incorporate the factors by which 
word-senses can be d iscr iminated from each 
other. For many verbs the select ional  
restr ict ion of the direct object  is a 
decis ive factor. E.g. the verb 
'bekommen' (to get) is interpreted as 
OBJTRANS iff the semantic restr ict ion of 
the direct  object belongs to the class 
OWNABLE-OBJECT (see Fig. i). The 
mechanisms by which disambigua tion is 
carr ied out if the LS is not met is 
explained elsewhere \[10\]. 
(BEKOMMEN 
(i 
\[(AND (CASE ACC) 
(RESTR OWNABLE-OBJECT))  
((IND OBJTRANS) 
(VAL + OBJECT *))\] 
\[ (T (CASE NOM)) 
----> 
((VAL + RECIPIENT *))\] 
\[(AND (PP VON) 
(RESTR PERSON INSTITUTION)) 
((VAL + SOURCE *))\])) 
Fig. 1 
SSL entry for 'bekommen', word-sense- i  
('to get an object') 
When the parser analyses the 
sentence 'Hans bekommt von dieser Frau ein 
Buch.' (John gets a book from this woman.) 
there are three const i tuents  on the 
const i tuent  list. 
98 
Interpretat ion of the first pair 
of the entry for bekommen-i  leads to the 
instant iat ion of the root concept OBJTRANS 
(RS: (IND OBJTRANS)) and the creat ion of 
the value OBJECT fil led by the 
representat ion of book. 
The parameter '+' refers to the 
root individual fo r  all pairs of the 
word-sense entry. For the parser the 
parameter '*' in the SSL refers to the 
representat ion of the const i tuent selected 
by the LS which is local to one pair. 
The second pair leads to the 
instant iat ion of the value RECIPIENT 
filled by the representat ion for 'Hans' 
and the third one f inally instant iates 
SOURCE fil led by the representat ion of 
'Frau'. The resulting representat ion of 
the sentence is shown in Fig. 2. 
ect / ~ u r c e  
/~rec ip ient  
name 
Fig. 2 
Net structure for 
'Hans bekommt yon dieser Frau ein Buch.' 
Act ion primit ives typical ly have 
an AGENT and an OBJECT attr ibute. In most 
cases their surface equivalents are 
subject and direct object respectively.  
Therefore it would be redundant to include 
these relat ions for every verb. In these 
cases only the root concept is given in 
the RS (see Fig. 3). The mapping is 
carried out by default  mechanisms which 
are applied whenever the LSs do not refer 
to subject or direct object. 
(ESSEN 
(i 
\[(T) - ->(( IND INGEST))\])) 
Fig. 3 
SSL entry for 'essen' , word-sense- i  
('to eat') 
In the default  cases the 
select ional  restr ict ions are checked 
implicit ly. The net does not al low 
instant iat ion of structures that do not 
correspond to the patterns given in the 
generic concepts. If this occurs e.g. in 
the sentence 'He will eat his hat.' an 
error-message is generated because the 
semantic concept for 'hat', GARMENT, is 
not compat ib le with the restr ict ion 
SUBSTANCE for the OBJECT of the concept 
INGEST. At this stage of development we 
do not loosen selectional restr ict ions as 
suggested by Wilk 's preference semantics 
\[12\]. 
2. Generator  
When generat ing a sentence, the 
generator  starts by regarding the root 
node which has been passed to it by the 
dialogue component. Normally, this root 
node will, together with the attr ibutes 
attached to it, correspond to a verb, so 
this verb is selected first. As ment ioned 
above, a d iscr iminat ion net is used to 
accomplish this task. The DN selects a 
verb-sense according to the attr ibutes of 
the root node. 
We will show the further 
processing by means of the example shown 
in Fig. 2. Let us assume the verb-sense 1 
of the verb 'bekommen' (Fig. I) has 
already been selected. The entr ies of the 
SSL are treated from right to left by the 
generator,  so we start with (IND 
OBJTRANS). This will result in a null 
action for the generator,  as an instance 
of OBJTRANS (OBJTRANS-II) is a lready known 
as current root node and it has been put 
as first element onto the stack for the 
current individual.  (VAL + OBJECT *) is 
considered next. + denotes the root node, 
* the~ individual attached to that role of 
it which is specif ied by the second 
parameter,  i.e. OBJECT. This element, 
namely BOOK-4, is put on the stack. 
Now the generator proceeds with 
the LS: (CASE ACC) is a recursive call to 
the generator  with the current individual,  
BOOK-4, as new root node together with the 
information that the result shall bear 
accusat ive case endings. The generator  
processes the DN for the concept 'BOOK' 
and returns 'Buch'. This lexeme together 
with the case information now forms part 
of the IMS. After having processed the 
current individual BOOK-4, it is removed 
from the stack. The action (RESTR 
OWNABLE OBJECT) results in a no-op for the 
generat~r,  as this information has already 
been processed in the DN when deciding to 
use the verb-sense 'bekommen-l'  (see 
below). 
The second RS-LS-pair is treated 
in a similar way: The individual attached 
99 
to RECIPIENT is put on the stack, (CASE 
NOM) calls the generator with PERSON-9 as 
new root node and says that the resultant 
structure shall be rendered as a 
nominat ive.  The DN of PERSON suppl ies the 
information that persons are best 
specif ied by their names (if present in 
the net - if not, other cr i ter ia are 
considered) , and so the word 'Hans' 
completes the structure being passed to 
the IMS. 
As for the last 
test -act ion-pair ,  Pp causes a 
preposit ional  phrase, 'yon der Frau', to 
be created. In German, the preposi t ion 
'yon' implies dative case, so no 
addit ional  entry (CASE DAT) is required in 
the SSL. (Note that this omiss ion enables 
the parser to ignore case errors in the 
input sentence that do not inf luence the 
semantics.) 
3. Creat ing Discr iminat io  n Nets 
So far, the use of the SSL has 
been demonstrated only part ial ly:  in the 
example above some of the e lements in RSs 
and LSs have been treated as no-ops, 
especia l ly  INDIV and RESTR. These 
elements, instead of being used in the 
process of generat ion,  provide information 
for bui lding data structures for the 
generator,  namely the above ment ioned DNs. 
AS an example, consider the 
entry for 'bekommen' (Fig. i), (INDIV 
OBJTRANS) informs us about a 
correspondence between the concept 
OBJTRANS and the verb-sense 'bekommen-l '  
This correspondence leads to the 
incorporat ion of 'bekommen-l '  as a leaf 
node in the DN for the concept OBJTRANS. 
Other clues for construct ing the DNs are 
provided by the VALs, thus giving them a 
double usage: (VAL + RECIPIENT *) in the 
SSL entry for 'bekommen-l'  (Fig. i) 
implies that an individual attached to the 
RECIPIENT role of an OBJTRANS individual 
is a prerequis i te for selecting this 
verb-sense. (The absence of a recipient 
in the net would lead to the select ion of 
'weggeben' (to give away).) 
III SUMMARY 
We have shown how a lexicon that 
includes syntactic and semantic 
information has to be structured to al low 
eff ic ient use by two processes, parser and 
generator.  Whereas both must have access 
to knowledge about syntax as well as 
representat ion,  their starting posi t ion 
differs: The parser is confronted with 
surface expressions,  therefore LSs are 
evaluated first. The generator  has to 
process net structures, so it begins by 
evaluating RSs. The reciprocal relation 
between analysis  and synthesis is real ized 
in the SSL by pair ing off LSs and RSs. 
F lex ib i l i ty  is insured by the fact that 
parser as well as generator  treat LS and 
RS each in an idiosyncrat ic way. 
ACKNOWLEDGEMENTS 
This research was sponsored by the 
Austr ian 'Fonds zur Foerderung der 
wissenschaf t l i chen Forschung',  grant no 
4158 (supervision Robert Trappl).  
REFERENCES 
\[s\] 
\[i\] Boguraev B.K.: Automatic Resolut ion 
of L inguist ic Ambiguit ies,  Univ. of 
Cambridge,  Comp. Laboratory, TR-II ; 
1979. 
\[2\] Brachman, R.J.: A Structural 
Paradigm for Representing Knowledge,  
Bolt, Beranek and Newman; 1978. 
\[3\] Buchberger E., Steinacker I., Trappl 
R., Trost H., Leinfel lner E.: 
VIE-LANG - A German Language 
Understanding System, in: Trappl 
R.(ed.) ,  Cybernet ics and Systems 
Research, North Holland, Amsterdam; 
1982. 
\[4\] F i l lmore C.: The Case for Case, in: 
Bach E., Harms R.T. (eds.) : Uni- 
versals in Linguist ic Theory, Holt, 
R inehart  & Winston, New York, 1968. 
Goldman N.M.: Computer Generat ion of 
Natural Language from a Deep 
Conceptual  Base, Stanford AI Lab Memo 
AIM-247; 1974. 
\[6\] Horacek H.: Generierung im System 
VIE-LANG: L inguist ischer Teil,  
TR 83-04, Dept. of Medical  
Cybernet ics,  Univ. of Vienna, 
Austr ia;  1983. 
\[7\] Riesbeck, C.K. and Schank, R.C.: 
Comprehens ion by Computer:  
Expectat ion-based Analysis  of 
Sentences in Context, Yale Univ., 
RR-78; 1976. 
\[8\] Schank R.C.: Conceptual Information 
Processing, North-Hol land,  Amsterdam; 
1975. 
\[9\] Steinacker I., Trost H., Leinfel lner 
E. : Di sambiguat ion in German, in: 
Trappl R. (ed.), Cybernet ics  and 
Systems Research, North Hol land, 
Amsterdam; 1982. 
\[10\] Steinacker I., Trost H.: Structural  
Relat ions - A Case Against Case, 
Proceedings of the IJCAI 83, 
Karlsruhe, 1983. 
\[ii\] Trost H.: Erstel len der inhalt l ichen 
Komponenten eines Semant ischen 
Netzes, TR 81-03, Dept. of Medical 
Cybernet ics,  Univ. of Vienna, 
Austria; 1983. 
\[12\] Wilks Y.: Making Preferences more 
Active, University of Edinburgh, 
D.A.I., RR-32,1977. 
i00 
