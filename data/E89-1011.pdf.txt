THE ORGANIZATION OF THE ROSETTA GRAMMARS 
Jan Odijk 
Philips Research Laboratories, P.O. Box 80.000 
5600 JA Eindhoven, The Netherlands 
ABSTRACT 
In this paper the organization of the gram- 
mars in the Rosetta machine translation system 
is described and it is shown how this organization 
makes it possible to translate between words of dif- 
ferent syntactic ategories in a systematic way. It 
is also shown how the organization chosen makes it 
possible to translate 'small clauses' into full clauses 
and vice versa. The central concept worked out 
here in some detail is the concept of 'partial iso- 
morphy'  between subgrammars. The system as de- 
scribed here has been implemented and is currently 
being tested. 
1 ROSETTA 
In this section I will mention some essential prop- 
erties of the Rosetta machine translation system. 
For more extensive descriptions of this system I
refer to Landsbergen(1987), Appelo & Landsber- 
gen(1986), Appelo, Fellinger & Landsbergen(1987) 
and Leermakers & Rous(1986). 
The Rosetta machine translation system is an 
interlingual machine translation system based on 
Montague Grammar and developed at Philips Re- 
search Laboratories in Eindhoven for Dutch, En- 
glish and Spanish. The grammars used in Rosetta 
are computational variants of Montague Grammar 
and are called M-grammars. 
Rules in M-grammars, called M-rules, operate 
on syntactic surface trees. If a certain string str is 
associated with a syntactic tree of category C the 
notation C(str) will be used. 
An M-grammar in Rosetta is subdivided into a 
number of subgrammars. Each subgrammar is a 
rule package and is defined by specifying a head 
(the category of a designated argument from the 
import for the subgrammar), export (the categories 
of the syntactic trees yielded by the subgrammar) 
and a control expression that indicates in which 
order M-rules must be applied. 
In Rosetta31 a distinction is made between 
meaningful M-rules, called rules (that correspond 
to a meaning operation), and meaningless rules, 
called transformations (that do not correspond to 
a meaning operation). 
M-grammars are reversible. Because of this fact, 
the translation relation between two sentences can 
be illustrated by showing their derivations ill gen- 
eration. The example derivations below will be 
restricted to generation only. 
Within the Rosetta system the grammars of the 
relevant languages are attuned to one another, 
in such a way that two sentences that are each 
other's translation can be derived starting from 
corresponding basic expressions by applying COlTe- 
sponding rules in the same way for both sentences. 
'Corresponding' here means: 'corresponding to the 
same meaning operation or basic meaning', and it 
holds of meaningful M-rules only. 
M-grammars attuned in this way are called iso- 
morphic grammars, and therefore the method of 
translation used is called the isomorphic grammar 
approach to machine translation. 
2 CATEGORIAL  
MISMATCHES 
In order to derive simple sentences e.g. Ziet hi 3" de 
manf one could design a grammar of Dutch that, 
starting with a basic verb (zie) applies rules to de- 
rive the sentence mentioned. One could have rules 
combining a basic verb with arguments that it al- 
lows or requires (hij, de mart) in a sentence, rules 
that determine the tense of this sentence (present 
tense) and rules that determine 'mood'  and real- 
...... ÂThe.pap-er-d-ea~-with the grammars in the third version 
of the Rosetta system, Rosetta3. 
- 80 - 
ize the sentence accordingly ( in this case yes-no- 
question, main clause, realized by the order verb- 
subject-object}, etc.. 
In order to derive the English sentence Does he 
see the manf  as a translation of this Dutch sen- 
tence it would be required to design a grammar 
of English isomorphic to the grammar of Dutch 
sketched above. There must be a rule combining a 
verb (see} with its arguments (he, the man}. There 
must be rules determining tense and aspect (simple 
present tense in the example sentence), and there 
must be rules that determine 'mood' and realize 
the sentence accordingly (yes-no- question, main 
clause, realized by introducing the auxiliary verb 
do and the order do-subject-verb-object}, etc.. 
In this simple example the syntactic categories of 
the Dutch word zien and its translation into En- 
glish see are the same. For these cases isomor- 
phic grammars can be developed rather straight- 
forwardly. 
However, machine translation systems must be 
able not only to translate between words of the 
same category, but also to translate between words 
of different syntactic categories. Some examples 
where a translation between words of different cat- 
egories is required or desirable are given in the fol- 
lowing table: 
hij zwemt graag (Adv} 
he likes to swim (Verb} 
hij is toevallig ziek (Adv) 
he happens to be ill (Verb} 
het mist (Verb} 
it is foggy (Adj) 
hij schaamt zich ervoor (Verb} 
He (_Adj.! . . . . . . . .  
hij is mij 3 gulden schuldig (Adj) 
He owes me 3 guilders (Verb} 
hij is in A'dam woonaehtig (Adj) 
He resides in Amsterdam (Verb} 
Het is voldoende (Adj} 
The Rosetta grammars nmst be able to deal with 
such cases in a systematic way. 
It must also be possible to translate 'small 
clauses' into full clauses (finite or infinite) and vice 
versa. 'Small Clauses' are propositional units in 
which a subject-predicate relationship is expressed 
and which are not marked for tense and aspect (cf. 
Stowell (1981)). Some examples of full clauses and 
their corresponding 'small clauses' are given in the 
following table: 
'Full Clauses' 
Verb 
Adj 
Prep 
Adv 
Noun 
He killed a man 
He is intelligent 
He is against he deal 
He is here 
He is a fool 
'Small Clauses' 
Verb 
Adj 
Prep 
Adv 
Noun 
I had the man killed 
I consider him intelligent 
We got him against the deal 
We got him here 
They consider him a fool 
Small clauses can occur only as complements 
within a clause. The fact that they are not marked 
for tense and aspect is reflected in the absence of 
auxiliary and copular verbs. If the grammar al- 
lows for translation of clauses into small clauses 
and vice-versa, then it becomes possible to derive 
e.g. he seems ill and hii schiint ziek te zijn (lit. 
he seems to be ill as translations of each other. It 
is sometimes requh'ed to be able to translate small 
clauses into full clauses in some cases. The En- 
glish sentence he seems ill cannot be translated 
into Dutch *hi i schiint ziek, which is ungrammat- 
ical, but umst be translated into hi\] schi\]nt ziek te 
zijn ( he seems to be ill) or into bet schiint dat hi i
ziek is (it seems that he is ill}. 
3 GRAMMAR ORGANI -  
ZAT ION 
The global organization of the grammars (leaving 
transformations out of consideration) is the same 
for all languages, as is required by the isomorphic 
method. 
The grammars are subdivided into five proiec- 
tion subgrammars ~, one for each major category 
(Verb, Noun, Prep, Adj, Adv). 3 
Each of these projection subgrammars consists 
of a number of subgrammars. The partitioning of 
projection subgrammars into subgrammars i  mo- 
tivated by the fact that it must be possible to use 
tile output of each subgrammar as import to sub- 
grammars of other projection subgrammars. 
A schematic representation of the paxtitioning 
of a projection subgrammar into subgrammars i
2These are called subgrammars in Appeio, Fellinger & 
Landsbergen(1987) 
3Apart from these subgrammars there is also a projection 
subgrammar to derive simple NPs, which is not partially 
isomorphic to the other projection subgrammars. 
-81  - 
given in figure 1, where X is a variable over the 
major syntactic ategories. A projection subgram- 
mar is a set of subgrammars that define a projec- 
tion for a given category X. A projection of some 
category X is a syntactic structure headed by X. 
Each projection subgrammar is bifurcated as in- 
dicated in figure 1. If the rules and transforma- 
tions in the XPPtoGLAUSE and CLAUSEtoSEN- 
TENCE subgrammars are applied a full clause is 
derived. If the rules and transformations of the 
XPPtoXPFORMULA (XPPtoXPF) and XPFOR- 
MULAtoXPP (XPFtoXPP) are applied a 'small 
clause' is derived. 
The projection subgrammars are partially iso- 
morphic to one another, which makes it possible 
to translate a subset of constructions from one 
projection subgrammar into constructions from 
some other projection subgrammar. Furthermore 
the XPPtoXPF subgrammars are partially isomor- 
phic to the XPPtoCLAUSE subgrammars, and 
the XPFtoXPP subgramlnars are partially isomor- 
phic to the CLAUSEtoSENTENGE subgrammars. 
This makes it possible to translate a subset of full 
clauses into 'small clauses'. 
The subgrammars are partially isomorphic to 
one another instead of fully isomorphic, because 
for certain full clauses no corresponding small 
clauses exist (e.g. there is no 'small clause' cor- 
responding to the full clause Is he Jill). 
BX 
derivation 
\] XPP I 
formation I . . . . . . .  I 
to ix Pf 
CLAUSE I XPF 
1 ,l 
CLAUSE to XPF to 
SENTENC~ XPP 
Figure 1: The global organization of the Rosetta 
projection subgrammars. X is a variable ranging 
over the major syntactic ategories 
The subgrammars indicated in figure 1 will be 
discussed in more detail now. 
X-Der ivat ion subgrammar  deals with deriva- 
tion and composition 
XPPformat ion  In this subgrammar the argu- 
ment structure and the syntactic realization 
of arguments (whether they are subject, ob- 
ject, prepositional object, etc.) is accounted 
for. Voice (active, passive) is determined in 
this subgrammar. 
XPPtoCLAUSE When this subgrammar is ap- 
plied a full clause will be derived. In the sub- 
grammar propositional complements and ad- 
verbials are introduced, tense and aspect is 
determined and auxiliaries are introduced ac- 
cordingly. There are several transformations 
in this subgrammar to deal with the proper 
incorporation of propositional units into the 
structure, e.g. transformations dealing with 
control phenomena, nd transformations deal- 
ing with the proper positioning of verbs (es- 
pecially in Dutch). 'Hidden' arguments, e.g. 
nonovert by-phrases in passives, are dealt with 
here. 
XPPtoXPF  When this subgrammar is applied a 
'small clause' will be derived. The XPPtoXPF 
subgrammars are partially isomorphic to the 
XPPtoCLAUSE subgrammars, hence they 
contain similar corresponding rules. They 
contain rules introducing propositional com- 
plements, rules determining tense and aspect 
(which is considered to be present though 
dependent upon superordinate clauses) and 
rules dealing with hidden arguments. 
CLAUSEtoSENTENCE In this subgrammar 
nonpropositional rguments are introduced 
and scope of quantificational expressions i ac- 
counted for. Furthermore the 'mood' of a sen- 
tence is determined, i.e. it is decided whether 
it is going to be a declarative, interrogative, 
relative etc. clause. 
XPFtoXPP  This subgrammar is partially iso- 
morphic to the GLAUSEtoSENTENCE sub- 
grammars. It contains rules to introduce non- 
propositional arguments and to account for 
scope. There are 'mood' rules determining 
whether the XPP is 'closed' (i.e. there are no 
free variables left in the structure), or 'open', 
(i.e. the subject variable is free). 
- 82  - 
4 ILLUSTRATIONS 
The global organization of the grammar will be 
illustrated here by showing the derivation pro- 
cesses of certain examples involving a categorial 
mismatch and of some examples of translations 
from 'small clauses' into full clauses or vice versa. I 
repeat that only the generative part of the deriva- 
tion need be demonstrated given the reversibility 
of the grammars. Furthermore only the correct 
derivation paths through the grammar will be il- 
lustrated, though in reality many false paths, i.e. 
paths through the grammar that do not lead to an 
actual sentence, are chosen by the grammar. 
Since M-grammaxs are reversible it possible to 
'translate' from e.g. Dutch into Dutch. In this way 
Rosetta functions as a paraphrase generator. Be- 
cause of this, the partial isomorphy between two 
projection subgrammars can (and will) be illus- 
trated by showing the parallel derivation of two 
paraphrases in generation. 
In subsection 4.1 the derivation of hi\] schaamt 
zich ervoor and he is ashamed of it will be illus- 
trated. 
In subsection 4.2 the derivation of I find him 
intelligent and I find that he is intelligent will be 
illustrated. 
In subsection 4.3 the derivation of he seems in- 
telligent, he seems to be intelligent and it seems 
that he is intelligent as paraphrases of one another 
will be illustrated. 
In subsection 4.4 the derivation of de op haar 
verliefde man and de man die op haar verliefd is 
as paraphrases of one another will be illustrated. 
In subsection 4.5 the derivation of hi\] zwemt 
graag and he likes to swim will be illustrated. 
4.1 Adjective-Verb 
The derivations of hi\] schaamt zich ervoor (lit. he 
ashamed himself therefor) and its translation he is 
ashamed of it run as follows. The verb schamen 
is a two place verb so that it can be combined 
with two variables, zl and ~,  in the VPPforma- 
tion subgrammar yielding VPP(xl x2 schaam}. In 
the English grammar, the adjective ashamed is also 
combined with two variables in the ADJPPfor- 
mation subgrammar, yielding ADJPP(zi ashamed 
z2}. The Dutch verb schamen must realize its sec- 
ond argument as a prepositional object with the 
preposition voor. The English adjective ashamed 
must realize its second argument as a prepositional 
object as well, though headed by the preposition of. 
Pattern transformations axe applied to yield this 
effect: VPP(zl voor r¢ schaam} and ADJPP(z i  
ashamed of z2). 
Ill the VPPformation snbgrammar a Voice-rule 
applies determining that the structure is in active 
voice. In the ADJPPformation subgrammax a cor- 
responding rule applies which has no visible effects. 
In Dutch a transformation spelling out a reflex- 
ive pronoun must apply, since the verb schamen 
is a so-called inherently reflexive verb. This yields 
VPP(zi zieh voor x2 schaam). Since spelling out 
these reflexive pronouns is achieved by transfor- 
mations, no corresponding M-rule need apply in 
English. 
These structures are both input to the XPPto- 
CLAUSE subgrammar where they are turned into 
clauses. In Dutch this yields CLAUSE(zi zieh soor 
z2 schaam). In English the copula be is introduced, 
yielding OLAUSE(zi be ashamed of x2}. Tense and 
aspect rules are applied in both cases, putting the 
structures in present ense, yielding OLAUSE(xi 
zich voor x2 schaamt) and OLAUSE(zx is ashamed 
of ~). 
Substitution rules substitute the NPs her and 
it respectively for the variables z2 and the NPs 
hi\] and he respectively for the variables zt. This 
yields in English OLAUSE(he  is ashamed of it) and 
in Dutch OLAUSE(hi j  zich voor het schaamt). An 
obligatory transformation turns voor het in Dutch 
into ervoor. 
Mood rules are applied in Dutch and in En- 
glish. The clauses are turned into declarative main 
clauses. In English this yields SENTENCE(he  
is ashamed of it} and in Dutch this yields SEN- 
TENCE(hi j  zich ervoor schaamt}. Application of 
the transformation putting the finite verb in 'sec- 
ond' position and application of an obligatory topi- 
calization transformation in Dutch yield the actual 
sentence Hij schaamt zich ervoor. 
4.2  Adjective-declarative 
with main verb 
c lause  
The parallel derivations of I find him intelligent 
and I find that he is intelligent run as follows. 
In the ADJPPformation subgrammar the adjective 
intelligent is combined with a variable zi yielding 
ADJPP(zi intelligent) This ADJPP can be turned 
either into a clause yielding OLAUSE(zi be intel- 
ligent) (ill tlle XPPtoOLAUSE subgrammax) or it 
can continue as an adjectival construction (in the 
ADJPPtoADJPF  subgrammar). Tense and As- 
pect rules determine that the tense of this con- 
struction is dependent on the tense of a superor- 
dinate construction yet to be formed. A substitu- 
- 83  - 
tion rule substitutes the NP  containing he for zl 
yielding ADJPF{ he intelligent) and CLAUSE{he 
is/was intelligent} respectively. Finally Mood rules 
determine the way the clause and the ADJPF 
are realized. The mood rule forming subordi- 
nate declarative clauses is mapped onto the mood 
rule forming 'closed' ADJPPs (CADJPP). Apply- 
ing these mood rules yields SENTENCE{that he 
is/was intelligent) and CADJPP(he intelligent). 
These results can be used later in the derivation 
as arguments to the verb .find. 
To derive the rest of the structures the verb find 
is combined with two variables (z2, x3 ) yield- 
ing VPP{x2 find z3). The substructures built 
earlier can be substituted for x3 yielding VPP(  
x2 find he intelligent) and VPP(zz find that he 
is/was intelligent) respectively. After turning 
these VPPs into clauses and applying tense and as- 
pect rules (putting the sentences ill present ense) 
the tense of the subordinate clause can be deter- 
mined. This yields CLAUSE(z2 find he intelligent} 
and CLAUSE(z2 find that he is intelligent). Ap- 
plying a case-assignment transformation a d sub- 
stituting the NP(I) for ~ yields CLAUSE(/find 
him intelligent} and CLAUSE{/find that he is in- 
telligent} respectively. Applying a mood rule that 
turns these clauses into declarative main clauses 
yields the actual sentences. 
4.3  Ad jec t ive -dec la ra t ive  c lause  
with copula 
The derivations of he seems intelligent, he seems 
to be intelligent and it seems that he is intelli- 
gent starts in the same way as in the preceding 
section. A CADJPP(he intelligent) and a SEN- 
TENCE(that he is/was intelligent} are generated. 
In addition to the mood rule forming finite declar- 
ative subordinate sentences a nmod rule forming 
'closed' infinite declarative subordinate sentences 
containing to call be applied. This rule forms 
the SENTENCE(he to be intelligent) out of the 
CLAUSE(he be intelligent ). 
These results can be used as arguments to tile 
verb seem. In the VPPformation subgrammar a 
VPP(seem z2) is formed from the verb seem and 
the variable z2. The SENTENCEs  and the CAD-  
JPP  obtained earlier are substituted for the vari- 
able x2. This yields the structures VPP(seem he 
intelligent}, VPP(seem that he is/was intelligent} 
and VPP(seem he to be intelligent} respectively. 
A transformation turns the subject of embedded 
infinitival complements of verbs such as seem into 
the subject of seem, and the NP(it} is inserted as 
a subject of the verb seem if it has a finite com- 
plement. After determining tense and aspect and 
applying a subject-verb agreement transformation 
this yields the structures CLAUSE(he seems in- 
telligent), CLAUSE(it seems that he is intelligent) 
and CLAUSE(he seems to be intelligent} respec- 
tively. Applying the mood rule forming declarative 
main clauses yields the actual sentences. 
In tile grammar of Dutch parallel derivations can 
be made. The CADJPP(hff intelligent) (cf. he in- 
telligent} and tile SENTENCEs dat hij intelligent 
is/was and hi3" intelligent e zijn (cf. that he is/was 
intelligent and he to be intelligent resp.) can be de- 
rived. 
Some of these results can be used as arguments 
to the verb sehijnen 'seem'. In the VPPforma- 
lion subgrammar the verb sehijnen is combined 
with the variable z¢ into a VPP(z~ sehijn). The 
SENTENCEs obtained earlier can be substituted 
for this variable, but tile CADJPP(h/j intelligent) 
cannot, because the Dutch verb sehijnen does not 
take CADJPPs as a complement. 
Tile derivation continues with the two results 
VPP( dat hij is~was intelligent schffn) and VPP(h/j 
intelligent te zijn schijn}. Application of several 
transformations to deal adequately with such com- 
plements in Dutch (Verb-raising and extraposition 
(in tile sense of Evers(1975)), subject-to-subject- 
raising and some others) and application of tense 
and aspect rules yields CLAUSE(her schijnt dat hij 
intelligent is) and CLAUSE{hij intelligent sehijnt 
te zijn) respectively. 
Application of mood rules forming declarative 
main clauses and some obligatory transformations 
in Dutch yields tile actual sentences Het sehijnt 
dat hij intelligent is and Hi\] sehijnt intelligent te 
zijn as translations oftile English sentences derived 
earlier. 
4.4  Adjective-relative clause 
The derivations of (de) op haar verliefde (man) 
(the man in love with her) and (de man) die op 
haar verliefd is (the man that is in love with her) 
runs as follows. 
The adjective verliefd 'in love' is a two-place 
adjective that is combined with two variables xl 
and x¢ in tile ADJPPformation subgrammar. This 
yields a structure of the form ADJPP(xl verlie\[d 
~). The adjective verliefd must realize its second 
argument (z2) as a prepositional object that can 
occur in front of the adjective. Pattern transfor- 
mations introduce the preposition required, yield- 
ing ADJPP(sl op z~ verliefd ). 
- 84  - 
This ADJPP  can be turned into a clause, or it 
can be turned into an adjectival phrase. The XP- 
PROPtoGLAUSE subgrammar changes the struc- 
ture mentioned in the following way: OLAUSE(z l  
op z2 verliefd zi3"n), where the top category has 
been turned into CLAUSE and tile copula zi3"n 'be' 
has been introduced. To form all adjectival phrase 
the ADJPP  is input to the XPPtoXPF  subgram- 
mar, yielding ADJPF(zl  op ~ verliefd). In both 
subgrammars tense and aspect rules apply. 
In the CLAUSEtoSENTENCE subgrammar a
transformation is applicable that moves the sub- 
ject variable zl into a position where normally rel- 
ative pronouns would appear. In this particular 
structure this has no effects on the hft-right order, 
but the relation that zl bears is changed. 
In the CLAUSEtoSENTENGE subgramlnar and 
in the ADJPFtoADJPP subgrammar the NP(zij) 
'she' is substituted for variable ~ and the appro- 
priate Case form (accusative) is assigned to it. 
This yields CLAUSE(z~ op haar verliefd is/was) 
and ADJPP(zi  op haar verliefd). 
Finally Mood rules turn tlle ADJPP into an 
'open' ADJPP (OADJPP} yielding OADJPP(zl  
op haar verliefd}, and they turn the CLAUSE into 
a relative subordinate clause: SENTENGE(zl op 
haar verliefd is). These structures can be used by 
rules in the NP-subgrammar that introduce these 
structures as modifiers and bind variable zl. 
4.5  Graag- l i ke  
In the Dutch sentence hij zwemt graag the adverb 
graa9 appears. This adverb must be mapped onto 
the English verb like in the translation he likes to 
swim. 
It is assumed that the Dutch adverb graa9 is a 
two place-function. This is required in Rosetta, be- 
cause its translation like is a two-place function 4. 
However, apart from being required in Rosetta, it 
is also plausible for independent reasons that 9raa9 
is a two-place function: the adverb 9raag imposes 
selectional restrictions upon the subject of the sen- 
tence it appears in (cf. fhet regent 9raag or fde 
steen valt graag, which are as odd as their English 
counterparts fit likes to rain and fThe stone likes 
to fall). If we assume that predicates impose sehc- 
tional restrictions only upon their arguments, then 
it must be the case that the subject of the sentence 
is an argument of 9raag, or that the argument of 
4This contrasts with the approach in the Eurotra frame- 
work, where this requirement does not hold. See Arnold et. 
aL (19as) 
9raag is coindexed with the subject of tile sentence. 
I will assmne tlle latter. 
Starting with the subordinate infinitival clause 
in English, we combine the verb swim, which takes 
one argument, with a variable zl as its subject, 
yielding: VPP(zl swim) Similarly in the Dutch 
grammar the translation of swim, zwem, is com- 
bined with zl: VPP(zl zwem) Ill tile VPPfor- 
mation subgrammar the voice rule to form active 
clauses is applied. 
After tile VPPformation subgrammar the 
derivation continues in tile XPPtoGLAUSE sub- 
grammar. All M-ruh to make the sentence infini- 
tival is applied. Corresponding rules are applied in 
the XPPtoCLAUSE subgrammar of Dutch. 
In the GLAUSEtoSENTENCE subgrammar no 
arguments are substituted. In English a rule is ap- 
plied that makes the clause all infinitival subordi- 
nate clause containing to and containing a free vari- 
able in subject position which will later be subject 
to control transformations. This yields a structure 
of the form SENTENGE(z l  to swim) 
In Dutch a corresponding rule is applied that 
makes the clause all infinitival subordinate clause 
without te with a free variable in subject posi- 
tion. This yields the following structure in Dutch: 
SENTENCE(zx  zwemmen) These structures will 
be used later on. 
In the VPPformation subgrammar of English 
the two-place verb like is combined with two vari- 
ables, zl and x2. This yields: VPP(zi  like x2) The 
voice rule to form active sentences i applied. 
Correspondingly, in the ADVPPformation sub- 
grammar of Dutch tile adverb 9raa9 is combined 
with two variables, zl and za, and a voice rules is 
applied. This yields: ADVPP(zl 9raa9 z2} 
In the English subgrammar XPPtoCLAUSE tile 
sentential structure derived above is substituted 
for the variable x~, yielding: VPP(zi like \[ xl to 
swim\]} 
A control transformation deletes the second oc- 
currence of zl. Tense and aspect rules apply which 
turn the structure into a finite clause in present 
tense. 
In the Dutch subgrammar XPPtoCLAUSE the 
sentential structure derived above is substituted 
for the variable z¢ by a special rule that takes care 
of substitution of sentential complements into AD-  
VPPs. This special rule deletes the ADVPP node 
and replaces it by a VPP  node, turns the ADVP 
into a modifier inside this VPP, makes the VP  of 
SENT the VP  of this VPP, deletes the variable zl 
inside SENT and un-does the morphological effects 
of tense rules. This yields the structure: VPP(zl 
- 85  - 
AD VP(graag} zwem) 
These structures continue their normal deriva- 
tion. Tense and aspect rules apply, the NP ar- 
gument hij" (he) is substituted for st and the sen- 
tence is made into a declarative main clause, yield- 
ing in English: SENTENCE(he likes to swim) and 
in Dutch, after application of the transformation 
of 'Verb second' and an obligatory topicalization 
transformation: SENTENCE( hij zwemt graag) 
5 CONCLUSION 
It has been shown that the concept of partial iso- 
morphy between subgrammars makes it possible to 
translate between words of different syntactic at- 
egories and between 'small clauses' and full clauses 
in a systematic way. Furthermore, it has been 
shown that one of the most difficult cases of trans- 
lation between words of different categories, viz. 
the 9raa9/like translation probhm, can be reduced 
to having only one special rule, given partial iso- 
morphy between subgrammars. 
ACKN O WLED GEMENT S 
This paper is based on joint work being done in the 
Rosetta machine translation project. I would like 
to thank Lisette Appelo, Jan Landsbergen, Mar- 
greet Sanders and Andr6 Schenk for many valuable 
comments on earlier drafts of this paper. 
and Methodolooical Issues in Machine Trans- 
lation of Natural Lanouaoes, Carnegie Mellon 
University, Center for Machine Translation, 
Pittsburgh, Pennsylvania. 
Evers, A. (1975), The Transformational Cycle 
in Dutch and German, diss. University of 
Utrecht. 
Landsbergen, J. (1987), 'Isomorphic grammars 
and their use ill the Rosetta Translation Sys- 
tem', Philips Research M.S. 12.950, Paper 
presented at tile Tutorial on Machine Trans- 
lation, Lugano, 1984, in: M. King (ed.), Ma- 
chine Translation, the State of the Art, Edin- 
burg University Press. 
Leermakers, R. and J. Rous (1986), 'The Trans- 
lation Method of Rosetta', Philips Research 
M.S. 13.701, In: Computers and Translation, 
Vol 1, number 3, pp. 169-183. 
Stowell, T. (1981), Origins of Phrase Structure, 
Ph. D. dissertation, MIT. 
REFERENCES 
Appelo, L. , C. Fellinger and J. Landsber- 
gen (1987), 'Subgramlnars, Rule Classes and 
Control in the Rosetta Translation System', 
Philips Research M.S. 14.131, to appear in: 
Proceedings of 8rd Conference ACL, European 
Chapter. 
Appelo, L. and J. Landsbergen (1986), 'The Ma- 
chine Translation Project Rosetta', Philips 
Research M.S. 13.801, In: Proceedings First 
International Conference on the State of the 
Art in Machine Translation, Saarbriicken, pp. 
34-51. 
Arnold, D., S. Krauwer, L. des Tombe & L. Sadhr 
(1988), "Relaxed' Compositionality ill Ma- 
chine Translation', in: Proceedings of the Sec- 
ond International Conference on Theoretical 
- 86 - 
