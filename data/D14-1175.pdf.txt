Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 1676–1688,
October 25-29, 2014, Doha, Qatar.
c
©2014 Association for Computational Linguistics
Word Translation Prediction for Morphologically Rich Languages
with Bilingual Neural Networks
Ke Tran Arianna Bisazza Christof Monz
Informatics Institute, University of Amsterdam
Science Park 904, 1098 XH Amsterdam, The Netherlands
{m.k.tran,a.bisazza,c.monz}@uva.nl
Abstract
Translating into morphologically rich lan-
guages is a particularly difficult problem
in machine translation due to the high de-
gree of inflectional ambiguity in the tar-
get language, often only poorly captured
by existing word translation models. We
present a general approach that exploits
source-side contexts of foreign words to
improve translation prediction accuracy.
Our approach is based on a probabilistic
neural network which does not require lin-
guistic annotation nor manual feature en-
gineering. We report significant improve-
ments in word translation prediction accu-
racy for three morphologically rich target
languages. In addition, preliminary results
for integrating our approach into a large-
scale English-Russian statistical machine
translation system show small but statisti-
cally significant improvements in transla-
tion quality.
1 Introduction
The ability to make context-sensitive translation
decisions is one of the major strengths of phrase-
based SMT (PSMT). However, the way PSMT ex-
ploits source-language context has several limita-
tions as pointed out, for instance, by Quirk and
Menezes (2006) and Durrani et al. (2013). First,
the amount of context used to translate a given
input word depends on the phrase segmentation,
with hypotheses resulting from different segmen-
tations competing with one another. Another issue
is that, given a phrase segmentation, each source
phrase is translated independently from the oth-
ers, which can be problematic especially for short
phrases. As a result, the predictive translation of
a source phrase does not access useful linguistic
clues in the source sentence that are outside of the
scope of the phrase.
Lexical weighting tackles the problem of un-
reliable phrase probabilities, typically associated
with long phrases, but does not alleviate the prob-
lem of context segmentation. An important share
of the translation selection task is then left to the
language model (LM), which is certainly very ef-
fective but can only leverage target language con-
text. Moreover, decisions that are taken at early
decoding stages—such as the common practice
of retaining only top n translation options for
each source span—depend only on the translation
models and on the target context available in the
phrase.
Source context based translation models (Gim-
pel and Smith, 2008; Mauser et al., 2009; Jeong
et al., 2010; Haque et al., 2011) naturally ad-
dress these limitations. These models can ex-
ploit a boundless context of the input text, but
they assume that target words can be predicted in-
dependently from each other, which makes them
easy to integrate into state-of-the-art PSMT sys-
tems. Even though the independence assump-
tion is made on the target side, these models have
shown the benefits of utilizing source context, es-
pecially in translating into morphologically rich
languages. One drawback of previous research
on this topic, though, is that it relied on rich
sets of manually designed features, which in turn
required the availability of linguistic annotation
tools like POS taggers and syntactic parsers.
In this paper, we specifically focus on im-
proving the prediction accuracy for word transla-
tions. Achieving high levels of word translation
accuracy is particularly challenging for language
1676
pairs where the source language is morphologi-
cally poor, such as English, and the target lan-
guage is morphologically rich, such as Russian,
i.e., language pairs with a high degree of surface
realization ambiguity (Minkov et al., 2007). To
address this problem we propose a general ap-
proach based on bilingual neural networks (BNN)
exploiting source-side contextual information.
This paper makes a number of contributions:
Unlike previous approaches our models do not re-
quire any form of linguistic annotation (Minkov
et al., 2007; Kholy and Habash, 2012; Chahuneau
et al., 2013), nor do they require any feature en-
gineering (Gimpel and Smith, 2008). Moreover,
besides directly predicting fully inflected forms
as Jeong et al. (2010), our approach can also
model stem and suffix prediction explicitly. Pre-
diction accuracy is evaluated with respect to three
morphologically rich target languages (Bulgarian,
Czech, and Russian) showing that our approach
consistently yields substantial improvements over
a competitive baseline. We also show that these
improvements in prediction accuracy can be ben-
eficial in an end-to-end machine translation sce-
nario by integrating into a large-scale English-
Russian PSMT system. Finally, a detailed analysis
shows that our approach induces a positive bias on
phrase translation probabilities leading to a better
ranking of the translation options employed by the
decoder.
2 Lexical coverage of SMT models
The first question we ask is whether translation
can be improved by a more accurate selection of
the translation options already existing in the SMT
models, as opposed to generating new options.
To answer this question we measure the lexical
coverage of a baseline PSMT system trained on
English-Russian.
1
We choose this language pair
because of the morphological richness on the tar-
get side: Russian is characterized by a highly in-
flectional morphology with a particularly complex
nominal declension (six core cases, three genders
and two number categories). As suggested by
Green and DeNero (2012), we compute the re-
call of reference tokens in the set of target to-
kens that the decoder could produce in a trans-
lation of the source, that is the target tokens of
all phrase pairs that matched the input sentence
1
Training data and SMT setup are described in Section 6.
and that were actually used for decoding.
2
We
call this the decoder’s lexical search space. Then,
we compare the reference/space recall against the
reference/MT-output recall: that is, the percent-
age of reference tokens that also appeared in the
1-best translation output by the SMT system. Re-
sults for the WMT12 benchmark are presented in
Table 1. From the first two rows, we see that only a
rather small part of the correct target tokens avail-
able to the decoder are actually produced in the
1-best MT output (50% against 86%). Although
our word-level analysis does not directly estimate
phrase-level coverage, these numbers suggest that
a large potential for translation improvement lies
in better lexical selection during decoding.
Token recall:
reference/MT-search-space 86.0%
reference/MT-output 50.0%
stem-only reference/MT-output 12.3%
of which reachable 11.2%
Table 1: Lexical coverage analysis of the baseline
SMT system (English-Russian wmt12).
To quantify the importance of morphology, we
count how many reference tokens matched the
MT output only at the stem level
3
and for how
many of those the correct surface form existed
in the search space (reachable matches). These
two numbers represent the upper bound of the im-
provement achievable by a model only predicting
suffixes given the target stems. As shown in Ta-
ble 1, such a model could potentially increase the
reference/MT-output recall by 12.3% with genera-
tion of new inflected forms, and by 11.2% without.
Thus, also when it comes to morphology, gener-
ation seems to be of secondary importance com-
pared to better selection in our experimental setup.
3 Predicting word translations in context
It is standard practice in PSMT to use word-
to-word translation probabilities as an additional
phrase score. More specifically, state-of-the-art
PSMT systems employ the maximum-likelihood
estimate of the context-independent probability
of a target word given its aligned source word
P (t
j
|s
i
) for each word alignment link a
ij
.
2
This corresponds to the top 30 phrases sorted by
weighted phrase, lexical and LM probabilities, for each
source span. Koehn (2004) and our own experience suggest
that using more phrases has little or no impact on MT quality.
3
Word segmentation for this analysis is performed by the
Russian Snowball stemmer, see also Section 5.3.
1677
[?????????????????] [??????? ?????]
constitutionality of the] [indiana law] [.]
[.]
[the
Figure 1: Fragment of English sentence and its in-
correct Russian translation produced by the base-
line SMT system. Square brackets indicate phrase
boundaries.
The main goal of our work is to improve the
estimation of such probabilities by exploiting the
context of s
i
, which in turn we expect will re-
sult in better phrase translation selection. Figure
1 illustrates this idea: the translation of “law” in
this example has a wrong case—nominative in-
stead of genitive. Due to the rare word “Indi-
ana/???????”, the target LM must backoff to the
bigram history and does not penalize this choice
sufficiently. However, a model that has access to
the word “of” in the near source context could bias
the translation of “law” to the correct case.
We then model P (t
j
|c
s
i
) with source context
c
s
i
defined as a fixed-length word sequence cen-
tered around s
i
:
c
s
i
= s
i?k
, ..., s
i
, ..., s
i+k
Our definition of context is similar to the n ? 1
word history used in n-gram LMs. Similarly to
previous work in source context-sensitive trans-
lation modeling (Jeong et al., 2010; Chahuneau
et al., 2013), target words are predicted indepen-
dently from each other, which allows for an ef-
ficient decoding integration. We are particularly
interested in translating into morphologically rich
languages where source context can provide useful
information for the prediction of target translation,
for example, the gender of the subject in a source
sentence constrains the morphology of the transla-
tion of the source verb. Therefore, we integrate the
notions of stem and suffix directly into the model.
We assume the availability of a word segmenta-
tion function g that takes a target word t as in-
put and returns its stem and suffix: g(t) = (?, µ).
Then, the conditional probability p(t
j
|c
s
i
) can be
decomposed into stem probability and suffix prob-
ability:
p(t
j
|c
s
i
) = p(?
j
|c
s
i
)p(µ
j
|c
s
i
, ?
j
) (1)
These two probabilities can be estimated sepa-
rately, which yields the two subtasks:
1. predict target stem ? given source context c
s
;
2. predict target suffix µ given source context c
s
and target stem ?.
Based on the results of our analysis, we focus
on the selection of existing translation candidates.
We then restrict our prediction on a set of pos-
sible target candidates depending on the task in-
stead of considering all target words in the vocab-
ulary. More specifically, for each source word s
i
,
our candidate generation function returns the set of
target words T
s
= {t
1
, . . . , t
m
} that were aligned
to s
i
in the parallel training corpus, which in turn
corresponds to the set of target words that the SMT
system can produce for a given source. In practice,
we use a pruned version of T
s
to speed up training
and reduce noise (see details in Section 5).
As for the morphological models, given T
s
and
g, we can obtain L
s
= {?
1
, . . . , ?
k
}, the set of
possible target stem translations of s, and M
?
=
{µ
1
, . . . , µ
l
}, the set of possible suffixes for a tar-
get stem ?. The use of L
s
, and M
?
is similar to
stemming and inflection operations in (Toutanova
et al., 2008) while the set T
s
is similar to the GEN
function in (Jeong et al., 2010).
4
Our approach differs crucially from previous
work (Minkov et al., 2007; Chahuneau et al.,
2013) in that it does not require linguistic fea-
tures such as part-of-speech and syntactic tree on
the source side. The proposed models automati-
cally learn features that are relevant for each of the
modeled tasks, directly from word-aligned data.
To make the approach completely language inde-
pendent, the word segmentation function g can be
trained with an unsupervised segmentation tool.
The effects of using different word segmentation
techniques are discussed in Section 5.
4 Bilingual neural networks for
translation prediction
Probabilistic neural network (NN), or continuous
space, language models have received increas-
ing attention over the last few years and have
been applied to several natural language process-
ing tasks (Bengio et al., 2003; Collobert and We-
ston, 2008; Socher et al., 2011; Socher et al.,
2012). Within statistical machine translation, they
4
Note that our suffix generation function M
?
is restricted
to the forms observed in the target monolingual data, but not
to those aligned to a source word s, which opens the possi-
bility of generating inflected forms that are missing from the
translation models. We leave this possibility to future work.
1678
have been used for monolingual target language
modeling (Schwenk et al., 2006; Le et al., 2011;
Duh et al., 2013; Vaswani et al., 2013), n-gram
translation modeling (Son et al., 2012), phrase
translation modeling (Schwenk, 2012; Zou et al.,
2013; Gao et al., 2014) and minimal translation
modeling (Hu et al., 2014). The recurrent neural
network LMs of Auli et al. (2013) are primarily
trained to predict target word sequences. However,
they also experiment with an additional input layer
representing source side context.
Our models differ from most previous work in
neural language modeling in that we predict a tar-
get translation given a source context while pre-
vious models predict the next word given a tar-
get word history. Unlike previous work in phrase
translation modeling with NNs, our models have
the advantage of accessing source context that can
fall outside the phrase boundaries.
We now describe our models in a general set-
ting, predicting target translations given a source
context, where target translations can be either
words, stems or suffixes.
5
4.1 Neural network architecture
Following a common approach in deep learning
for NLP (Bengio et al., 2003; Collobert and We-
ston, 2008), we represent each source word s
i
by
a column vector r
s
i
? R
d
. Given a source con-
text c
s
i
= s
i?k
, ..., s
i
, ..., s
i+k
of k words on the
left and k words on the right of s
i
, the context rep-
resentation r
c
s
i
? R
(2k+1)×d
is obtained by con-
catenating the vector representations of all words
in c
s
i
:
r
c
s
i
= r
s
i?k
 ... r
s
i+k
Our main BNN architecture for word or stem
prediction (Figure 2a) is a feed-forward neural
network (FFNN) with one hidden layer, a matrix
W
1
? R
n×(2k+1)d
connecting the input layer to
the hidden layer, a matrix W
2
? R
|V
t
|×n
connect-
ing the hidden layer to the output layer, and a bias
vector b
2
? R
|V
t
|
where |V
t
| is the size of target
translations vocabulary. The target translation dis-
tribution P
BNN
(t|c
s
i
) for a given source context
c
s
i
is computed by a forward pass:
softmax
(
W
2
?(W
1
r
c
s
i
) + b
2
)
(2)
where ? is a nonlinearity (tanh, sigmoid or rec-
tified linear units). The parameters of the neural
5
The source code of our models is available at https:
//bitbucket.org/ketran
network are ? = {r
s
i
,W
1
,W
2
,b
2
}.
The suffix prediction BNN is obtained by
adding the target stem representation r
?
to the in-
put layer (see Figure 2b).
4.2 Model variants
We encounter two major issues with FFNNs: (i)
They do not provide a natural mechanism to com-
pute word surface conditional probability p(t|c
s
)
given individual stem probability p(?|c
s
) and suf-
fix probability p(µ|c
s
, ?), and (ii) FFNNs do not
provide the flexibility to capture long dependen-
cies among words if they lie outside the source
context window. Hence, we consider two BNN
variants: a log-bilinear model (LBL) and a con-
volutional neural network model (ConvNet). LBL
could potentially address (i) by factorizing target
representations into target stem and suffix repre-
sentations whereas ConvNets offer the advantage
of modeling variable input length (ii) (Kalchbren-
ner et al., 2014).
Log-bilinear model. The FFNN models stem
and suffix probabilities separately. A log-bilinear
model instead could directly model word predic-
tion through a factored representation of target
words, similarly to Botha and Blunsom (2014).
Thus, no probability mass would be wasted over
stem-suffix combinations that are not in the candi-
date generation function. The LBL model speci-
fies the conditional distribution for the word trans-
lation t
j
? T
s
i
given a source context c
s
i
:
P?(tj |cs
i
) =
exp(s?(tj , cs
i
))
?
t
?
j
?T
s
i
exp(s?(t
?
j
, c
s
i
))
(3)
We use an additional set of word representations
q
t
j
? R
n
for target translations t
j
. The LBL
model computes a predictive representation qˆ of a
source context c
s
i
by taking a linear combination
of the source word representations r
s
i+m
with the
position-dependent weight matrices C
m
? R
n×d
:
qˆ =
k
?
m=?k
C
m
r
s
i+m
(4)
The score function s?(tj , cs
i
) measures the simi-
larity between the predictive representation qˆ and
the target representation q
t
j
:
s?(tj , cs
i
) = qˆ
T
q
t
j
+ b
T
h
q
t
j
+ b
t
j
(5)
1679
P?(t|csi)
rsi k rsi rsi+k
W1
W2
 (x)
(a) BNN for word prediction.
P?(µ| , csi)
rsi k rsi rsi+k
W1
W2
 (x)
r 
(b) BNN for suffix prediction.
Figure 2: Feed-forward BNN architectures for predicting target translations: (a) word model (similar to
stem model), and (b) suffix model with an additional vector representation r
?
for target stems ?.
Here b
t
j
is the bias term associated with target
word t
j
. b
h
? R
n
are the representation bi-
ases. s?(tj , cs
i
) can be seen as the negative en-
ergy function of the target translation t
j
and its
context c
s
i
. The parameters of the model thus
are ? = {r
s
i
,C
m
,q
t
j
,b
h
, b
t
j
}. Our log-bilinear
model is a modification of the log-bilinear model
proposed for n-gram language modeling in (Mnih
and Hinton, 2007).
Convolutional neural network model. This
model (Figure 3) computes the predictive repre-
sentation qˆ by applying a sequence of 2k convo-
lutional layers {L
1
, . . . ,L
2k
}. The source context
c
s
i
is represented as a matrix m
c
s
i
? R
d×(2k+1)
:
m
c
s
i
=
[
r
s
i?k
; . . . ; r
s
i+k
]
(6)
qˆ
rs1 rs2 rs3 rs4 rs5 rs6rs0
Figure 3: Convolutional neural network model.
Edges with the same color indicate the same ker-
nel weight matrix.
Each convolutional layer L
i
consists of a one-
dimensional filter m
i
? R
d×2
. Each row of m
i
is convolved with the corresponding row in the
previous layer resulting in a weight matrix whose
number of columns decreases by one. Thus after
2k convolutional layers, the network transforms
the source context matrix m
c
s
i
to a feature vec-
tor qˆ ? R
d
. A fully connected layer with weight
matrix W followed by a softmax layer are placed
after the last convolutional layer L
2k
to perform
classification. The parameters of the convolutional
neural network model are ? = {r
s
i
,m
j
,W}.
Here, we focus on a fixed length input, how-
ever convolutional neural networks may be used to
model variable length input (Kalchbrenner et al.,
2014; Kalchbrenner and Blunsom, 2013).
4.3 Training
In training, for each example (t, c
s
), we maximize
the conditional probability P?(t|cs) of a correct
target label t. The contribution of the training ex-
ample (t, c
s
) to the gradient of the log conditional
probability is given by:
?
??
logP?(t|cs) =
?
??
s?(t|cs)
?
?
t
?
?T
s
P?(t
?
|c
s
)
?
??
s?(t
?
, c
s
)
Note that in the gradient, we do not sum over all
target translations T but a set of possible candi-
dates T
s
of a source word s. In practice |T
s
| ? 200
with our pruning settings (see Section 5.1), thus
training time for one example does not depend on
the vocabulary size. Our training criterion can be
seen as a form of contrastive estimation (Smith
and Eisner, 2005), however we explicitly move the
probability mass from competing candidates to the
correct translation candidate, thus obtaining more
reliable estimates of the conditional probabilities.
The BNN parameters are initialized randomly
according to a zero-mean Gaussian. We regularize
the models with L
2
. As an alternative to the L
2
regularizer, we also experiment with dropout (Hin-
ton et al., 2012), where the neurons are randomly
zeroed out with dropout rate p. This technique is
known to be useful in computer vision tasks but
has been rarely used in NLP tasks. In FFNN, we
use dropout after the hidden layer, while in Con-
vNet, dropout applies after the last convolutional
layer. The dropout rate p is set to 0.3 in our exper-
1680
iments. We use rectified nonlinearities
6
in FFNN
and after each convolutional layer in ConvNet. We
train our BNN models with the standard stochastic
gradient descent.
5 Evaluating word translation prediction
In this section, we assess the ability of our BNN
models to predict the correct translation of a word
in context. In addition to English-Russian, we also
consider translation prediction for Czech and Bul-
garian. As members of the Slavic language fam-
ily, Czech and Bulgarian are also characterized by
highly inflectional morphology. Czech, like Rus-
sian, displays a very rich nominal inflection with
as many as 14 declension paradigms. Bulgarian,
unlike Russian, is not affected by case distinctions
but is characterized by a definiteness suffix.
5.1 Experimental setup
The following parallel corpora are used to train the
BNN models:
• English-Russian: WMT13 data (News Com-
mentary and Yandex corpora);
• English-Czech: CzEng 1.0 corpus (Bojar et
al., 2012) (Web Pages and News sections);
• English-Bulgarian: a mix of crawled news
data, TED talks and Europarl proceedings.
Detailed corpus statistics are given in Table 2. For
each language pair, accuracies are measured on a
held-out set of 10K parallel sentences.
To prepare the candidate generation function,
each dataset is first word-aligned with GIZA++,
then a bilingual lexicon with maximum-likelihood
probabilities (P
mle
) is built from the symmetrized
alignment. After some frequency and signifi-
cance pruning,
7
the top 200 translations sorted by
P
mle
(t|s) · P
mle
(s|t) are kept as candidate word
translations for each source word in the vocabu-
lary. Word alignments are also used to train the
BNN models: each alignment link constitutes a
training sample, with no special treatment of un-
aligned words and 1-to-many alignments.
The context window size k is set to 3 (cor-
responding to 7-gram) and the dimensionality of
6
We find that using rectified linear units gives better re-
sults than sigmoid and tanh.
7
Each lexicon is pruned with minimum word frequency 5,
minimum source-target word pair frequency 2, minimum log
odds ratio 10.
source word representations to 100 in all experi-
ments. The number of hidden units in our feed-
forward neural networks and the target translation
embedding size in LBL models are set to 200. All
models are trained for 10 iterations with learning
rate set to 0.001.
En-Ru En-Cs En-Bg
Sentences 1M 1M 0.8M
Src. tokens 26.5M 19.2M 19.3M
Trg. tokens 24.7M 16.7M 18.9M
Src. T/T .0109 .0105 .0051
Trg. T/T .0247 .0163 .0104
Table 2: BNN training corpora statistics: number
of sentences, tokens, and type/token ratio (T/T).
5.2 Word, stem and suffix prediction
accuracy
We measure accuracy at top-n, i. e. the number
of times the correct translation was in the top n
candidates sorted by a model. For each subtask—
word, stem and suffix prediction—the BNN
model is compared to the context-independent
maximum-likelihood baseline P
mle
(t|s) on which
the PSMT lexical weighting score is based. Note
that this is a more realistic baseline than the uni-
form models sometimes reported in the litera-
ture. The oracle corresponds to the percentage of
aligned source-target word pairs in the held-out set
that are covered by the candidate generation func-
tion. Out of the missing links, about 4% is due
to lexicon pruning. Results for all three language
pairs are presented in Table 3. In this series of
experiments, the morphological BNNs utilize un-
supervised segmentation models trained on each
target language following Lee et al. (2011).
8
As shown in Table 3, the BNN models outper-
form the baseline by a large margin in all tasks and
languages. In particular, word prediction accuracy
at top-1 increases by +6.4%, +24.6% and +9.0%
absolute in English-Russian, English-Czech and
English-Bulgarian respectively, without the use of
any features based on linguistic annotation. While
the baseline and oracle differences among lan-
guages can be explained by different levels of
overlap between training and held-out set, we can-
not easily explain why the Czech BNN perfor-
mance is so much higher. When comparing the
8
We use the C++ implementation available at http://
groups.csail.mit.edu/rbg/code/morphsyn
1681
Model En-Ru En-Cs En-Bg
Word prediction (%):
Baseline 33.0 / 50.1 42.0 / 59.9 47.9 / 66.0
Word BNN
39.4 / 56.6 66.6 / 81.4 56.9 / 74.0
+6.4 / +6.5 +24.6/+21.5 +9.0 / +8.0
Oracle 79.5 / 0.00 90.2 / 0.00 86.9 / 0.00
Stem prediction (%):
Baseline 40.7 / 58.2 46.1 / 64.3 51.9 / 70.1
Stem BNN
45.1 / 62.5 66.1 / 81.6 56.7 / 74.4
+4.4 / +4.3 +20.0/+17.3 +4.8 / +4.3
Suffix prediction (%):
Baseline 71.2 / 85.6 78.8 / 93.2 81.5 / 92.4
Suffix BNN
77.0 / 89.7 91.9 / 97.4 87.7 / 94.9
+5.8 / +4.1 +13.1 /+4.2 +6.2 / +2.5
Table 3: BNN prediction accuracy (top-1/top-3)
compared to a context-independent maximum-
likelihood baseline.
three prediction subtasks, we find that word pre-
diction is the hardest task as expected. Stem pre-
diction accuracies are considerably higher than
word prediction accuracies in Russian, but almost
equal in the other two languages. Finally, base-
line accuracies for suffix prediction are by far
the highest, ranging between 71.2% and 81.5%,
which is primarily explained by a smaller num-
ber of candidates to choose from. Also on this
task, the BNN model achieves considerable gains
of +5.8%, +13.1% and +6.2% at top-1, without the
need of manual feature engineering.
From these figures, it is hard to predict whether
word BNNs or morphological BNNs will have a
better effect on SMT performance. On one hand,
the word-level BNN achieves the highest gain over
the MLE baseline. On the other, the stem- and
suffix-level BNNs provide two separate scoring
functions, whose weights can be directly tuned for
translation quality. A preliminary answer to this
question is given by the SMT experiments pre-
sented in Section 6.
5.3 Effect of word segmentation
This section analyzes the effect of using different
segmentation techniques. We consider two super-
vised tagging methods that produce lemma and in-
flection tag for each token in a context-sensitive
manner: TreeTagger (Sharoff et al., 2008) for Rus-
sian and the Morce tagger (Spoustová et al., 2007)
for Czech.
9
Finally, we employ the Russian Snow-
ball rule-based stemmer as a light-weight context-
9
Annotation included in the CzEng 1.0 corpus release.
Figure 4: Effect of different word segmentation
techniques (U: unsupervised, S: supervised, R:
rule-based stemmer) on stem and suffix prediction
accuracy. The dark part of each bar stands for top-
1, the light one for top-3 accuracy.
insensitive segmentation technique.
10
As shown in Figure 4, accuracies for both stem
and suffix prediction vary noticeably with the seg-
mentation used. However, higher stem accuracies
corresponds to lower suffix accuracies and vice
versa, which can be mainly due to a general pref-
erence of a tool to segment more or less than an-
other. In summary, the unsupervised segmentation
methods and the light-weight stemmer appear to
perform comparably to the supervised methods.
5.4 Effect of training data size
We examine the predictive power of our models
with respect to the size of training data. Table 4
shows the accuracies of stem and suffix models
trained on 200K and 1M English-Russian sentence
pairs with unsupervised word segmentation. Sur-
prisingly, we observe only a minor loss when we
decrease the training data size, which suggests that
our models are robust even on a small data set.
# Train sent. Stem Acc. Suffix Acc.
1M 45.1 / 62.5 77.0 / 89.7
200K 44.6 / 61.8 75.7 / 88.6
Table 4: Accuracy at top-1/top-3 (%) of stem and
suffix BNNs with different training data sizes.
5.5 Fine-grained evaluation
We evaluate the suffix BNN model at the part-of-
speech (POS) level. Table 5 provides suffix pre-
diction accuracy per POS for En-Ru. For this
analysis, Russian data is segmented by TreeTag-
10
http://snowball.tartarus.org/
algorithms/russian/stemmer.html
1682
ger. Additionally, we report the average number
of suffixes per stem given the part-of-speech.
Our results are consistent with the findings of
Chahuneau et al. (2013):
11
the prediction of ad-
jectives is more difficult than that of other POS
while Russian verb prediction is relatively easier
in spite of the higher number of suffixes per stem.
These differences reflect the importance of source
versus target context features in the prediction of
the target inflection: For instance, adjectives agree
in gender with the nouns they modify, but this may
be only inferred from the target context.
POS A V N M P
Acc. (%) 49.6 61.9 62.8 84.5 64.4
|M
?
| 18.2 18.4 9.2 7.1 13.3
Table 5: Suffix prediction accuracy at top-1 (%),
breakdown by category (A: adjectives, V: verbs,
N: nouns, M: numerals and P: pronouns). |M
?
|
denotes the average number of suffixes per stem.
5.6 Neural Network variants
Table 6 shows the stem and suffix accuracies of
BNN variants on English-Czech. Although none
of the variants outperform our main FFNN archi-
tecture, we observe similar performances by the
LBL on stem prediction, and by the ConvNet on
suffix prediction. This suggests that future work
could exploit their additional flexibilities (see Sec-
tion 4.2) to improve the BNN predictive power.
As for the low suffix accuracy by the LBL, it
can be explained by the absence of nonlinearity
transformation. Nonlinearity is important for the
suffix model where the prediction of target suf-
fix µ
j
often does not depend linearly on s
i
and
?
j
. The predictive representation of target stem
in the LBL stem model, however, mainly depends
on the source representation r
s
i
through a position
dependent weight matrix C
0
. Thus, we observe a
smaller accuracy drop in the stem model than in
the suffix model. Conversely, the ConvNet per-
forms poorly on stem prediction because it cap-
tures the meaning of the whole source context in-
stead of emphasizing the importance of the source
word s
i
as the main predictor of the target transla-
tion t
j
.
11
Chahuneau et al. (2013) report an average accuracy of
63.1% for the prediction of A, V, N, M suffixes. When we
train our model on the same dataset (news-commentary) we
obtain a comparable result (64.7% vs 63.1%).
Unexpectedly, no improvement is obtained by
the use of dropout regularizer (see Section 4.3).
Model Stem Acc Suffix Acc
FFNN 66.1 / 81.6 91.9 / 97.4
FFNN+do 64.6 / 81.1 91.5 / 97.5
LBL 63.6 / 79.6 86.4 / 96.4
ConvNet+do 58.6 / 75.6 90.3 / 96.9
Table 6: Accuracies at top-1/top-3 (%) of stem and
suffix models. +do indicates dropout instead of L
2
regularizer. FFNN is our main architecture.
6 SMT experiments
While the main objective of this paper is to im-
prove prediction accuracy of word translations,
see Section 5, we are also interested in know-
ing to which extent these improvements carry over
within an end-to-end machine translation task. To
this end, we integrate our translation prediction
models described in Section 4 into our existing
English-Russian SMT system.
For each phrase pair matching the input, the
phrase BNN score P
BNN-p
is computed as follows:
P
BNN-p
(s˜,
˜
t, a) =
|s˜|
?
i=1
?
?
?
?
?
1
|{a
i
}|
?
j?{a
i
}
P
BNN
(t
j
|c
s
i
) if |{a
i
}| > 0
P
mle
(NULL|s
i
) otherwise
where a is the word-level alignment of the phrase
pair (s˜,
˜
t) and {a
i
} is the set of target positions
aligned to s
i
. If a source-target link cannot be
scored by the BNN model, we give it a P
BNN
probability of 1 and increment a separate count
feature ?. Note that the same phrase pair can get
different BNN scores if used in different source
side contexts.
Our baseline is an in-house phrase-based
(Koehn et al., 2003) statistical machine transla-
tion system very similar to Moses (Koehn et al.,
2007). All system runs use hierarchical lexicalized
reordering (Galley and Manning, 2008; Cherry
et al., 2012), distinguishing between monotone,
swap, and discontinuous reordering, all with re-
spect to left-to-right and right-to-left decoding.
Other features include linear distortion, bidirec-
tional lexical weighting (Koehn et al., 2003), word
and phrase penalties, and finally a word-level 5-
gram target LM trained on all available mono-
lingual data with modified Kneser-Ney smooth-
ing (Chen and Goodman, 1999). The distortion
1683
Corpus Lang. #Sent. #Tok.
paral.train
EN
1.9M
48.9M
RU 45.9M
Wiki dict.
EN/RU 508K –
mono.train
RU 21.0M 390M
WMT2012
EN
3K 64K
WMT2013
3K 56K
Table 7: SMT training and test data statistics. All
numbers refer to tokenized, lowercased data.
limit is set to 6 and for each source phrase the top
30 translation candidates are considered. When
translating into a morphologically rich language,
data sparsity issues in the target language become
particularly apparent. To compensate for this we
also experiment with a 5-gram suffix-based LM in
addition to the surface-based LM (Müller et al.,
2012; Bisazza and Monz, 2014).
The BNN models are integrated as additional
log-probability feature functions (logP
BNN-p
):
one feature for the word prediction model or two
features for the stem and suffix models respec-
tively, plus the penalty feature ?.
Table 7 shows the data used to train our English-
Russian SMT system. The feature weights for all
approaches were tuned by using pairwise rank-
ing optimization (Hopkins and May, 2011) on the
wmt12 benchmark (Callison-Burch et al., 2012).
During tuning, 14 PRO parameter estimation runs
are performed in parallel on different samples of
the n-best list after each decoder iteration. The
weights of the individual PRO runs are then av-
eraged and passed on to the next decoding itera-
tion. Performing weight estimation independently
for a number of samples corrects for some of the
instability that can be caused by individual sam-
ples. The wmt13 set (Bojar et al., 2013) was used
for testing. We use approximate randomization
(Noreen, 1989) to test for statistically significant
differences between runs (Riezler and Maxwell,
2005).
Translation quality is measured with case-
insensitive BLEU[%] using one reference trans-
lation. As shown in Table 8, statistically signif-
icant improvements over the respective baseline
(Baseline and Base+suffLM) are marked
N
at the
p < .01 level. Integrating our bilingual neural net-
work approach into our SMT system yields small
but statistically significant improvements of 0.4
BLEU over a competitive baseline. We can also
SMT system wmt12 (dev) wmt13 (test)
Baseline 24.7 18.9
+ stem/suff. BNN 25.1 19.3
N
Base+suffLM 24.5 19.2
+ word BNN 24.5 19.3
+ stem/suff. BNN 24.7 19.6
N
Table 8: Effect of our BNN models on English-
Russian translation quality (BLEU[%]).
see that it is beneficial to add a suffix-based lan-
guage model to the baseline system. The biggest
improvement is obtained by combining the suffix-
based language model and our BNN approach,
yielding 0.7 BLEU over a competitive, state-of-
the-art baseline, of which 0.4 BLEU are due to our
BNNs. Finally, one can see that the BNNs mod-
eling stems and suffixes separately perform bet-
ter than a BNN directly predicting fully inflected
forms.
To better understand the BNN effect on the
SMT system, we analyze the set of phrase pairs
that are employed by the decoder to translate each
sentence. This set is ranked by the weighted com-
bination of phrase translation and lexical weight-
ing scores, target language model score and, if
available, phrase BNN scores. As shown in Ta-
ble 9, the morphological BNN models have a pos-
itive effect on the decoder’s lexical search space
increasing the recall of reference tokens among
the top 1 and 3 phrase translation candidates. The
mean reciprocal rank (MRR) also improves from
0.655 to 0.662. Looking at the 1-best SMT output,
we observe a slight increase of reference/output
recall (50.0% to 50.7%), which is less than the in-
crease we observe for the top 1 translation candi-
dates (57.6% to 59.0%). One possible explanation
is that the new, more accurate translation distribu-
tions are overruled by other SMT model scores,
Token recall (wmt12): Baseline +BNN
reference/MT-search-space [top-1] 57.6% 59.0%
reference/MT-search-space [top-3] 70.7% 70.9%
reference/MT-search-space [top-30] 86.0% 85.0%
reference/MT-search-space [MRR] 0.655 0.662
reference/MT-output 50.0% 50.7%
stem-only reference/MT-output 12.3% 11.5%
of which reachable 11.2% 10.3%
Table 9: Target word coverage analysis of the
English-Russian SMT system before and after
adding the morphological BNN models.
1684
like the target LM, that are based on traditional
maximum-likelihood estimates. While the suffix-
based LMs proved beneficial in our experiments,
we speculate that higher gains could be obtained
by coupling our approach with a morphology-
aware neural LM like the one recently presented
by Botha and Blunsom (2014).
7 Related work
While most relevant literature has been discussed
in earlier sections, the following approaches are
particularly related to ours: Minkov et al. (2007)
and Toutanova et al. (2008) address target inflec-
tion prediction with a log-linear model based on
rich morphological and syntactic features. Their
model exploits target context and is applied to
inflect the output of a stem-based SMT system,
whereas our models predict target words (or pairs
of stem-suffix) independently and are integrated
into decoding. Chahuneau et al. (2013) address
the same problem with another feature-rich dis-
criminative model that can be integrated in decod-
ing, like ours, but they also use it to inflect on-
the-fly stemmed phrases. It is not clear what part
of their SMT improvements is due to the gener-
ation of new phrases or to better scoring. Jeong
et al. (2010) predict surface word forms in con-
text, similarly to our word BNN, and integrate the
scores into the SMT system. Unlike us, they rely
on linguistic feature-rich log-linear models to do
that. Gimpel and Smith (2008) propose a similar
approach to directly predict phrases in context, in-
stead of words.
All those approaches employed features that
capture the global structure of source sentences,
like dependency relations. By contrast, our mod-
els access only local context in the source sen-
tence but they achieve accuracy gains comparably
to models that also use global sentence structure.
8 Conclusions
We have proposed a general approach to predict
word translations in context using bilingual neu-
ral network architectures. Unlike previous NN ap-
proaches, we model word, stem and suffix dis-
tributions in the target language given context in
the source language. Instead of relying on man-
ually engineered features, our models automati-
cally learn abstract word representations and fea-
tures that are relevant for the modeled task directly
from word-aligned parallel data. Our preliminary
results with LBL and ConvNet architectures sug-
gest that potential improvement may be achieved
by factorizing target representations or by dynam-
ically modeling source context size. Evaluated
on three morphologically rich languages, our ap-
proach achieves considerable gains in word, stem
and suffix accuracy over a context-independent
maximum-likelihood baseline. Finally, we have
shown that the proposed BNN models can be
tightly integrated into a phrase-based SMT sys-
tem, resulting in small but statistically significant
BLEU improvement over a competitive, large-
scale English-Russian baseline.
Our analysis shows that the number of correct
target words occurring in highly scored phrase
translation candidates increases after integrating
the morphological BNNs. However, only few of
these end up in the 1-best translation output. Fu-
ture work will investigate the benefits of coupling
our BNN models with target language models that
also exploit abstract word representations, such as
Botha and Blunsom (2014) and Auli et al. (2013).
Acknowledgments
This research was funded in part by the
Netherlands Organization for Scientific Research
(NWO) under project numbers 639.022.213 and
612.001.218. We would like to thank Ekaterina
Garmash for helping with the error analysis of the
English-Russian translations.
References
Michael Auli, Michel Galley, Chris Quirk, and Geof-
frey Zweig. 2013. Joint language and translation
modeling with recurrent neural networks. In Pro-
ceedings of the 2013 Conference on Empirical Meth-
ods in Natural Language Processing, pages 1044–
1054, Seattle, Washington, USA, October.
Yoshua Bengio, Réjean Ducharme, Pascal Vincent, and
Christian Janvin. 2003. A neural probabilistic lan-
guage model. The Journal of Machine Learning Re-
search, 3:1137–1155.
Arianna Bisazza and Christof Monz. 2014. Class-
based language modeling for translating into mor-
phologically rich languages. In Proceedings of
COLING 2014, the 25th International Conference
on Computational Linguistics, pages 1918–1927,
Dublin, Ireland.
Ond
?
rej Bojar, Zden
?
ek Žabokrtský, Ond
?
rej Dušek, Pe-
tra Galuš
?
cáková, Martin Majliš, David Mare
?
cek, Ji
?
rí
Maršík, Michal Novák, Martin Popel, and Aleš Tam-
chyna. 2012. The joy of parallelism with czeng
1685
1.0. In Proceedings of LREC2012, Istanbul, Turkey,
May. ELRA, European Language Resources Asso-
ciation.
Ond?rej Bojar, Christian Buck, Chris Callison-Burch,
Christian Federmann, Barry Haddow, Philipp
Koehn, Christof Monz, Matt Post, Radu Soricut, and
Lucia Specia. 2013. Findings of the 2013 Work-
shop on Statistical Machine Translation. In Pro-
ceedings of the Eighth Workshop on Statistical Ma-
chine Translation, pages 1–44, Sofia, Bulgaria, Au-
gust. Association for Computational Linguistics.
Jan A. Botha and Phil Blunsom. 2014. Composi-
tional Morphology for Word Representations and
Language Modelling. In Proceedings of the 31st In-
ternational Conference on Machine Learning, Bei-
jing, China, June.
Chris Callison-Burch, Philipp Koehn, Christof Monz,
Matt Post, Radu Soricut, and Lucia Specia. 2012.
Findings of the 2012 workshop on statistical ma-
chine translation. In Proceedings of the Seventh
Workshop on Statistical Machine Translation, pages
10–51, Montréal, Canada, June. Association for
Computational Linguistics.
Victor Chahuneau, Eva Schlinger, Noah A. Smith, and
Chris Dyer. 2013. Translating into morphologically
rich languages with synthetic phrases. In Proceed-
ings of the Conference on Empirical Methods in Nat-
ural Language Processing, pages 1677–1687, Seat-
tle, USA, October.
Stanley F. Chen and Joshua Goodman. 1999. An
empirical study of smoothing techniques for lan-
guage modeling. Computer Speech and Language,
4(13):359–393.
Colin Cherry, Robert C. Moore, and Chris Quirk. 2012.
On hierarchical re-ordering and permutation parsing
for phrase-based decoding. In Proceedings of the
Seventh Workshop on Statistical Machine Transla-
tion, pages 200–209, Montréal, Canada, June. Asso-
ciation for Computational Linguistics.
Ronan Collobert and Jason Weston. 2008. A unified
architecture for natural language processing: deep
neural networks with multitask learning. In Pro-
ceedings of the 25th Annual International Confer-
ence on Machine Learning, volume 12, pages 2493–
2537.
Kevin Duh, Graham Neubig, Katsuhito Sudoh, and Ha-
jime Tsukada. 2013. Adaptation data selection us-
ing neural language models: Experiments in ma-
chine translation. In Proceedings of the 51st Annual
Meeting of the Association for Computational Lin-
guistics, pages 678–683, Sofia, Bulgaria, August.
Nadir Durrani, Alexander Fraser, and Helmut Schmid.
2013. Model with minimal translation units, but de-
code with phrases. In Proceedings of Conference of
the North American Chapter of the Association for
Computational Linguistics: Human Language Tech-
nologies, pages 1–11, Atlanta, Georgia, USA, June.
Michel Galley and Christopher D. Manning. 2008. A
simple and effective hierarchical phrase reordering
model. In EMNLP ’08: Proceedings of the Con-
ference on Empirical Methods in Natural Language
Processing, pages 848–856, Morristown, NJ, USA.
Association for Computational Linguistics.
Jianfeng Gao, Xiaodong He, Wen-tau Yih, and
Li Deng. 2014. Learning continuous phrase repre-
sentations for translation modeling. In Proceedings
of the 52nd Annual Meeting of the Association for
Computational Linguistics, pages 699–709. Associ-
ation for Computational Linguistics.
Kevin Gimpel and Noah A. Smith. 2008. Rich source-
side context for statistical machine translation. In
Proceedings of the Third Workshop on Statistical
Machine Translation, pages 9–17, Columbus, Ohio,
USA.
Spence Green and John DeNero. 2012. A class-based
agreement model for generating accurately inflected
translations. In Proceedings of the 50th Annual
Meeting of the Association for Computational Lin-
guistics, ACL ’12, pages 146–155, Stroudsburg, PA,
USA. Association for Computational Linguistics.
Rejwanul Haque, Sudip Kumar Naskar, Antal Bosch,
and Andy Way. 2011. Integrating source-
language context into phrase-based statistical ma-
chine translation. Machine Translation, 25(3):239–
285, September.
Geoffrey E. Hinton, Nitish Srivastava, Alex
Krizhevsky, Ilya Sutskever, and Ruslan R. Salakhut-
dinov. 2012. Improving neural networks by
preventing co-adaptation of feature detectors. arXiv
preprint arXiv:1207.0580.
Mark Hopkins and Jonathan May. 2011. Tuning as
ranking. In Proceedings of the 2011 Conference on
Empirical Methods in Natural Language Process-
ing, pages 1352–1362, Edinburgh, Scotland, UK.,
July. Association for Computational Linguistics.
Yuening Hu, Michael Auli, Qin Gao, and Jianfeng Gao.
2014. Minimum translation modeling with recur-
rent neural networks. In Proceedings of the 14th
Conference of the European Chapter of the Associ-
ation for Computational Linguistics, pages 20–29,
Gothenburg, Sweden, April. Association for Com-
putational Linguistics.
Minwoo Jeong, Kristina Toutanova, Hisami Suzuki,
and Chris Quirk. 2010. A discriminative lexicon
model for complex morphology. In The Ninth Con-
ference of the Association for Machine Translation
in the Americas.
Nal Kalchbrenner and Phil Blunsom. 2013. Recurrent
continuous translation models. In Proceedings of
the 2013 Conference on Empirical Methods in Natu-
ral Language Processing, pages 1700–1709, Seattle,
USA, October.
1686
Nal Kalchbrenner, Edward Grefenstette, and Phil Blun-
som. 2014. A convolutional neural network for
modelling sentences. In Proceedings of the 52nd
Annual Meeting of the Association for Computa-
tional Linguistics, pages 655–665. Association for
Computational Linguistics.
Ahmed El Kholy and Nizar Habash. 2012. Translate,
predict or generate: Modeling rich morphology in
statistical machine translation. In Proceedings of
the 16th Conference of the European Association for
Machine Translation (EAMT).
Philipp Koehn, Franz Josef Och, and Daniel Marcu.
2003. Statistical phrase-based translation. In Pro-
ceedings of HLT-NAACL 2003, pages 127–133, Ed-
monton, Canada.
Philipp Koehn, Hieu Hoang, Alexandra Birch, Chris
Callison-Burch, Marcello Federico, Nicola Bertoldi,
Brooke Cowan, Wade Shen, Christine Moran,
Richard Zens, Chris Dyer, Ondrej Bojar, Alexan-
dra Constantin, and Evan Herbst. 2007. Moses:
Open Source Toolkit for Statistical Machine Trans-
lation. In Proceedings of the 45th Annual Meeting of
the Association for Computational Linguistics Com-
panion Volume Proceedings of the Demo and Poster
Sessions, pages 177–180, Prague, Czech Republic.
Association for Computational Linguistics.
Philipp Koehn. 2004. Pharaoh: A beam search
decoder for phrase-based statistical machine trans-
lation models. In Robert E. Frederking and
Kathryn B. Taylor, editors, Proceedings of the 6th
Conference of the Association for Machine Transla-
tions in the Americas (AMTA 2004), pages 115–124.
Hai-Son Le, Ilya Oparin, Alexandre Allauzen, J Gau-
vain, and François Yvon. 2011. Structured output
layer neural network language model. In Proceed-
ings of Proceedings of ICASSP.
Yoong Keok Lee, Aria Haghighi, and Regina Barzilay.
2011. Modeling syntactic context improves mor-
phological segmentation. In Proceedings of the Fif-
teenth Conference on Computational Natural Lan-
guage Learning, pages 1–9, Portland, Oregon, USA,
June. Association for Computational Linguistics.
Arne Mauser, Saša Hasan, and Hermann Ney. 2009.
Extending statistical machine translation with dis-
criminative and trigger-based lexicon models. In
Proceedings of the 2009 Conference on Empirical
Methods in Natural Language Processing: Volume
1 - Volume 1, EMNLP ’09, pages 210–218, Strouds-
burg, PA, USA. Association for Computational Lin-
guistics.
Einat Minkov, Kristina Toutanova, and Hisami Suzuki.
2007. Generating complex morphology for machine
translation. In Proceedings of the 45th Annual Meet-
ing of the Association of Computational Linguistics,
pages 128–135.
Andriy Mnih and Geoffrey E. Hinton. 2007. Three
new graphical models for statistical language mod-
elling. In Proceedings of the 24th International
Conference on Machine Learning, pages 641–648,
New York, NY, USA.
Thomas Müller, Hinrich Schütze, and Helmut Schmid.
2012. A comparative investigation of morphological
language modeling for the languages of the Euro-
pean Union. In Proceedings of the 2012 Conference
of the North American Chapter of the Association
for Computational Linguistics: Human Language
Technologies, pages 386–395, Montréal, Canada,
June. Association for Computational Linguistics.
Eric W. Noreen. 1989. Computer Intensive Meth-
ods for Testing Hypotheses. An Introduction. Wiley-
Interscience.
Chris Quirk and Arul Menezes. 2006. Do we need
phrases? challenging the conventional wisdom in
statistical machine translation. In Proceedings of
the Human Language Technology Conference of the
NAACL, Main Conference, pages 9–16, New York
City, USA, June. Association for Computational
Linguistics.
Stefan Riezler and John T. Maxwell. 2005. On some
pitfalls in automatic evaluation and significance test-
ing for MT. In Proceedings of the ACL Workshop
on Intrinsic and Extrinsic Evaluation Measures for
Machine Translation and/or Summarization, pages
57–64, Ann Arbor, Michigan, June. Association for
Computational Linguistics.
Holger Schwenk, Daniel Dechelotte, and Jean-Luc
Gauvain. 2006. Continuous space language models
for statistical machine translation. In Proceedings
of the COLING/ACL 2006 Conference, pages 723–
730, Sydney, Australia, July. Association for Com-
putational Linguistics.
Holger Schwenk. 2012. Continuous space translation
models for phrase-based statistical machine transla-
tion. In Proceedings of COLING.
Serge Sharoff, Mikhail Kopotev, Tomaz Erjavec, Anna
Feldman, and Dagmar Divjak. 2008. Design-
ing and evaluating a russian tagset. In Pro-
ceedings of the Sixth International Conference on
Language Resources and Evaluation (LREC’08),
Marrakech, Morocco. European Language Re-
sources Association (ELRA). http://www.lrec-
conf.org/proceedings/lrec2008/.
Noah A. Smith and Jason Eisner. 2005. Contrastive
estimation: Training log-linear models on unlabeled
data. In Proceedings of the 43rd Annual Meeting on
Association for Computational Linguistics.
Richard Socher, Jeffrey Pennington, Eric H. Huang,
Andrew Y. Ng, and Christopher D. Manning. 2011.
Semi-supervised recursive autoencoders for predict-
ing sentiment distributions. In Proceedings of the
1687
Conference on Empirical Methods in Natural Lan-
guage Processing, pages 151–161, Stroudsburg, PA,
USA. Association for Computational Linguistics.
Richard Socher, Brody Huval, Christopher D. Man-
ning, and Andrew Y. Ng. 2012. Semantic composi-
tionality through recursive matrix-vector spaces. In
Proceedings of the 2012 Joint Conference on Empir-
ical Methods in Natural Language Processing and
Computational Natural Language Learning, pages
1201–1211. Association for Computational Linguis-
tics.
Le Hai Son, Alexandre Allauzen, and François Yvon.
2012. Continuous space translation models with
neural networks. In Proceedings of the 2012 Con-
ference of the North American Chapter of the Asso-
ciation for Computational Linguistics: Human Lan-
guage Technologies, pages 39–48, Stroudsburg, PA,
USA. Association for Computational Linguistics.
Drahomíra Spoustová, Jan Haji?c, Jan Votrubec, Pavel
Krbec, and Pavel Kv?eto?n. 2007. The best of two
worlds: Cooperation of statistical and rule-based
taggers for czech. In Proceedings of the Work-
shop on Balto-Slavonic Natural Language Process-
ing, pages 67–74, Prague, Czech Republic, June.
Association for Computational Linguistics.
Kristina Toutanova, Hisami Suzuki, and Achim Ruopp.
2008. Applying morphology generation models to
machine translation. In Proceedings of the Associa-
tion for Computational Linguistics.
Ashish Vaswani, Yinggong Zhao, Victoria Fossum,
and David Chiang. 2013. Decoding with large-
scale neural language models improves translation.
In Proceedings of the 2013 Conference on Empiri-
cal Methods in Natural Language Processing, pages
1387–1392, Seattle, October.
Will Y. Zou, Richard Socher, Daniel Cer, and Christo-
pher D. Manning. 2013. Bilingual word embed-
dings for phrase-based machine translation. In Pro-
ceedings of the 2013 Conference on Empirical Meth-
ods in Natural Language Processing, pages 1393–
1398, Seattle, USA, October.
1688
