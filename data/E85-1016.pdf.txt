PARAHETRIZED ABSTRACT OBJECTS 
FOR L INGUIST IC  INFORMATION PROCESSING 
Helene Bestougef f ,  Gerard  L igozat  
CNRS-Un ivers i te  Par is  VII 
Z,P lace Juss ieu 75005 PARIS FRANCE 
ABSTRACT 
Programming languages which have 
adequate  pr imi t ives  for l ingu is t ic  
in format ion  process in~ and a c lear  
semant ics  at the formal computat iona l  
level are now s lowly  emergin~ as a 
convergent  effort from computer  science, 
l inguist ics ,  and ar t i f i c ia l  inte l l igence.  
Our work on the process in~ of a special  
k ind of  l ingu is t ic  in format ion,  namely  
temporal  in fo rmat ion  ,has led us to 
advocate  the use of a language with  the 
fo l lowing character i s t i c  features: 
- high level of abstract ion;  
- capac i ty  for inference;  
- modular i ty .  
A h igh  leve l  o f  abs t rac t ion  i s  needed 
to  dea l  w i th  complex  l in£u is t i c  not ions  
which are not eas i ly  reduc ib le  to 
e lementary  data structures.  
A capac i ty  for in ference is required,  
as most c r i ter ia  or tests in l ingu is t i cs  
make use of par t i cu la r  k inds of 
deduct ions,  at d i f ferent  levels of the 
l inguist ic  analysis .  
As for modular i ty ,  a typical  s i tuat ion  
in l inguist ics  has to do wi th  a h ie rarchy  
of concepts  or units, and the re la t ions  
between those units at d i f ferent  levels. 
This paper d iscusses  the re levance of 
the choice of parametr i zed  abstract  
objects  as tools for l ingu is t ic  
in format ion  process ing  and exempl i f ies  
the use of such objects  for temporal  
informat ion.  
INTRODUCTION 
In computat iona l  l inguist ics ,  more 
than often there is a tendency to 
d i rec t ly  implement a model  w i thout  rea l ly  
~oing through a spec i f i ca t ion  step which  
would prov ide a correct  abst rac t ion  of 
the implementat ion.  This a t t i tude has at 
least two drawbacks:  First ly,  there is no 
formal way of compar ing  two models;  this 
can  lead  to  some po in t less  d i scuss ions  
between d i f fe rent  approaches  wh ich ,  a t  
an abstract  level, can be shown to be 
equivalent;  secondly,  any extens ion  or 
mod i f i ca t ion  of the implemented  model  
requi res  a d i f fe rent  program instead of 
a mere ad justment  at the abstract  level 
wh ich  should fac i l i ta te  the modular  
updat in~ of the imp lementat ion  and a l low 
a formal compar i son  between the old and 
the new model.  
Our work  on tense -and t ime has 
conv inced us that, espec ia l l y  in 
l ingu is t ic  domains  where  models  are 
either loose or controvers ia l ,  a 
systemat ic  approach to l ingu is t ic  
in fo rmat ion  process in~ a l low ing  
compat ib le  const ruct ions  at all levels is 
h igh ly  des i rable .  We there fore  advocate  
the use of a language wi th  the fo l lowing 
features: 
- high level of abstract ion;  
- capac i ty  for inference;  
- modular i ty .  
This paper is in two parts. In the 
first part, we try to just i fy  our cho ice 
of abstract  parametr i zed  ob jects  as 
adequate  tools for l in~uis t ic  in fo rmat ion  
process ing;  in the second part we 
exempl i fy  our approach by ~iv in~ a 
deta i led  account  of the way we def ine  and 
construct  temporal  objects.  
PARAMETRIZED ABSTRACT OBJECTS 
One of the basic d i f f i cu l t ies  in 
natura l  language process ing  ar ises from 
the fact that modu lar i ty  is both a 
des i rab le  and hard ly  a t ta inab le  proper ty  
of the systems. At first it seems qui te  
reasonab le  to break the programs into 
manageable ,  modular  sub-programs0 
espec ia l ly  as the l ingu is t ic  data, at 
least at f irst approx imat ion , lend  
themselves  to a c lear -cut  c lass i f i ca t ion  
in terms of morphology,  syntax, semant ics  
and pra~mat ics .  Moreover ,  comparat ive ly  
soph is t i ca ted  techn iques  and methods  are 
a l ready ava i lab le  in eachsubf ie ld .  
Unfor tunate ly ,  it has now become 
107 
commonplace  knowledge  that this s t ra tegy  
of deve lop ing  separate  modules  for each 
sub-prob lem and in tegrat in~ them smooth ly  
is not sat is factory :  the operat ions  of 
pars ing  sentences,  p roduc ing  internal  
representat ions ,  reason ing  about them, 
answer in~ quest ions,  generat in~ text, and 
so on, are s t rong ly  in terdependent .  The 
degree, order and locat ion  of the 
in teract ions  between d i f fe rent  parts  may 
vary s ign i f i cant ly ,  accord ing  to 
ind iv idual  s i tuat ions.  
A consequence  of the rea l i za t ion  of 
this fact has been the deve lopment  of 
s t rong ly  integrated,  usua l ly  procedura l  
systems, where  the ind iv idua l  sub- 
programs operate  s imu l taneous ly  on 
several  deep ly  in t r i ca ted  l ingu is t ic  
levels . The pr ice one has to pay for a 
re la t ive  success  of  this approach  is in 
terms of unders tandab i l i ty  and 
~enera l i za t ion :  many systems are s t rong ly  
dependent  on the par t i cu la r  type of 
p rob lem they have been programmed to 
solve, and poss ib le  extens ions  or 
t ranspou i t ions  wou ld  requ i re  fundamenta l  
mod i f i cat ions .  
Uhat k ind of so f tware  tools  wou ld  
a l low at the same t ime modu lar i ty  and 
mul t i - faceted ,  po lymorph ic  and concurrent  
in teract ions  between processes  ? 
Modu lar i ty  and complex  in teract ions  are 
character i s t i c  features of the object  
or iented parad igm . 
Modu lar i ty  iS p rov ided  by the 
s t ruc turat ion  in terms of objects.  
Complex  in teract ion  is a consequence  of 
the d i s t r ibut ion  of the control  between 
t~e d i f ferent  ob jects  and of the 
(poss ib ly  mul t ip le )  inher i tance  
fac i l i t ies  between h ie rarch ica l ly  
dependent  objects.  The poss ib i l i ty  of 
us ing d i f ferent  points  of  views fOr  the 
same objects  is a consequence  of this 
s t ructurat ion.  
This approach leads to focuss ing on 
the basic process  of abstract ion.  In 
this context,  abs t rac t ion  is a process  
which, s tar t ing  from a descr ip t ion  of the 
data, y ie lds an abstract  spec i f i cat ion .  
This involves three steps. 
- def ine the re levant  ob jects  for the 
prob lem under study; 
- def ine the poss ib le  funct ions  and 
re lat ions  on the objects;  
-give exp l i c i t l y  the const ra in ts  
between the funct ions and re lat ions.  
The ob jec t -o r iented  approach  is 
usua l ly  equated wi th  the Smal l ta lk  
"v is ion"  ( Go ldberg  and Robson,  1983 ), 
whi le  other v iews of ob jects  are re jec ted  
as be ing i r re levant  or even self 
contradictory .  
Smal l ta lk  ob jects  can be character i zed  
by the fo l lowing propert ies :  
- Each object  is an instance of a c lass 
(a gener ic  object) .  
- Each object  has a local memory  wh ich  
can only  be updated  by funct ions  (or 
p rocedures)  local  to the object.  
- Objects  are o rsan lzed  into a t ree - l l ke  
h ie rarchy  imply in~ t ree - l i ke  inher i tance.  
- Communicat ion  between ob jects  is 
o rgan ized  through message  pass ing.  
However  ,it has been argued that the 
object  o r iented  approach  can be 
f ru i t fu l l y  carr ied  over into app l i ca t ive  
language contexts  (Steels  ,198Z) or into 
par t i cu la r  systems based on lo~ic where  
the fundamenta l  mechan ism is data  
abst rac t ion  (Goguen et al. 1983). 
As regards  Smal l ta lk ,  it does not 
p rov ide  sys temat ic  fac i l i t ies  for 
de f ln in~ abst ract  data  types; all 
computat ions  are h igh ly  dependent  on s ide 
ef fects  (ass i£nment  is sys temat ica l ly  
used in local operat ions )  and there is no 
expl ic i t  typing. 
ge favour the approach  exempl i f ied  by 
such lan£uaaes  as OBJ and thei r  poss ib le  
extens ions  (Goguen and Meseguer ,  1984), 
as we th ink  that they wi l l  a l low ,in the 
lon~ range, a more ef f ic ient  p rogramming 
sty le  and make the sys temat ic  proof  of 
p rograms poss ib le .  
The OBJ languaQe is based upon data  
abst ract ion:  an object  i s  a type (i.e. a 
domain  of va lues  wi th  funct ions  access ing  
those values) ;  ob jects  a re  organ ized  into 
a h ie rarchy  ( an acyc l ic  ~raph) 
represent in~ the dependenc ies  among 
types. Computat ions  are per fo rmed by 
us ing equat lona l  ax ioms as o r iented  
rewr i te  rules. 
There fore  , g ranted  the ava i lab i l i ty  
of a theorem prover  , the  cons is tency  of 
the spec i f i ca t ions  g iven in the abst ract  
data type can be fo rmal ly  checked. More-  
over , s ince the ob jects  have a c lear  
mathemat ica l  def in i t ion ,  all the 
techn iques  of abstract  a lgebra  are also 
avai lable.  
More genera l ly ,  ax ioms could be g iven 
not on ly  as equat ions  . but also as 
formulas in a logical  theory  (such as 
f irst order  p red icate  ca lcu lus  or 
tempora l  logics) assuming  those theor ies  
sat i s fy  some g iven res t r i c t ions  ( Goguen 
and Bursta11,  1984). 
As we have no access yet to any 
vers ion  of OBJ, we have dec ided  , in a 
f irst stage, to rest r ic t  the object  
s t ructure  to its free component ,  i.e. 
only the s ignatures ,  not the axioms are 
def ined.  Therefore~ the computat ions  have 
to be exp l i c i te ly  coded.  As a 
consequence,,  no check ing  of cons is tency  
108 
is poss ib le  for the t ime being. 
The actual  imp lementat ion  is done in 
the ML language (Gordon et al., 1979). 
ML is a funct ional  language which  is 
ful ly h igher -order .  "It has a po lymorph ic  
type  d isc ip l ine  wh ich  combines the 
f lex ib i l i ty  of  programming in a type less  
language with the secur i ty  of  compi le -  
t ime type checking".  Moreover ,  one c a n  
def ine one's own types , which may be 
abstract  and/or  recurs ive.  
To give a f lavour of the ML 
programming style, cons ider  a poss ib le  
de f in i t ion  of the abstract  recurs ive  type 
of b inary  trees, wi th  tip va lues  of  
an arb i t ra ry  type  (denoted  by  * )  and  non  
t ip  nodes  o f  some other  a rb i t ra ry  type  
(denoted by **). (This exemple is taken 
from Gordon et al., 1979): 
absrectype  (*,**) t ree  = 
* + **  # ( * , ** ) t ree  # ( * , ** ) t ree  
with t iptree x = abs_t ree  (inl x) 
and comptree (y,t l , t2)  = 
abs_tr(~u (inr (y , t l , t2))  
and istip t = is l ( rep_ t ree  t) 
and tipof t= out l ( rept ree  t) 
and labelof  t = fSt(OUtr  ( reptree t)) 
and sonof t =snd(out r ( rept ree  t)) 
This type is def ined as recurs ive  and 
abstract.  The symbols  "+" and "#" 
respect ive ly ,  denote the two type 
const ructors  "d is jo int  sum" and 
"car tes ian  product"  The funct ions  
"abs_tree"  and "rep_tree"  ,both of them 
of  type  (ty -> ty), are only ava i lab le  
inside the de f in i t ion  of  the abstract  
type "tree" : abs_t ree  maps the concrete  
representat ion  of a tree unto its 
abstract ion;  rep_t ree  has the converse  
effect. Final ly,  isl, inl, inr, outl, 
outr are funct ions or pred icates  on the 
d is jo int  sum. They are def ined as 
fol lows: 
isl: (* + **) -> bool 
tests membersh ip  of  left summand; 
inl: * -> (* + **) 
in jects into left summand; 
inr: * -> (** + *) 
in jects into r ight summand; 
outl :  (* + **) -> * 
projects  out left summand; 
out r :  (* + **) -> ** 
pro jects  out r ight summand. 
The s ignature  of this type is the set 
of operators:  
t iptree=-:  * -> (** ,* ) t ree  
comptree=-:  
 # (** ,* ) t ree # (** ,* ) t ree  ->(* , ** ) t ree  
ist ip=-: (* ,** ) t ree ->bool 
t ipof=-: (* ,** ) t ree ->** 
l~be lo f=- : ( * , ** )  tree -> * 
sonof=-:  
( * , ** ) t ree  ->( (** , * ) t ree  # (** , * )  t ree) )  
The vers ion  of ML we use ( INRIA ,1984) 
is wr i t ten  in Lisp wi th  access to the 
l isp system. So our object  env i ronment  is 
const ructed  as a co l lec t ion  of abst ract  
data types. The h ie rarchy  between types 
resu l ts  from the combinat ion  and 
enr ichment of more basic types. This 
h ie rarchy  creates mul t ip le  inher i tance  
re la t ions  between types. Some examples  
wi l l  be g iven in the context  of tempora l  
ob jects .  
Clearly,  the management  of the object  
level must be done on top of ML The 
expl ic i t  cod ing mixes Lisp and ML. 
As we work in a funct iona l  env i ronment  
there is no "local memory" .However ,  this 
is , to our v iewpoint ,  a minor  d rawback  
compared to the advantage  of the 
abst rac t ion  fac i l i t ies .  
In a next stage, we intend to in t roduce 
the necessary  axioms and per fo rm the 
computat ions  in a deduct ive  style. 
This approach can be used for the 
formal representat ion  of natura l  
language, or as a grammar formal i sm . In 
par t i cu la r  the syntact ica l  and semant ica l  
ana lys is  can be done in terms of objects.  
(De Bo iss ieu  and Forest  , 1985). 
PROCESSING TEHPORAL INFORMATION 
Tense and t ime representat ion  in natura l  
languages is genera l ly  s tudied under 
one of the three main d i sc ip l ines  : 
logics, l inguist ics ,  and art i f i c ia l  
inte l l igence.  A br ief  overv iew of these 
4 di f ferent  v lewpo lnts  is g iven in 
(Bestougef f  an Ligozat,  1984). 
The main prob lem is to choose the 
re levant  ob jects  in order to get an 
adequate  abstract ion.  It must be s t rong ly  
emphas ized that we deny ourse lves  the 
r ight to assume any par t i cu la r  phys ica l  
representat ion  of t ime from the outset.  
The concrete  proper t ies  result  from the 
spec i f i cat ions .  
The choice of the basic  objects  is 
somehow arbitrary,  but it should 
never the less  comply  to the fo l lowing 
rules :the objects  must be 
- c lose to l ingu is t ic  intuit{on.  
- general  enough to be reusab le  as 
such in d i f fe rent  contexts,  or give r ise 
to new objects  by enr ichment  or 
inher i tance.  
The second point is requ i red  to avoid 
109 
ad-hoc and independant  spec i f i cat ions .  To 
ach ieve these goals  it may be necessary  
to def ine pr imi t ive  objects,  wh ich  do not  
have any l ingust ic  in terpreta t ion  but are 
mere ly  bu i ld inE  b locks whose use enhances 
modu lar i ty  
In this case ,the lower level ob jects  can 
be h idden to the user 
Keeping this in mind ,we can now 
proceed to the descr ip t ion  of the 
l ingu is t ic  mot ivat ions  wh ich  are beh ind 
the const ruct ion  of tempora l  ob jects  
The idea is to ~ive a sys temat ic  way of 
represent ing  tempora l  in fo rmat ion  by  
def in ing  abstract  s t ructures  based upon 
the concepts  and the hypotheses  of a 
par t i cu la r  l ingu is t ic  theory. 
The l ingu is t ic  theory  we re ly  on is 
that of A. Cul io l i  (Cul iol i ,  1980), 
su i tab ly  adapted to computat iona l  
purposes.  
Tempora l  in fo rmat ion  can be in fo rmal ly  
character i zed  as in fo rmat ion  per ta in ing  
to the locat ion and "shape" of the states 
and events descr ibed  by natura l  language.  
I n  part icu lar ,  this inc ludes what is 
commonly  re fer red  to as aspect.  
Furthermore,  tempora l  in fo rmat ion  in 
natura l  language has both a descr ip t ive  
and an operat ive  structure:  it descr ibes  
and a l lows the users to make sys temat ic  
inferences.  Among these in ferences  are 
those concerned wi th  the order ing  of 
events, but such in ferences  are on ly  part  
o~ a whole set of in ferences  on the 
factual i ty,  the degree of complet ion,  the 
type of occurrence,  of the s i tuat ions  
cons idered.  In fact, it can be argued 
that the order ing  re la t ions  are not 
necessar i l y  of a p r imary  nature.  
Some examples wil l  i l l us t ra te  the 
k ind of data and in ferences  we have in 
mind. 
Cons ider  the fo l lowing s imple  
sentences:  
(i) John is ill. 
(2 )  John repa i rs  cars. 
(33 John is repa i r ing  my car. 
(4) John repa i red  my car. 
(5) John has repa i red  my car. 
(6 )  John was repa i r ing  my car. 
(7) My car has been repaired.  
(83 My car is repa i red  now. 
(9) John was singing. 
(i0) John sang. 
(Ii) John has been singing. 
(12) Cats are smart. 
We wish to account  for some basic  
in format ion  imparted by the use of such 
sentences.  For example: 
- Sentence (2) does not imply (3), 
ne i ther  does sentence (3) imply sentence  
(2). 
- Sentence  (4) impl ies  sentence  (7), not 
(8 ) .  
- Sentence  (5) impl ies sentence  (8). 
- Sentence  (6) impl ies  ne i ther  sentence  
(7) nor, a fort ior i ,  (8), whereas  
sentence (9) impl ies  sentences  ( i0) , ( i i ) .  
The d i f fe rent  uses of the s imple  
present  tense in (I) and (Z) are re la ted  
to a d i f fe rence  between the semant ic  
types of the verbs t_So bee i l i  and to 
repair.  We wi l l  account  for this 
d i f fe rence  by adapt ing  a c lass i f i ca t ion  
(essent ia l l y  due to Vend ler  (1967)) into 
four semant ic  types ( state, act iv i ty ,  
accompl i shement ,  ach ievement  ) . The 
use fu lness  of  such a c lass i f i ca t ion  is 
further  i l l us t ra ted  by compar ing  the 
behav iour  Of the verb to repa i r  in 
sentences  (6, 7, 8) w i th  that of the verb 
t So s in~ in (9, 10, 11). 
The compar i son  between (4) and (6) in 
re la t ion  wi th  (7) shows the necess i ty  of  
su i tab ly  represent ing  the d i f fe rence  
between the s imple  and the progress ive  
past, at least for verbs of the type to 
repai r  a car , which  are c lass i f ied  as 
accompl i shments .  
To represent  the d i f fe rence  between 
(4) (s imple past)  and (5) (present  
perfect) ,  we have to express what makes 
(8), but not (4), der ivab le  from (5). 
Re ichenbach 's  system of tempora l  indexes 
(point of speech, point  of event, point 
of re fe rence  ) can be used to hand le  
this phenomenon (Reichenbach,  1957 ). It 
p rov ides  a way of descr ib in~ the not ion  
of "present  re levance" ,  wh ich  is present  
in (5) , but not in (4). 
The contrast  between (1 , 2) and (12.) 
po ints  to another  k ind of d i s t inc t ion  one 
has to make: (i) expresses  a state, (2) a 
habit,  wh ich  hold at the moment  of 
speech. On the contrary,  (12) states a 
genera l  fact wh ich  is bas ica l ly  
undetermined  wi th  respect  to the moment  
of speech. Dependence  on the t ime of 
speech is a fact of tempora l  deixis .  Ue 
shal l  refer  to it as enuns ia t iv i t  Z , 
( fo l lowing A. Cul io l i )  . By oppos i t ion  
s i tuat ions  such as (12) wi l l  be termed 
aor ist ic .  
The preced ing  examples give sume idea 
of the type of in fo rmat ion  that has to be 
represented.  We have de l iberate ly  p layed 
down the pure ly  sequent ia l  type of 
in format ion,  wh ich  is the only type of 
tempora l  in fo rmat ion  most systems are 
concerned with. 
Moreover ,  the pure ly  sequent ia l  
type of in fo rmat ion  is most ly  incomplete  
110 
(this is s t ressed in par t i cu la r  by Smith  
(1978)). Cons ider  the fo l lowina examples:  
(13) John saw his doctor  this morn ing:  
he is ill. 
(14) John saw his doctor  this morning:  
now he is ill. 
Cont ras t in~ (13) and (14) shows a 
potent ia l  indeterminacy  in the re la t ion  
between the two sentences.  Smi th  (1978) 
c la ims that sentences  l ike (I), where  no 
expl ic i t  " re ference  t ime" is p rov ided  
(e.g. by a t ime adverb ia l  such as now) 
are tempora l ly  incomplete.  Ue wi l l  be 
content  at this point  of our d i scuss ion  
with not in~ the need for a conven ient  
notat ion  for such a phenomenon.  
TEMPORAL OBJECTS 
Ue assume that tempora l  in fo rmat ion  
in a text can be represented  by 
proceed in~ in  th ree  s teps  o f  inc reas in~ 
di f f icu l ty :  
- Tense in main c lauses.  
- Tense in subord inate  clauses.  
- Tense in texts. 
This h ie rarchy  fo l lows that Of E jerhed 
and Janlert  ( 1981). 
To summar ize  the d i scuss ion  of the 
prev ious  paragraph,  the fo l lowina  
e lements of temporal  in fo rmat ion  have to 
be abstracted:  
- temporal  de ix is  (enunc iat ive  vs. 
aor is t ic  s i tuat ions)  . Fo l low in~ Comr ie  
(1976), we use the term "s i tuat ion"  as a 
gener ic  term cover in~ states, events or 
processes  . 
- incept ion and te rminat ion  of a 
s i tuat ion.  
- in format ion  re la t ive  to the 
complet ion  of the s i tuat ion.  
- local in ferences  on s i tuat ions.  
- mass/count  p roper t ies  of s i tuat ions.  
In our system, these e lements are 
reconst ruc ted  from the fo l lowin~ 
l ingu is t ic  data: 
- tenses in the f in ite forms of verbs. 
temporal  spec i f ie rs  ( temporal  
adverb ia ls ) .  
- semant ic  types of s i tuat ions  
(computed from the semant ic  type of the 
verbs & la Vendler ,  and the syntact ic  
s t ructure  of the propos i t ion) .  
At this point, most ex is t in~ systems 
of representat ion  make a choice, s ince a 
not ion of durat ion  has to be inc luded in 
the model as well.  E i ther  one conce ives  
of the basic e lements  as points,  and the 
not ion  of an interval  has to be 
introduced;  or an interva l  is a bas ic  
element, and a second re la t ion  (of 
over lapp lna  or inc lus ion  ) is int roduced.  
In fact, in most ex is t ina  models  of time, 
the bas ic  e lements  of t ime are conce ived  
as e lements  or  subsets  of (a subset  o£) 
the real l ine (or some rami f ied  s t ruc ture  
bui l t  from it). 
The choice of e i ther  "po ints"  or 
" in terva ls"  as bas ic  e lements  leads to 
de f in i te  advantages  and par t i cu la r  
d i f f i cu l t ies .  The point  model  is 
bas ica l l y  s impler,  but  in some way harder  
to just i fy  semant ica l ly .  However,  as 
shown by Kamp (1979)  and Van Benthem 
( 1980 ), both po ints  of v iews are 
essent ia l l y  equivalent .  
Our c la im in the matter  fo l lows the 
~enera l  ph i losophy  of abst ract ion:  
Instead o£ the nature  of the  basic 
elements,  cons ider  their  in tended 
proper t ies  and combinat ion  ru les  for 
bu i ld in~ der ived  elements.  This 
combinator ia l  point  of v iew is impl ic i t ,  
for example, in A l len ' s  model  (Al len 83), 
where  a set of " in terva ls"  is abs t rac t ly  
character i zed  by the re la t ions  ho ld in~ 
between its e lements.  It can be shown 
(Bestou~ef f  and L i~ozat  ,1984) that any 
set theor i t i c  model  of A l len 's  ax ioms is 
equ iva lent  to (a subset)  of the in terva ls  
(that is, couples  of points)  on a to ta l ly  
ordered set. 
In our mode l , the  bas ic  e lements  are 
typed boundar ies ,  w i th  a (part ia l )  order  
def ined on them. As shown in (Bestougef f  
and L i~ozat,  1984) an a l te rnat ive  way of 
cons ider in~ the same abst rac t ion  wou ld  be 
in terms of " interva ls" ,  where  an 
interval  is a couple  (bl, b2) of 
boundar ies  wi th  bl <b2 . In other  words,  
the term " interva l "  has only  the not ions  
of a be~inn ina  and an end assoc ia ted  wi th  
it, and it is immater ia l  whether  one or 
the other te rmino logy  is used. No 
topo lowica l  p~oper t ies  are impl ied  , only  
combinator ia l  p roper t ies  (in terms of the 
types of boundar ies  ) are re ta ined  in the 
abstract ion.  Boundary  types are 
in t roduced in the model  in order  to 
represent  aspectua l  p roper t ies  of the 
data. 
As an example, cons ider  again 
sentences  (1) to (12). 
The state be ill in (i) ho lds upon an 
interval  whose left and r ight boundar ies  
are "c los ing"  and "opening",  
respect ive ly .  This is a general  s i tuat ion  
for states in an enunc ia t ive  sett ing.  
The event John repai r  my ca.._~ in (5), 
converse ly ,  holds upon an interval  w i th  
resp. "opening"  and "c los ina"  left and 
r ight boundar ies .  Consequent ly ,  the 
ad jacent  resu l t in~ state "my car is 
repa i red"  holds on an interva l  w i th  a 
111 
"closing" left boundary,  as a state 
should. The combinat ion  in (5) of a verb 
of accompl i shment  wi th  a "c los ing"  r isht 
boundary  insures that such a resu l t ing  
state does indeed exist. This is to be 
cont rasted  wi th  the s i tuat ion  in (6 ) .  
There, the r ight boundary  is an "open ing 
one", wh ich  prevents  the in ference of a 
completed  act ion from bein8 made 
It seems that the in t roduct ion  of 
such typed boundar ies  is enough to  
capture  the in tu i t ion  beh ind the use of 
topo log ica l  interva ls  in systems 
represent ing  tense and time. The approach  
chosen here prevents  the over load ing  of 
the ob jects  w i th  unnecessary  or 
undes i rab le  propert ies ,  as is the case 
when a concrete  model  l ike the real l ine 
i s  adopted .  
In  te rms o f  imp lemented  ob jec ts ,  th i s  
cor responds  to  the  de f in i t ion  o f  abst rac t  
in terva ls  from typed boundar ies  and 
pred icate  in fo rmat ion  (the latter  can be 
empty) .  
AS an example , the expl ic i t  
de f in i t ion  of an interval  is as fo l lows : 
abstype intv =boundary  # pred# boundary  
wi th  make_ in tv  (11,12,13)= 
abs_ in tv  (11,12,13) 
and left I =fst (rep intv i) 
and r ight 1 = snd (snd ( rep_ intv  i)) 
and 8etp 1 =fst (snd ( rep_ Intv  l)) 
and purl (b, i)= 
if fst ( rep_ intv  i) =U 
then abs_ in tv  (b , f s t ( snd( rep_ in tv ) ) ,  
snd(snd ( rep_ intv  i ) ) )  
else i 
and putr (b , i )= 
if snd(snd( rep_ in tv  i)) = U 
then abs_ in tv ( f s t ( rep_ in tv  i), 
f s t ( snd( rep_ in tv  i)) ,b) 
else i 
and show_ intv  1 =rep_ in tv  i;; 
The s ignature  of this object  is the 
set of typed operators:  
make_ in#v=-:  
(boundary # pred# boundary)  -> intv 
le~t=-: intv -> boundary  
r ight=-: intv -> boundary  
getp =-: intv -> pred 
purl =-: (boundary#in#v)  -> intv 
purr =-: (boundary # intv ) -> intv 
show intv =-: 
intv ->( intv  + (intv # nseq))  
It seems in tu i t i ve ly  sa t i s fy ing  to 
cons ider  the s t retch of t ime invo lved in 
a s imple c lause as to ta l ly  ordered.  The 
local in ferences  operate  on this 
res t r i c ted  scope. 
To abstract  this phenomenon we 
in t roduce interval  sequences  w i th  
const ra in ts  on the boundary  types of 
ad jacent  intervals:  
absrectype  nseq= intv + in# # nseq  
force=-: intv -> nseq 
ncons=- : ( in tv#nseq)  -> nseq 
make tnseq=- : ( in tv  # nseq) -> nseq 
show nseq=-:  
nseq -> ( intv + ( intv # nseq))  
The centra l  object  in the model  
cor responds  to a s imple  clause. It is 
ca l led a po ly typed  stt-ing (or PTS). It is 
obta ined from an interval  sequence by 
add in~ the in fo rmat ion  about tempora l  
indexes a la Re ichenbach:  
abstype  pts  =nseq  # index  
make_pts=- : ( (nseq  #index) -> pts) 
fl=-: pred -> pts 
f2=-: pred -> pts 
fn=- :  p red  -> pts  
rules:- :  
(status # tense # vend ler  # adverb ia l )  
-> pred -> pts) 
apply rules =-: 
(p red  # status)  -> pts  
where  the funct iona l  type "pred-> pts" 
denotes  the set of funct ions  wh ich  bu i ld  
PTS's from pred icate  in format ion.  
The pred icate  in fo rmat ion  is g iven  
through the " ru les"  where  "status"  is 
the in fo rmat ion  re la t ive  to the 
enunc ia t ive  vs. aor i s t i c  status;  " tense" 
denotes  the morpho log ica l  tense of the 
clause, "vendler"  , the Vend ler  c lass 
(i.e. state, act iv i ty ,  accompl i shement  
or ach ievement  ) computed from c lasse(s )  
ass igned to verbs in the d ic t ionary  and 
the syntact i ca l  conf igurat ions  ; f ina l ly  
"adverb ia l "  cor responds  to in fo rmat ion  
at tached to the t ime adverb ia ls .  
Up to this point  , we have descr ibed  
the fundamenta ls  of the sys tem of 
representat ion .  Of course, the actual  
const ruct ion  of the representat ive  
temporal  object  for a text in a g iven 
language is h igh ly  language dependent .  
For instaxlce, the present  tense in French 
(which is the language we are work ing  on) 
is not in a s imple cor respondance  wi th  
the "cor respond ing"  s imple  present  in 
Engl ish.  Consequent ly  , re fe r r in~ to the 
ob jects  descr ibed  above, the funct ions  
"fi", and "ru les"  are qu i te  spec i f i c  to 
the s t ruc ture  of the language 
represented.  
The tempora l  re la t ions  in longer uni ts  
of d i scourse  are comparat ive ly  much more 
loose ly  speci f ied.  Cons ider  the fo l low ing  
112 
example: 
(15) Shakespeare  is dead. John is ili. 
And I am not feel in~ wel l  either. 
Apart  from cons iderat ions  per ta in in~ 
to rea l -wor ld  knowledge,  no in fo rmat ion  
is g iven about the re la t ive  order  of the 
beg inn ings  of the three s i tuat ions  
considered.  So the representat ion  should  
a l low for indeterminacy ,  either in 
l i s t in~ all poss ib le  a l te rnat ives  (this 
wou ld  be the case in A l len ' s  model) ,  or 
in leaving the order unspec i f ied .  This 
more economical  so lu t ion  is chosen here. 
Compare  (15) to the fo l lowin@: 
(16) Mary  ~ot pregnant .  She marr ied  John. 
(17) Mary  marr ied  John. She got pregnant .  
Here, the order  of d i scourse  seems 
pert inent  and should  be represented.  
More complex examples  in this respect  
are: 
(18)  John  was angry  when Mary dropped the  
V as e . 
(19) Mary  dropped the vaue. John was 
ansry. 
(20) John was angry. Mary  dropped the 
vas e. 
where (19) or a l te rnat ive ly  (20) can be a 
paraphrase  of (18). 
The preced in~ d iscuss ion  shows that 
the total o rder ing  at the sentence level 
cannot in ~eneral  be extended to lar~er 
units in a s imple  way. The eventual  
re la t ions  between d i f fe rent  s imple  
sentences  are a result  of a computat ion  
makin~ use of the tempora l  s t ruc ture  of 
those sentences  and the order of 
d iscourse.  
This fact is captured  as fol lows: The 
s t ructure  represent in~ a text is 
const ruc ted  stepwise.  At each step of the 
construct ion,  the exls t in~ s t ruc ture  
prov ides  a context,  in wh ich  the order of 
d iscourse,  in part icu lar ,  is represented.  
In technica l  terms, the cor respond ing  
object is ca l led " tempora l  site". It is 
composed of a sequence of PTS's together  
wi th  a set of re la t ions  on the boundar ies  
of the const i tuent  PTS's .So the next 
sentence to be examined, taken in 
isolat ion,  is represented  by a poss ib ly  
incomplete  s t ructure  (a po ly typed  str ing) 
with a total order on it, but wi th  
poss ib le  indeterminac ies  (for example, in 
the ass ignment  of t ime indexes).  This new 
s t ructure  is inserted into the old one, 
(a l ready const ruc ted  tempora l  site ) 
thereby creat in~ new const ra in ts  
resu l t ing  in the eva luat ion  of some 
undetermined  parameters  in both 
structures.  
Here a~ain, the prec i se  combinat ion  
rules are lanKua~e speci f ic ,  as they 
depend on the semant ic  p roper t ies  of the 
t ime re la t ions  in the lan~uaae.  
It is beyond the scope of this paper  
¢o g ive the ru les  used for French. 
However  ¢o ~ive an ind icat ion  of what the 
const ruc t ion  amounts  to , cons ider  the  
fo l lowing engl ish  sentences:  
(21) John was in love wi th  Nary; 
(22) John has bui l t  his house; 
(23) John was bu i ld ing  his house when I 
left for Rome. 
The ana lys is  of (21) yields:  
tense : s imple  past; 
s tatus : enunc ia t ive  (by defaul t ) ;  
vend ler  :state; 
adverb ia l  :none. 
Denot ing  by "p" the pred icat ion :  John 
is in love wi th  Mary, the s t ruc ture  of 
the represent ing  PTS can be Symbo l i zed  by 
the formula  : 
C1 p O2 ~ 03 ($3 R2) 
where  the C's and O's denote  c los in8  and 
open ing  boundar ies  and S and R ,po in ts  of 
speech and re ference  respect ive ly  . These 
are indexed by the order  of occur rence  of 
the cor respond in~ boundar ies .  ~ denotes  a 
dummy pred icat ion .  
Cons ider  sentence (22)  Here 
tense : present  perfect ;  
s tatus : enunc ia t ive  (because of the 
present  per fect  tense);  
vend ler  : accompl i shment  (perfect  form); 
adverb ia l  : none. 
The formula  : 
01 p C2 res l t (p)  03 ($3 R3) 
descr ibes  the assoc ia ted  9TS, where  p is 
John bui lds  his house and res l t (p)  is a 
resu l t in~ state, obta ined  by local 
inference,  wh ich  expresses  : the house is 
bui l t  . 
F inal ly,  cons ider  sentence  (23) .  The 
assoc ia ted  tempora l  s ite can be 
symbo l i zed  by: 
1: O1 p 02 ~ 03 
2 :01  q C2 ~ 03 
($3,R2) 
(S3,R2) 
REL: 01:1 < 01:2 
02:1 >= 01:2 
This tempora l  s ite conta ins  two FTS's, 
w i th  p = John bui lds  his house and q= 
I leave for Rome .q is an ach ievement  in 
Vend ler ' s  c lass i f i cat ion .  The add i t iona l  
in fo rmat ion  concerns  the order ing  
re la t ions  between the boundar ies  of the 
PTS's, numbered  1 and 2. 
Ue have been main ly  concerned  w i th  
the representat ion  of what we have termed 
enunc ia t ive  s i tuat ions  (as opposed  to 
aor is t ic  ones). This is jus t i f ied  , as 
113 
such  s i tuat ions p lay  a central  role in 
d iscourse.  Concern ing  aor is t ic  
s i tuat ions,  s imi lar  representat ive  
s~ructures  are used, which are in fact 
more  st r ic t ly  constra ined.  
Habitual  s i tuat ions  (e.g. sentence 
(2)) involve a par t i cu la r  t reatment  of 
the pred icat ive  component,  but o therwise  
fit into the general  scheme descr ibed  
above. From this point  of view, they are 
no d i f ferent  from factual s i tuat ions.  
D ispos i t iona l  sentences,  on the other  
hand, cannot be d iscussed  wi thout  
enter ing the domain of modal i t¥.  A l though 
this may seem a ser ious l imi tat ion  
(espec ia l ly  for Engl ish, where moda l i ty  
is all pervas ive  ), we leave it as ide in 
the present cons iderat ion  of tense and 
time. 
The preced ing d iscuss ion  i l lus t rates  
the use of l ingu is t ic  in ference at three 
d ist inct  levels: 
a) At the s imple  sentence level, 
bu i ld ing  a representat ion  involves a 
first type of inference,  which makes use 
of morpho-syntact i c  and lex ico -semant ic  
in format ion  . 
b) At the next h igher  level, as 
i l lust rated by  examples (15-20), another  
type of in ference is used to spec i fy  and 
bui ld  the cor respond ln~ s t ructures  
(temporal  sites). 
c) St i l l  another  k ind of l ln~uist ic  
in ference should account  for the poss ib le  
der ivab i l i t ies  Or paraphras ings  ment ioned 
pr0pos examples (1-12). Its 
fo rmal i zat ion  should make it poss ib le  to 
descr ibe  this in ference which, s tar t ing  
from a ~iven temporal  s ite a l lows to 
deduce new sites from it. 
Whereas the first two types of 
in ference are  const i tu t ive  of the 
der ivat ion  of temporal  s t ructures  and are 
central  to our act iv i ty,  the last type 
has sti l l  to be def ined and examined in a 
systemat ic  way i.e. def ined exp l i c i te ly  
as der ivat ion  rules. In this context,  the 
fac i l i t ies  for se l f - re ference  and 
structura l  in ference in the sof tware  
envi ronment  are of pr imary  re levance.  
REFERENCES 
A l len , J .A .1983 Ma inta in ing  knowledge 
about temporal  intervals.  Comm.ACM 26 
pp.832-843.  
Bes%ougeff ,  H. and Ligozat,  G. 1984a 
Process ing Tense In format ion  in French 
Utterances.  Proceed ings  of the 6th  
European Conference  on Ar t i f i c ia l  
Inte l l igence.  Pisa, I ta ly :209-Z12 
Bestougef f ,  H. and Ligozat,  G. 1984b 
L ' in f~rence  tempore l le  en s i tuat ion  
or ient~e par l 'act ion. P roceed ings  of 
the CNRS Greco Seminar .Nancy ,  France. 
Bestougef f ,  H. and Ligozat,  G. 1984c 
Temporal  Intervals  Revis i ted.  
CNRS Research  Report,  Par is  7. 
Cul io l i ,  A. 1980 Va leurs  aspectue l les  et 
op4rat ions  4nonc ia~ives.  In Dav id , J .and  
Mart in,  R., Eds., La not ion  d 'aspect .  
K l incks ieck,  Paris: 181-193. 
Comrie, B. 1976 Aspect.  Cambr idge  
Un ivers i ty  Press 
De Boiss ieu,  A. and Forest,  F. 1985 
Ana lyse  l ingu is t ique  en termes 
d 'ob je ts .CNRS Research  repor t ,Par i s  7. 
Ejerhed, E.I. and Janlert ,  L.E. 1981 
Represent ing  t ime in natura l  language 
process ing.  In P roceed ings  o£ the 
Workshop on Models  of D ia logue 
L inkop in~ UIT. 
Goguen, J .A .  Meseguer ,  J. P1aisted,  D. 
1983 Programming wi th  Parametr i zed  
Abst ract  Objects  in OBJ. in Theory  and 
Pract ice  of So f tware  Technology.  D. 
Ferrari ,  M .Bo lognan i  and Goguen Eds. 
North  Hol land.  
Goguen, J.A. and Bursta l l ,  R.M. 1984 
Int roduc ing Inst i tut ions.  in  
P roceed ings  , Logics of P rogramming 
Workshop.  EoClarke  and D.Kozen Eds. 
Lecture Notes  in Computer  Sc ience,  
Vol 164 Spr inger  Ver lag.  
Goguen J.A. and Meseguer  J. 1984 
Equa l i ty ,Types ,Modu les  and (why not?)  
Gener ics  for Logic Programming.  J. 
Logic P rogrammin~ 1984:2. 
Goldberg,  A. and 
Smal l ta lk -80 .The  
implementat ion.  
Pub l i sh in~ Company. 
Robson, D. 1983 
language and its 
Add ison  Wes ley  
Gordon,M. J . ,  Mi lner,  A.J. Wadswor th ,L .P .  
1979 Ed inburg  LCF. Lecture  Notes in 
Computer  Sc ience  Vol 78 Spr inger  
INRIA. 1984 The ML Handbook  Vers ion  
5.1. Report  of Inst i tut  Nat iona l  de 
Recherche  en In format ique  et 
Automat ique.  France. 
Kamp, H. 1979 Events, Instants,  and 
Temporal  Reference.  In Egl i ,U. and Von 
Stechow, A., Eds. Semant ics  from a 
mul t ip le  point  o£ view. De Gruyther ,  
Berl in:  376-417. 
114 
Reichenbach, H. 1957 The Phi losophy of 
Space and Time. New York. 
Smith, C. 1978 The syntax and 
interpretation of temporal expressions 
in English. Linguist ics and Phi losophy 
2: 44-99. 
Steels, L. 1983 ORBIT : An Appl icat ive 
View of Object Programming. in 
Integrated Interactive Computing 
Systems .P.Degano, E. Sandewall Eds. 
North Holland. 
Van Benthem, J. 1980 Points and 
periods. In Rohrer, C., Eds., Time, 
Tense, and Quanti£iers, Niemeyer, 
Tuebingen:39-57. 
Vendler, Z. 1967 Linguistics in 
Philosophy. Cornell University Press, 
Ithaca. 
115 
