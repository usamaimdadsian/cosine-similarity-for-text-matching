Proceedings of the 2008 Conference on Empirical Methods in Natural Language Processing, pages 1070–1079,
Honolulu, October 2008. c©2008 Association for Computational Linguistics
An Analysis of Active Learning Strategies for Sequence Labeling Tasks
Burr Settles?†
?Dept. of Computer Sciences
University of Wisconsin
Madison, WI 53706, USA
bsettles@cs.wisc.edu
Mark Craven†?
†Dept. of Biostatistics & Medical Informatics
University of Wisconsin
Madison, WI 53706, USA
craven@biostat.wisc.edu
Abstract
Active learning is well-suited to many prob-
lems in natural language processing, where
unlabeled data may be abundant but annota-
tion is slow and expensive. This paper aims
to shed light on the best active learning ap-
proaches for sequence labeling tasks such as
information extraction and document segmen-
tation. We survey previously used query selec-
tion strategies for sequence models, and pro-
pose several novel algorithms to address their
shortcomings. We also conduct a large-scale
empirical comparison using multiple corpora,
which demonstrates that our proposed meth-
ods advance the state of the art.
1 Introduction
Traditional supervised learning algorithms use
whatever labeled data is provided to induce a model.
By contrast, active learning gives the learner a de-
gree of control by allowing it to select which in-
stances are labeled and added to the training set. A
typical active learner begins with a small labeled set
L, selects one or more informative query instances
from a large unlabeled pool U , learns from these la-
beled queries (which are then added to L), and re-
peats. In this way, the learner aims to achieve high
accuracy with as little labeling effort as possible.
Thus, active learning can be valuable in domains
where unlabeled data are readily available, but ob-
taining training labels is expensive.
Such is the case with many sequence labeling
tasks in natural language domains. For example,
part-of-speech tagging (Seung et al., 1992; Lafferty
et al., 2001), information extraction (Scheffer et al.,
2001; Sang and DeMeulder, 2003; Kim et al., 2004),
and document segmentation (Carvalho and Cohen,
2004) are all typically treated as sequence labeling
problems. The source data for these tasks (i.e., text
documents in electronic form) are often easily ob-
tained. However, due to the nature of sequence la-
beling tasks, annotating these texts can be rather te-
dious and time-consuming, making active learning
an attractive technique.
While there has been much work on active learn-
ing for classification (Cohn et al., 1994; McCallum
and Nigam, 1998; Zhang and Oles, 2000; Zhu et
al., 2003), active learning for sequence labeling has
received considerably less attention. A few meth-
ods have been proposed, based mostly on the con-
ventions of uncertainty sampling, where the learner
queries the instance about which it has the least cer-
tainty (Scheffer et al., 2001; Culotta and McCallum,
2005; Kim et al., 2006), or query-by-committee,
where a “committee” of models selects the instance
about which its members most disagree (Dagan and
Engelson, 1995). We provide more detail on these
and the new strategies we propose in Section 3.
The comparative effectiveness of these ap-
proaches, however, has not been studied. Further-
more, it has been suggested that uncertainty sam-
pling and query-by-committee fail on occasion (Roy
and McCallum, 2001; Zhu et al., 2003) by query-
ing outliers, e.g., instances considered informative
in isolation by the learner, but containing little infor-
mation about the rest of the distribution of instances.
Proposed methods for dealing with these shortcom-
ings have so far only considered classification tasks.
1070
This paper presents two major contributions for
active learning and sequence labeling tasks. First,
we motivate and introduce several new query strate-
gies for probabilistic sequence models. Second, we
conduct a thorough empirical analysis of previously
proposed methods with our algorithms on a variety
of benchmark corpora. The remainder of this pa-
per is organized as follows. Section 2 provides a
brief introduction to sequence labeling and condi-
tional random fields (the sequence model used in
our experiments). Section 3 describes in detail all
the query selection strategies we consider. Section 4
presents the results of our empirical study. Section 5
concludes with a summary of our findings.
2 Sequence Labeling and CRFs
In this paper, we are concerned with active learn-
ing for sequence labeling. Figure 1 illustrates
how, for example, an information extraction prob-
lem can be viewed as a sequence labeling task.
Let x = ?x1, . . . , xT ? be an observation sequence
of length T with a corresponding label sequence
y = ?y1, . . . , yT ?. Words in a sentence corre-
spond to tokens in the input sequence x, which are
mapped to labels in y. These labels indicate whether
the word belongs to a particular entity class of inter-
est (in this case, org and loc) or not (null). These
labels can be assigned by a sequence model based
on a finite state machine, such as the one shown to
the right in Figure 1.
We focus our discussion of active learning for
sequence labeling on conditional random fields, or
CRFs (Lafferty et al., 2001). The rest of this sec-
tion serves as a brief introduction. CRFs are sta-
tistical graphical models which have demonstrated
state-of-the-art accuracy on virtually all of the se-
quence labeling tasks mentioned in Section 1. We
use linear-chain CRFs, which correspond to condi-
tionally trained probabilistic finite state machines.
A linear-chain CRF model with parameters ? de-
fines the posterior probability of y given x to be1:
P (y|x; ?) =
1
Z(x)
exp
(
T?
t=1
K?
k=1
?kfk(yt?1, yt,xt)
)
.
(1)
1Our discussion assumes, without loss of generality, that
each label is uniquely represented by one state, thus each label
sequence y corresponds to exactly one path through the model.
loc
orgnull
x:
y:
...the
null
ACME
org
Inc.
org
offices
null
in
null
Chicago
loc
Figure 1: An information extraction example treated as
a sequence labeling task. Also shown is a corresponding
sequence model represented as a finite state machine.
Here Z(x) is a normalization factor over all pos-
sible labelings of x, and ?k is one of K model
parameter weights corresponding to some feature
fk(yt?1, yt,xt). Each feature fk describes the se-
quence x at position t with label yt, observed along
a transition from label states yt?1 to yt in the finite
state machine. Consider the example text from Fig-
ure 1. Here, fk might be the feature WORD=ACME
and have the value fk = 1 along a transition from
the null state to the org state (and 0 elsewhere).
Other features set to 1 here might be ALLCAPS and
NEXTWORD=Inc. The weights in ? are set to max-
imize the conditional log likelihood ` of training se-
quences in the labeled data set L:
`(L; ?) =
L?
l=1
logP (y(l)|x(l); ?) ?
K?
k=1
?2k
2?2
,
where L is the size of the labeled set L, and the sec-
ond term is a Gaussian regularization penalty on ???
to prevent over-fitting. After training, labels can be
predicted for new sequences using the Viterbi algo-
rithm. For more details on CRFs and their training
procedures, see Sutton and McCallum (2006).
Note that, while we describe the active learning
algorithms in the next section in terms of linear-
chain CRFs, they have analogs for other kinds of
sequence models, such as hidden Markov models,
or HMMs (Rabiner, 1989), probabilistic context-
free grammars (Lari and Young, 1990), and general
CRFs (Sutton and McCallum, 2006).
3 Active Learning with Sequence Models
In order to select queries, an active learner must have
a way of assessing how informative each instance is.
Let x? be the most informative instance according to
some query strategy ?(x), which is a function used
to evaluate each instance x in the unlabeled pool U .
1071
Given: Labeled set L, unlabeled pool U , query
strategy ?(·), query batch size B
repeat
// learn a model using the current L
? = train(L) ;
for b = 1 to B do
// query the most informative instance
x?b = argmaxx?U ?(x) ;
// move the labeled query from U to L
L = L ? ?x?b , label(x
?
b)? ;
U = U ? x?b ;
end
until some stopping criterion ;
Algorithm 1: Pool-based active learning.
Algorithm 1 provides a sketch of the generic pool-
based active learning scenario.
In the remainder of this section, we describe var-
ious query strategy formulations of ?(·) that have
been used for active learning with sequence mod-
els. We also point out where we think these ap-
proaches may be flawed, and propose several novel
query strategies to address these issues.
3.1 Uncertainty Sampling
One of the most common general frameworks for
measuring informativeness is uncertainty sampling
(Lewis and Catlett, 1994), where a learner queries
the instance that it is most uncertain how to la-
bel. Culotta and McCallum (2005) employ a sim-
ple uncertainty-based strategy for sequence models
called least confidence (LC):
?LC(x) = 1 ? P (y?|x; ?).
Here, y? is the most likely label sequence, i.e., the
Viterbi parse. This approach queries the instance
for which the current model has the least confidence
in its most likely labeling. For CRFs, this confi-
dence can be calculated using the posterior proba-
bility given by Equation (1).
Scheffer et al. (2001) propose another uncertainty
strategy, which queries the instance with the smallest
margin between the posteriors for its two most likely
labelings. We call this approach margin (M):
?M (x) = ?
(
P (y?1|x; ?) ? P (y
?
2|x; ?)
)
.
Here, y?1 and y
?
2 are the first and second best la-
bel sequences, respectively. These can be efficiently
computed using the N -best algorithm (Schwartz
and Chow, 1990), a beam-search generalization of
Viterbi, with N = 2. The minus sign in front is sim-
ply to ensure that ?M acts as a maximizer for use
with Algorithm 1.
Another uncertainty-based measure of informa-
tiveness is entropy (Shannon, 1948). For a dis-
crete random variable Y , the entropy is given by
H(Y ) = ?
?
i P (yi) logP (yi), and represents the
information needed to “encode” the distribution of
outcomes for Y . As such, is it often thought of as
a measure of uncertainty in machine learning. In
active learning, we wish to use the entropy of our
model’s posteriors over its labelings. One way this
has been done with probabilistic sequence models is
by computing what we call token entropy (TE):
?TE(x) = ?
1
T
T?
t=1
M?
m=1
P?(yt = m) logP?(yt = m),
(2)
where T is the length of x, m ranges over all pos-
sible token labels, and P?(yt = m) is shorthand
for the marginal probability that m is the label at
position t in the sequence, according to the model.
For CRFs and HMMs, these marginals can be effi-
ciently computed using the forward and backward
algorithms (Rabiner, 1989). The summed token en-
tropies have typically been normalized by sequence
length T , to avoid simply querying longer sequences
(Baldridge and Osborne, 2004; Hwa, 2004). How-
ever, we argue that querying long sequences should
not be explicitly discouraged, if in fact they contain
more information. Thus, we also propose the total
token entropy (TTE) measure:
?TTE(x) = T × ?TE(x).
For most sequence labeling tasks, however, it is
more appropriate to consider the entropy of the la-
bel sequence y as a whole, rather than some aggre-
gate of individual token entropies. Thus an alternate
query strategy is sequence entropy (SE):
?SE(x) = ?
?
yˆ
P (yˆ|x; ?) logP (yˆ|x; ?), (3)
where yˆ ranges over all possible label sequences for
input sequence x. Note, however, that the number
1072
of possible labelings grows exponentially with the
length of x. To make this feasible, previous work
(Kim et al., 2006) has employed an approximation
we call N-best sequence entropy (NSE):
?NSE(x) = ?
?
yˆ?N
P (yˆ|x; ?) logP (yˆ|x; ?),
where N = {y?1, . . . ,y
?
N}, the set of the N most
likely parses, and the posteriors are re-normalized
(i.e., Z(x) in Equation (1) only ranges over N ). For
N = 2, this approximation is equivalent to ?M , thus
N -best sequence entropy can be thought of as a gen-
eralization of the margin approach.
Recently, an efficient entropy calculation via dy-
namic programming was proposed for CRFs in the
context of semi-supervised learning (Mann and Mc-
Callum, 2007). We use this algorithm to compute
the true sequence entropy (3) for active learning in
a constant-time factor of Viterbi’s complexity. Hwa
(2004) employed a similar approach for active learn-
ing with probabilistic context-free grammars.
3.2 Query-By-Committee
Another general active learning framework is the
query-by-committee (QBC) approach (Seung et al.,
1992). In this setting, we use a committee of models
C = {?(1), . . . , ?(C)} to represent C different hy-
potheses that are consistent with the labeled set L.
The most informative query, then, is the instance
over which the committee is in most disagreement
about how to label.
In particular, we use the query-by-bagging ap-
proach (Abe and Mamitsuka, 1998) to learn a com-
mittee of CRFs. In each round of active learning,
L is sampled (with replacement) L times to create
a unique, modified labeled set L(c). Each model
?(c) ? C is then trained using its own corresponding
labeled set L(c). To measure disagreement among
committee members, we consider two alternatives.
Dagan and Engelson (1995) introduced QBC with
HMMs for part-of-speech tagging using a measure
called vote entropy (VE):
?V E(x) = ?
1
T
T?
t=1
M?
m=1
V (yt,m)
C
log
V (yt,m)
C
,
where V (yt,m) is the number of “votes” labelm re-
ceives from all the committee member’s Viterbi la-
belings at sequence position t.
McCallum and Nigam (1998) propose a QBC
strategy for classification based on Kullback-Leibler
(KL) divergence, an information-theoretic measure
of the difference between two probability distribu-
tions. The most informative query is considered to
be the one with the largest average KL divergence
between a committee member’s posterior label dis-
tribution and the consensus. We modify this ap-
proach for sequence models by summing the average
KL scores using the marginals at each token position
and, as with vote entropy, normalizing for length.
We call this approach Kullback-Leibler (KL):
?KL(x) =
1
T
T?
t=1
1
C
C?
c=1
D(?(c)?C),
where (using shorthand again):
D(?(c)?C) =
M?
m=1
P?(c)(yt = m) log
P?(c)(yt = m)
PC(yt = m)
.
Here PC(yt = m) = 1C
?C
c=1 P?(c)(yt = m), or the
“consensus” marginal probability that m is the label
at position t in the sequence.
Both of these disagreement measures are normal-
ized for sequence length T . As with token en-
tropy (2), this may bias the learner toward query-
ing shorter sequences. To study the effects of nor-
malization, we also conduct experiments with non-
normalized variants ?TV E and ?TKL.
Additionally, we argue that these token-level dis-
agreement measures may be less appropriate for
most tasks than measuring the committee’s disagree-
ment about the label sequence y as a whole. There-
fore, we propose sequence vote entropy (SVE):
?SV E(x) = ?
?
yˆ?NC
P (yˆ|x; C) logP (yˆ|x; C),
where N C is the union of the N -best parses from
all models in the committee C, and P (yˆ|x; C) =
1
C
?C
c=1 P (yˆ|x; ?
(c)), or the “consensus” posterior
probability for some label sequence yˆ. This can be
thought of as a QBC generalization of N -best en-
tropy, where each committee member casts a vote
for the posterior label distribution. We also explore
a sequence Kullback-Leibler (SKL) variant:
?SKL(x) =
1
C
C?
c=1
?
yˆ?NC
P (yˆ|x; ?(c)) log
P (yˆ|x; ?(c))
P (yˆ|x; C)
.
1073
3.3 Expected Gradient Length
A third general active learning framework we con-
sider is to query the instance that would impart the
greatest change to the current model if we knew its
label. Since we train discriminative models like
CRFs using gradient-based optimization, this in-
volves querying the instance which, if labeled and
added to the training set, would create the greatest
change in the gradient of the objective function (i.e.,
the largest gradient vector used to re-estimate pa-
rameter values).
Let ?`(L; ?) be the gradient of the log-
likelihood ` with respect to the model parameters ?,
as given by Sutton and McCallum (2006). Now let
?`(L+?x,y?; ?) be the new gradient that would be
obtained by adding the training tuple ?x,y? to L.
Since the query algorithm does not know the true la-
bel sequence y in advance, we instead calculate the
expected gradient length (EGL):
?EGL(x) =
?
yˆ?N
P (yˆ|x; ?)
?
?
??`(L+?x,yˆ?; ?)
?
?
? ,
approximated as an expectation over the N -best la-
belings, where ? · ? is the Euclidean norm of each
resulting gradient vector. We first introduced this ap-
proach in previous work on multiple-instance active
learning (Settles et al., 2008), and adapt it to query
selection with sequences here. Note that, at query
time, ?`(L; ?) should be nearly zero since ` con-
verged at the previous round of training. Thus, we
can approximate ?`(L+?x,yˆ?; ?) ? ?`(?x, yˆ?; ?)
for computational efficiency, because the training in-
stances are assumed to be independent.
3.4 Information Density
It has been suggested that uncertainty sampling and
QBC are prone to querying outliers (Roy and Mc-
Callum, 2001; Zhu et al., 2003). Figure 2 illus-
trates this problem for a binary linear classifier us-
ing uncertainty sampling. The least certain instance
lies on the classification boundary, but is not “rep-
resentative” of other instances in the distribution, so
knowing its label is unlikely to improve accuracy on
the data as a whole. QBC and EGL exhibit similar
behavior, by spending time querying possible out-
liers simply because they are controversial, or are
expected to impart significant change in the model.
A
B
Figure 2: An illustration of when uncertainty sampling
can be a poor strategy for classification. Shaded poly-
gons represent labeled instances (L), and circles repre-
sent unlabeled instances (U). Since A is on the decision
boundary, it will be queried as the most uncertain. How-
ever, querying B is likely to result in more information
about the data as a whole.
We argue that this phenomenon can occur with se-
quence labeling tasks as well as with classification.
To address this, we propose a new active learning
approach called information density (ID):
?ID(x) = ?SE(x) ×
(
1
U
U?
u=1
sim(x,x(u))
)?
.
That is, the informativeness of x is weighted by its
average similarity to all other sequences in U , sub-
ject to a parameter ? that controls the relative im-
portance of the density term. In the formulation pre-
sented above, sequence entropy ?SE measures the
“base” informativeness, but we could just as easily
use any of the instance-level strategies presented in
the previous sections.
This density measure requires us to compute the
similarity of two sequences. To do this, we first
transform each x, which is a sequence of feature
vectors (tokens), into a single kernel vector ~x:
~x =
[
T?
t=1
f1(xt), . . . ,
T?
t=1
fJ(xt)
]
,
where fj(xt) is the value of feature fj for token xt,
and J is the number of features in the input represen-
tation2. In other words, sequence x is compressed
into a fixed-length feature vector ~x, for which each
element is the sum of the corresponding feature’s
values across all tokens. We can then use cosine
2Note that J 6= K, and fj(xt) here differs slightly from the
feature definition given in Section 2. Since the labels yt?1 and
yt are unknown before querying, the K features used for model
training are reduced down to the J input features here, which
factor out any label dependencies.
1074
similarity on this simplified representation:
simcos(x,x(u)) =
~x · ~x(u)
?~x? × ?~x(u)?
.
We have also investigated similarity functions
based on exponentiated Euclidean distance and KL-
divergence, the latter of which was also employed by
McCallum and Nigam (1998) for density-weighting
QBC in text classification. However, these measures
show no improvement over cosine similarity, and re-
quire setting additional hyper-parameters.
One potential drawback of information density is
that the number of required similarity calculations
grows quadratically with the number of instances
in U . For pool-based active learning, we often as-
sume that the size of U is very large. However,
these densities only need to be computed once, and
are independent of the base information measure.
Thus, when employing information density in a real-
world interactive learning setting, the density scores
can simply be pre-computed and cached for efficient
lookup during the actual active learning process.
3.5 Fisher Information
We also introduce a query selection strategy for se-
quence models based on Fisher information, build-
ing on the theoretical framework of Zhang and Oles
(2000). Fisher information I(?) represents the over-
all uncertainty about the estimated model parame-
ters ?, as given by:
I(?) = ?
?
x
P (x)
?
y
P (y|x; ?)
?2
??2
logP (y|x; ?).
For a model with K parameters, the Fisher infor-
mation takes the form of a K × K covariance ma-
trix. Our goal in active learning is to select the query
that most efficiently minimizes the model variance
reflected in I(?). This can be accomplished by op-
timizing the Fisher information ratio (FIR):
?FIR(x) = ?tr
(
Ix(?)
?1IU (?)
)
, (4)
where Ix(?) and IU (?) are Fisher information ma-
trices for sequence x and the unlabeled pool U , re-
spectively. The leading minus sign again ensures
that ?FIR is a maximizer for use with Algorithm 1.
Previously, Fisher information for active learning
has only been investigated in the context of simple
binary classification. When employing FIR with se-
quence models like CRFs, there are two additional
computational challenges. First, we must integrate
over all possible labelings y, which can, as we have
seen, be approximated as an expectation over theN -
best labelings. Second, the inner product in the ratio
calculation (4) requires inverting a K × K matrix
for each x. In most interesting natural language ap-
plications, K is very large, making this algorithm
intractable. However, it is common in similar situ-
ations to approximate the Fisher information matrix
with its diagonal (Nyffenegger et al., 2006). Thus
we estimate Ix(?) using:
Ix(?) =
?
yˆ?N
P (yˆ|x; ?)
[(
? logP (yˆ|x; ?)
??1
)2
+ ?, . . . ,
(
? logP (yˆ|x; ?)
??K
)2
+ ?
]
,
and IU (?) using:
IU (?) =
1
U
U?
u=1
Ix(u)(?).
For CRFs, the partial derivative at the root of each
element in the diagonal vector is given by:
? logP (yˆ|x; ?)
??k
=
T?
t=1
fk(yˆt?1, yˆt,xt)
?
T?
t=1
?
y,y?
P (y, y?|x)fk(y, y?,xt),
which is similar to the equation used to compute the
training gradient, but without a regularization term.
A smoothing parameter ?  1 is added to prevent
division by zero when computing the ratio.
Notice that this method implicitly selects repre-
sentative instances by favoring queries with Fisher
information Ix(?) that is not only high, but similar
to that of the overall data distribution IU (?). This
is in contrast to information density, which tries to
query representative instances by explicitly model-
ing the distribution with a density weight.
1075
Corpus Entities Features Instances
CoNLL-03 4 78,644 19,959
NLPBA 5 128,401 18,854
BioCreative 1 175,331 10,000
FlySlip 1 31,353 1,220
CORA:Headers 15 22,077 935
CORA:References 13 4,208 500
Sig+Reply 2 25 617
SigIE 12 10,600 250
Table 1: Properties of the different evaluation corpora.
4 Empirical Evaluation
In this section we present a large-scale empirical
analysis of the query strategies described in Sec-
tion 3 on eight benchmark information extraction
and document segmentation corpora. The data sets
are summarized in Table 1.
4.1 Data and Methodology
CoNLL-03 (Sang and DeMeulder, 2003) is a col-
lection of newswire articles annotated with four en-
tities: person, organization, location, and misc.
NLPBA (Kim et al., 2004) is a large collection
of biomedical abstracts annotated with five entities
of interest, such as protein, RNA, and cell-type.
BioCreative (Yeh et al., 2005) and FlySlip (Vla-
chos, 2007) also comprise texts in the biomedical
domain, annotated for gene entity mentions in arti-
cles from the human and fruit fly literature, respec-
tively. CORA (Peng and McCallum, 2004) consists
of two collections: a set of research paper headers
annotated for entities such as title, author, and insti-
tution; and a collection of references annotated with
BibTeX fields such as journal, year, and publisher.
The Sig+Reply corpus (Carvalho and Cohen, 2004)
is a set of email messages annotated for signature
and quoted reply line segments. SigIE is a subset of
the signature blocks from Sig+Reply which we have
enhanced with several address book fields such as
name, email, and phone. All corpora are format-
ted in the “IOB” sequence representation (Ramshaw
and Marcus, 1995).
We implement all fifteen query selection strate-
gies described in Section 3 for use with CRFs, and
evaluate them on all eight data sets. We also com-
pare against two baseline strategies: random in-
stance selection (i.e., passive learning), and na?¨vely
querying the longest sequence in terms of tokens.
We use a typical feature set for each corpus based on
the cited literature (including words, orthographic
patterns, part-of-speech, lexicons, etc.). Where the
N -best approximation is used N = 15, and for all
QBC methods C = 3; these figures exhibited a good
balance of accuracy and training speed in prelimi-
nary work. For information density, we arbitrarily
set ? = 1 (i.e., the information and density terms
have equal weight). In each experiment, L is ini-
tialized with five random labeled instances, and up
to 150 queries are subsequently selected from U in
batches of size B = 5. All results are averaged
across five folds using cross-validation.
We evaluate each query strategy by constructing
learning curves that plot the overall F1 measure (for
all entities or segments) as a function of the num-
ber of instances queried. Due to lack of space, we
cannot show learning curves for every experiment.
Instead, Table 2 summarizes our results by reporting
the area under the learning curve for all strategies
on all data. Figure 3 presents a few representative
learning curves for six of the corpora.
4.2 Discussion of Learning Curves
The first conclusion we can draw from these results
is that there is no single clear winner. However, in-
formation density (ID), which we introduce in this
paper, stands out. It usually improves upon the base
sequence entropy measure, never performs poorly,
and has the highest average area under the learning
curve across all tasks. It seems particularly effective
on large corpora, which is a typical assumption for
the active learning setting. Sequence vote entropy
(SVE), a QBCmethod we propose here, is also note-
worthy in that it is fairly consistently among the top
three strategies, although never the best.
Second, the top uncertainty sampling strategies
are least confidence (LC) and sequence entropy
(SE), the latter being the dominant entropy-based
method. Among the QBC strategies, sequence vote
entropy (SVE) is the clear winner. We conclude that
these three methods are the best base information
measures for use with information density.
Third, query strategies that evaluate the en-
tire sequence (SE, SVE, SKL) are generally su-
perior to those which aggregate token-level infor-
mation. Furthermore, the total token-level strate-
gies (TTE, TVE, TKL) outperform their length-
1076
Baselines Uncertainty Sampling Query-By-Committee Other
Corpus Rand Long LC M TE TTE SE NSE VE KL TVE TKL SVE SKL EGL ID FIR
CoNLL-03 78.8 79.4 89.4 84.5 38.9 89.7 90.1 89.1 45.9 62.0 86.7 81.7 89.0 87.9 87.3 89.6 81.7
NLPBA 59.9 67.6 71.0 62.9 53.4 70.9 71.5 68.9 52.4 53.1 66.9 63.5 71.8 68.5 69.3 73.1 73.6
BioCreative 34.6 26.9 54.8 46.8 37.8 53.0 56.0 50.5 35.2 37.4 49.2 45.1 56.6 50.8 51.5 59.1 58.8
FlySlip 112.1 121.0 125.1 119.5 110.3 124.9 125.4 124.1 113.3 109.4 124.1 119.5 122.7 120.7 125.9 126.8 118.2
Headers 76.0 78.2 81.4 78.6 78.5 78.5 80.8 80.4 72.8 78.5 79.7 78.5 80.7 78.4 79.6 80.2 79.1
References 90.0 86.0 89.8 91.5 84.4 88.6 88.4 89.4 85.1 89.1 88.7 88.2 89.9 86.9 88.2 88.7 87.1
Sig+Reply 129.1 129.6 132.1 132.3 131.7 131.6 131.4 133.1 131.4 130.7 132.1 130.6 132.8 132.3 130.5 131.5 133.2
SigIE 84.3 82.7 88.8 87.3 89.3 88.3 87.6 89.1 89.8 85.5 89.7 85.1 89.5 89.7 87.7 88.5 88.5
Average 83.1 83.9 91.6 87.9 78.0 90.7 91.4 90.6 78.2 80.7 89.6 86.5 91.6 89.4 90.0 92.2 90.0
Table 2: Detailed results for all query strategies on all evaluation corpora. Reported is the area under the F1 learning
curve for each strategy after 150 queries (maximum possible score is 150). For each row, the best method is shown
boxed in bold, the second best is shown underlined in bold, and the third best is shown in bold. The last row summa-
rizes the results across all eight tasks by reporting the average area for each strategy. Query strategy formulations for
sequence models introduced in this paper are indicated with italics along the top.
normalized counterparts (TE, VE, KL) in nearly all
cases. In fact, the normalized variants are often in-
ferior even to the baselines. While an argument can
be made that these shorter sequences might be eas-
ier to label from a human annotator’s perspective,
our ongoing work indicates that the relationship be-
tween instance length and actual labeling costs (e.g.,
elapsed annotation time) is not a simple one. Anal-
ysis of our experiment logs also shows that length-
normalized methods are occasionally biased toward
short sequences with little intuitive value (e.g., sen-
tences with few or no entities to label). In addition,
vote entropy appears to be a better disagreement
measure for QBC strategies than KL divergence.
Finally, Fisher information (FIR), while theoreti-
cally sound, exhibits behavior that is difficult to in-
terpret. It is sometimes the winning strategy, but oc-
casionally only on par with the baselines. When it
does show significant gains over the other strategies,
these gains appear to be only for the first several
queries (e.g., NLPBA and BioCreative in Figure 3).
This inconsistent performance may be a result of the
approximations made for computational efficiency.
Expected gradient length (EGL) also appears to ex-
hibit mediocre performance, and is likely not worth
its additional computational expense.
4.3 Discussion of Run Times
Here we discuss the execution times for each query
strategy using current hardware. The uncertainty
sampling methods are roughly comparable in run
time (token-based methods run slightly faster), each
routinely evaluating tens of thousands of sequences
in under a minute. The QBC methods, on the other
hand, must re-train multiple models with each query,
resulting in a lag of three to four minutes per query
batch (and up to 20 minutes for corpora with more
entity labels).
The expected gradient length and Fisher informa-
tion methods are the most computationally expen-
sive, because they must first perform inference over
the possible labelings and then calculate gradients
for each candidate label sequence. As a result, they
take eight to ten minutes (upwards of a half hour on
the larger corpora) for each query. Unlike the other
strategies, their time complexities also scale linearly
with the number of model parameters K which, in
turn, increases as new sequences are added to L.
As noted in Section 3.4, information density in-
curs a large computational cost to estimate the den-
sity weights, but these can be pre-computed and
cached for efficient lookup. In our experiments, this
pre-processing step takes less than a minute for the
smaller corpora, about a half hour for CoNLL-03
and BioCreative, and under two hours for NLPBA.
The density lookup causes no significant change in
the run time of the base information measure. Given
these results, we advocate information density with
an uncertainty sampling base measure in practice,
particularly for active learning with large corpora.
5 Conclusion
In this paper, we have presented a detailed analy-
sis of active learning for sequence labeling tasks.
In particular, we have described and criticized the
query selection strategies used with probabilistic se-
1077
F1 m
eas
ure
F1 m
eas
ure
 0
 0.1
 0.2
 0.3
 0.4
 0.5
 0.6
 0.7
 0  20  40  60  80  100  120  140
information density (ID)Fisher information (FIR)query-by-committee (SVE)random
CoNLL-03
 0
 0.1
 0.2
 0.3
 0.4
 0.5
 0.6
 0.7
 0  20  40  60  80  100  120  140
information density (ID)Fisher information (FIR)query-by-committee (SVE)random
NLPBA
 0
 0.1
 0.2
 0.3
 0.4
 0.5
 0.6
 0.7
 0  20  40  60  80  100  120  140
information density (ID)Fisher information (FIR)query-by-committee (SVE)random
BioCreative
number of instances queried
 0
 0.2
 0.4
 0.6
 0.8
 1
 0  20  40  60  80  100  120  140
information density (ID)Fisher information (FIR)query-by-committee (SVE)random
FlySlip
number of instances queried
 0
 0.2
 0.4
 0.6
 0.8
 1
 0  20  40  60  80  100  120  140
information density (ID)Fisher information (FIR)query-by-committee (SVE)random
Sig+Reply
number of instances queried
 0
 0.1
 0.2
 0.3
 0.4
 0.5
 0.6
 0.7
 0  20  40  60  80  100  120  140
information density (ID)Fisher information (FIR)query-by-committee (SVE)random
SigIE
Figure 3: Learning curves for selected query strategies on six of the evaluation corpora.
quence models to date, and proposed several novel
strategies to address some of their shortcomings.
Our large-scale empirical evaluation demonstrates
that some of these newly proposed methods advance
the state of the art in active learning with sequence
models. These methods include information density
(which we recommend in practice), sequence vote
entropy, and sometimes Fisher information.
Acknowledgments
We would like to thank the anonymous reviewers for
their helpful feedback. This work was supported by
NIH grants T15-LM07359 and R01-LM07050.
References
N. Abe and H. Mamitsuka. 1998. Query learning strate-
gies using boosting and bagging. In Proceedings of
the International Conference on Machine Learning
(ICML), pages 1–9. Morgan Kaufmann.
J. Baldridge and M. Osborne. 2004. Active learning and
the total cost of annotation. In Proceedings of the Con-
ference on Empirical Methods in Natural Language
Processing (EMNLP), pages 9–16. ACL Press.
V.R. Carvalho and W. Cohen. 2004. Learning to extract
signature and reply lines from email. In Proceedings
of the Conference on Email and Anti-Spam (CEAS).
D. Cohn, L. Atlas, and R. Ladner. 1994. Improving gen-
eralization with active learning. Machine Learning,
15(2):201–221.
A. Culotta and A. McCallum. 2005. Reducing labeling
effort for stuctured prediction tasks. In Proceedings
of the National Conference on Artificial Intelligence
(AAAI), pages 746–751. AAAI Press.
I. Dagan and S. Engelson. 1995. Committee-based
sampling for training probabilistic classifiers. In Pro-
ceedings of the International Conference on Machine
Learning (ICML), pages 150–157. Morgan Kaufmann.
R. Hwa. 2004. Sample selection for statistical parsing.
Computational Linguistics, 30(3):73–77.
J. Kim, T. Ohta, Y. Tsuruoka, Y. Tateisi, and N. Col-
lier. 2004. Introduction to the bio-entity recognition
task at JNLPBA. In Proceedings of the International
Joint Workshop on Natural Language Processing in
Biomedicine and its Applications (NLPBA), pages 70–
75.
S. Kim, Y. Song, K. Kim, J.W. Cha, and G.G. Lee.
2006. MMR-based active machine learning for bio
named entity recognition. In Proceedings of Human
Language Technology and the North American Asso-
ciation for Computational Linguistics (HLT-NAACL),
pages 69–72. ACL Press.
J. Lafferty, A. McCallum, and F. Pereira. 2001. Con-
ditional random fields: Probabilistic models for seg-
menting and labeling sequence data. In Proceedings
of the International Conference on Machine Learning
(ICML), pages 282–289. Morgan Kaufmann.
K. Lari and S. J. Young. 1990. The estimation of stochas-
tic context-free grammars using the inside-outside al-
gorithm. Computer Speech and Language, 4:35–56.
D. Lewis and J. Catlett. 1994. Heterogeneous un-
certainty sampling for supervised learning. In Pro-
1078
ceedings of the International Conference on Machine
Learning (ICML), pages 148–156. Morgan Kaufmann.
G. Mann and A. McCallum. 2007. Efficient computation
of entropy gradient for semi-supervised conditional
random fields. In Proceedings of the North American
Association for Computational Linguistics (NAACL),
pages 109–112. ACL Press.
A. McCallum and K. Nigam. 1998. Employing EM
in pool-based active learning for text classification.
In Proceedings of the International Conference on
Machine Learning (ICML), pages 359–367. Morgan
Kaufmann.
M. Nyffenegger, J.C. Chappelier, and E. Gaussier. 2006.
Revisiting Fisher kernels for document similarities. In
Proceedings of the European Conference on Machine
Learning (ECML), pages 727–734. Springer.
F. Peng and A. McCallum. 2004. Accurate information
extraction from research papers using conditional ran-
dom fields. In Proceedings of Human Language Tech-
nology and the North American Association for Com-
putational Linguistics (HLT-NAACL). ACL Press.
L. R. Rabiner. 1989. A tutorial on hidden Markov mod-
els and selected applications in speech recognition.
Proceedings of the IEEE, 77(2):257–286.
L.A. Ramshaw and M.P. Marcus. 1995. Text chunking
using transformation-based learning. In Proceedings
of the ACL Workshop on Very Large Corpora.
N. Roy and A. McCallum. 2001. Toward optimal active
learning through sampling estimation of error reduc-
tion. In Proceedings of the International Conference
on Machine Learning (ICML), pages 441–448. Mor-
gan Kaufmann.
E.F.T.K. Sang and F. DeMeulder. 2003. Introduction to
the CoNLL-2003 shared task: Language-independent
named entity recognition. In Proceedings of the
Conference on Natural Language Learning (CoNLL),
pages 142–147.
T. Scheffer, C. Decomain, and S. Wrobel. 2001. Ac-
tive hidden Markov models for information extraction.
In Proceedings of the International Conference on Ad-
vances in Intelligent Data Analysis (CAIDA), pages
309–318. Springer-Verlag.
R. Schwartz and Y.-L. Chow. 1990. The N -best algo-
rithm: an efficient and exact procedure for finding the
N most likely sentence hypotheses. In Proceedings
of the International Conference on Acoustics, Speech,
and Signal Processing (ICASSP), pages 81–83. IEEE
Press.
B. Settles, M. Craven, and S. Ray. 2008. Multiple-
instance active learning. In Advances in Neural Infor-
mation Processing Systems (NIPS), volume 20, pages
1289–1296. MIT Press.
H.S. Seung, M. Opper, and H. Sompolinsky. 1992.
Query by committee. In Proceedings of the ACM
Workshop on Computational Learning Theory, pages
287–294.
C. E. Shannon. 1948. A mathematical theory of com-
munication. Bell System Technical Journal, 27:379–
423,623–656.
C. Sutton and A. McCallum. 2006. An introduction to
conditional random fields for relational learning. In
L. Getoor and B. Taskar, editors, Introduction to Sta-
tistical Relational Learning. MIT Press.
A. Vlachos. 2007. Evaluating and combining biomedical
named entity recognition systems. In BioNLP 2007:
Biological, translational, and clinical language pro-
cessing, pages 199–206.
A. Yeh, A. Morgan, M. Colosimo, and L. Hirschman.
2005. Biocreative task 1a: gene mention finding eval-
uation. BMC Bioinformatics, 6(Suppl 1):S2.
T. Zhang and F.J. Oles. 2000. A probability analysis
on the value of unlabeled data for classification prob-
lems. In Proceedings of the International Conference
onMachine Learning (ICML), pages 1191–1198. Mor-
gan Kaufmann.
X. Zhu, J. Lafferty, and Z. Ghahramani. 2003. Combin-
ing active learning and semi-supervised learning using
gaussian fields and harmonic functions. In Proceed-
ings of the ICML Workshop on the Continuum from
Labeled to Unlabeled Data, pages 58–65.
1079
