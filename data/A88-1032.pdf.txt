Localizing Expression of Ambiguity 
John Bear and Jerry R. Hobbs 
Artificial Intelligence Center 
SRI International 
Abstract 
In this paper we describe an implemented program for 
localizing the expression of many types of syntactic am- 
biguity, in the logical forms of sentences, in a manner 
convenient for subsequent inferential processing. Among 
the types of ambiguities handled are prepositional phrases, 
very compound nominals, adverbials, relative clatmes, and 
preposed prepositional phrases. The algorithm we use is 
presented, and several possible shortcomings and exten- 
sions of our method are discussed. 
1 In t roduct ion  
Ambiguity is a problem in any natural anguage processing 
system. Large grammars tend to produce large numbers 
of alternative analyses for even relatively simple sentences. 
Furthermore, as is well known, syntactic information may 
be insu~cient for selecting a best reading. It may take se- 
mantic knowledge of arbitrary complexity to decide which 
alternative to choose. 
In the TACITUS project \[Hobbs, 1986; Hobbs and 
Martin, 1987\] we are developing a pragmatics component 
which, given the logical form of a sentence, uses world 
knowledge to solve various interpretation problems, the 
r~=oluti,JD of syntactic ambiguity among them. Sentences 
are translated into logical form by the DIALOGIC system 
for syntactic mid semantic analysis \[Grosz et al., 1982\]. 
In this paper we describe how information about alter- 
native parses is passed concisely from DIALOGIC to the 
pragmatics component, and more generally, we discuss a 
method of localizing the representation f syntactic ambi- 
guity in the logical form of a sentence. 
One possible approach to the ambiguity problem would 
be to produce a set of logical forms for a sentence, one for 
each parse tree, and to send them one at a time to the 
pragrnatics component. This involves considerable dupli- 
cation of effort if the logical forms are largely the same 
and differ only with respect o attachment. A more effi- 
cient approach is to try to localize the information about 
the alternate possibilities. 
Instead of feeding two logical forms, which differ only 
with respect o an attachment site, to a pragraatics com- 
ponent, it is worthwhile trying to condense the information 
of the two logical forms together into one expression with a 
disjunction inside it representing the attachment ambigu- 
ity. That one expression may then be given to a pragmat- 
ics component with the effect that parts of the sentence 
that would have been processed twice are now processed 
only once. The savings can be considerably more dramatic 
when a set of five or ten or twenty logical forms can be re- 
duced to one, as is often the case. 
In effect, this approach translates the syntactic ambigu- 
ity problem into a highly constrained coreference problem. 
It is as though we translated the sentence in (1) into the 
two sentences in (2) 
(1) John drove down the street in a car. 
(2) John drove down the street. It was in a car. 
where we knew "it" had to refer either to the street or 
to the driving. Since coreference is one of the phenomena 
the pragmatics component is designed to cope with \[Hobbs 
and Martin, 1987\], such a translation represents progress 
toward a solution. 
The rest of this paper describes the procedures we use 
to produce a reduced set of logical forms from a larger 
set. The basic strategy hinges on the idea of a neu- 
tral representation \[Hobbs, 1982\]. This is similar to the 
idea behind Church's Pseudo-attachment \[Church, 19801 . 
Pereira's Rightmost Normal Form \[Pereira, 1983\], and 
what Rich et al. refer to as the Procr~tination Approach 
to parsing \[Rich, Barnett, Wittenburg, and Whittemore. 
1986\]. However, by expressing the ambiguity as a disjunc- 
tion in logical form, we put it into the form most convenient 
for subsequent inferential processing. 
2 Range o f  Phenomena 
2.1 At tachment  Possibilities 
There are three representative classes of attachment ambi- 
guities, and we have implemented our approach :o each of 
these. For each class, we give representative examples and 
show the relevant logical form fragments that encode the 
set of possible attachments. 
In the first class are those constituents that may attach 
to either nouns or verbs. 
(3) John saw the man with the telescope. 
235 
The prepositional phrase (PP) "with the telescope" can be 
attached either to "the man" or to "saw". If m stands for 
the man, t for the telescope, and e for the seeing event, the 
neutral ogical form for the sentence includes 
. . .  A wi th(s t ,  t) A \[st = m V y = e\] A . . .  
That is, something St is with the telescope, and it is either 
the man or the seeing event. 
Gerund modifiers may also modify nouns and verbs, re- 
suiting in ambiguities like that in the sentence 
I saw the Grand Canyon, flying to New York. 
Their treatment is identical to that of PPs. If g is the 
Grand Canyon, n is New York, and e is the seeing event, 
the neutral ogical form will include 
. . .  A f ist (st ,  n )  ^ \[st = g V St = e\] A . . .  
That is, something St is flying to New York, and it is either 
the Grand Canyon or the seeing event. 
In the second class are those constituents that can only 
attach to verbs, such as adverbials. 
George said Sara left his wife yesterday. 
Here "yesterday" can modify the saying or the leaving but 
not "his wife". Suppose we take yesterday  to be a predi- 
cate that applies to events and specifies omething about 
their times of occurrence, and suppose el is the leaving 
event and e2 the saying event. Then the neutral ogical 
form will include 
. . .  ^ Ue~terdast (s t )  ^ \[st = e l  v U = e2\] ^  . . .  
That is, something y was yesterday and it is either the 
leaving event or the saying event. 
Related to this is the case of a relative clause where 
the preposed constituent is a PP, which could have been 
extracted from any of several embedded clauses. In 
That was the week during which George thought 
Sam told his wife he was leaving, 
the thinking, the telling, or the leaving could have been 
during the week. Let w be the week, el the thinking, e2 
the telling, and es the leaving. Then the neutral ogical 
form will include 
. . .  A dur ing(st ,  w)  A \[y = et V y = e2 
V st = es\] A . . .  
That is, something y was during the week, and y is either 
the thinking, the telling, or the leaving. 
The third class contains those constituents that may 
only attach to nouns, e.g., relative clauses. 
This component recycles the oil that flows 
through the compressor that is still good. 
The second relative clause. "that is still good," can attach 
to "'compressor", or "oil", but not to "flows" or ~'recycles;'. 
Let o be the oil and c the compressor. Then, ignoring 
"still", the neutral ogical form will include 
. . .  ^ 9ood(s t )  A \[st = e V St = o\] A . . .  
That is, something y is still good, and y is either the com- 
pressor or the oil. 
Similar to this are the compound nominal ambiguities, 
as in 
He inspected the oil filter element. 
"Oil" could modify either "filter" or "element". Let o be 
the oil, f the filter, e the element, and nn the implicit 
relation that is encoded by the nominal compound con- 
struction. Then the neutral ogical form will include 
. . .  A ,~n(/ ,  e) ^ nn(o ,  St) A \[st = / V St = e\] ^ . . .  
That is, there is some implicit relation nn between the filter 
and the element, and there is another implicit relation nn 
between the oil and something y, where y is either the filter 
or the element. 
Our treatment of all of these types of ambiguity has been 
implemented. 
In fact, the distinction we base the attachment possi- 
bilities on is not that between ouns and verbs, but that 
between event variables and entity variables in the logical 
form. This means that we would generate logical forms 
encoding the attachment of adverbials to event nominai- 
izations in those cases where the event nouns are translated 
with event variables. Thus in 
I read about Judith's promotion last year. 
"last year" would be taken as modifying either the promo- 
tion or the reading, if "promotion" were represented by an 
event variable in the logical form. 
2.2 Single or Multiple Parse Trees 
In addition to classifying attachment phenomena in terms 
of which kind of constituent something may attach to, 
there is another dimension along which we need to clas- 
sify the phenomena: does the D IALOGIC  parser produce 
all possible parses, or only one? For some regular struc- 
tural ambiguities, such as very compound nominals, and 
the "during which" examples, only a single parse is pro- 
duced. In this case it is straightforward to produce from 
the parse a neutral representation encoding all the possi- 
bilities. In the other cases, however, such as (nonpreposed) 
PPs, adverbials, and relative clauses, D IALOGIC  produces 
an exhaustive (and sometimes exhausting) list of the dif- 
ferent possible structures. This distinction is an artifact 
of our working in the D IALOGIC  system. It would be 
preferable if there were only one tree constructed which 
236 
was somehow neutral with respect o attachment. How- 
ever, the DIALOGIC grammar is large and complex, and 
it would have been difficult o implement such_ an approach. 
Thus, in these cases, one of the parses, the one correspond- 
ing to right association \[Kimball, 1973\], is selected, and the 
neutral representation is generated from that. This makes 
it necessary to suppress redundant readings, as described 
below. (In fact, limited heuristics for suppressing multi- 
ple parse trees have recently been implemented in DIA- 
LOGIC.) 
2.3 Thematic Role Ambiguities 
Neutral representations are constructed for one other kind 
of ambiguity in the TACITUS system--ambiguities in the 
thematic role or case of the arguments. In the sentence 
It broke the window. 
we don't know whether "it" is the agent or the instru- 
ment. Suppose the predicate break takes three arguments, 
an agent, a patient, and an instrument, and suppose x is 
whatever is referred to by "it" and w is the window. Then 
the neutral logical form will include 
. . .  A break(yl,w, y2) A \[y, = z V Y2 = x\] A ... 
That is, something Yl breaks the window with something 
else Y2, and either yl or y2 is whatever is referred to by 
"it" .1 
2.4 Ambiguities Not Handled 
There are other types of structural ambiguity about which 
we have little to say. In 
They will win one day in Hawaii, 
one of the obvious readings is that "one day in Hawaii" 
is an adverbial phrase. However, another perfectly rea- 
sonable reading is that "one day in Hawaii" is the direct 
object of the verb "win". This is due to the verb having 
more than one subcategorization frame that could be filled 
by the surrounding constituents. It is the existence of this 
kind of ambiguity that led to the approach of not having 
DIALOGIC try to build a single neutral representation 
in all cases. A neutral representation for such sentences, 
though possible, would be very complicated. 
Similarly, we do not attempt o produce neutral repre- 
sentations for fortuitous or unsystematic ambiguities such 
as those exhibited in sentences like 
They are flying planes. 
Time flies like an arrow. 
Becky saw her duck. 
1The treatment of thematic role ambiguities has been implemented 
by Paul Martin as part of the interface between DIALOGIC and the 
pragmatic processes ofTACITUS that translates the logical forms of 
the sentences into a canonical representation. 
2.5 Resolving Ambiguities 
It is beyond the scope of this paper to describe the prag- 
matics processing that is intended to resolve the ambigu- 
ities (see Hobbs and Martin, 1987). Nevertheless, we dis- 
cuss one nontrivial example, just to give the reader a feel 
for the kind of processing it is. Consider the sentence 
We retained the filter element for future analysis. 
Let r be the retaining event, f the filter element, and a 
the analysis. Then the logical form for the sentence will 
include 
. . .  A for (y ,a)  A \ [y= f V y=r \ ]  A . . .  
The predicate for ,  let us say, requires the relation 
enable(y, a) to obtain between its arguments. That is, if y 
is for a, then either y or something coercible from y must 
somehow enable a or something coercible from a. The 
TACITUS knowledge base contains axioms encoding the 
fact that having something is a prerequisite for analyzing 
it and the fact that a retaining is a having, y can thus be 
equal to r, which is consistent with the constraints on y. 
On the other hand, any inference that the filter element 
enables the analysis will be much less direct, and conse- 
quently will not be chosen. 
3 The  A lgor i thm 
3.1 Finding Attachment Sites 
The logical forms (LFs) that are produced from each of 
the parse trees are given to an attachment-finding program 
which adds, or makes explicit, information about possible 
attachment sites. Where this makes some LFs redundant, 
as in the prepositional phrase case, the redundant LFs are 
then eliminated. 
For instance, for the sentence in (4), 
(4) John saw the man in the park with the telescope. 
DIALOGIC produces five parse trees, and five correspond- 
ing logical forms. When the attachment-finding routine is 
run on an LF, it annotates the LF with information about 
a set of variables that might be the subject (i.e., the at- 
tachment site) of each PP. 
The example below shows the LFs for one of the five 
readings before and after the attachment-finding routine is 
run on it. They are somewhat simplified for the purposes 
of exposition. In this notation, a proposition is a predi- 
cate followed by one or more arguments. An argument is
a variable or a complex term. A complex term is a vari- 
able followed by a "such that" symbol "\[ ", followed by a 
conjunction of one or more propositions? Complex terms 
2This notation can be translated into a Russellian notation, with 
the consequent loss of information about grammatical subordination, 
by repeated application ofthe transformation p(z I Q) =~ p(z) A Q. 
237
are enclosed in square brackets for readability. Events are 
represented by event variables, as in \[Hobbs, 1985\], so that 
see'(el,zl,x~) means el is a seeing event by ,vl of x2. 
One of sentence (4)'s LFs before attachment-finding is 
\[xl I John(xl)l, 
in(x~, 
\[x31 pa~k(x3) ^ 
with(xs, 
The same LF after attachment-finding is 
pa~t(\[e, I ~ee'(~l, 
\[x~ I John(x~)\], 
\[~ Iman(~) ^  
\[~ Ip-~k(~) ^  
with(\[y2 1 92=x3 V y2=x2 V 
~2:el\], 
\[~, I t~t~cop~(x,)\])\])\])\]) 
A paraphrase of the latter LF in English would be some- 
thing like this: There is an event el that happened in the 
past; it is a seeing event by xl who is John, of x2 who is 
the man; something yl is in the park, and that something 
is either the man or the seeing event; something Y2 is with 
a telescope, and that something is the park, the man, or 
the seeing event. 
The procedure for finding possible attachment sites in 
order to modify a logical form is as follows. The program 
recursively descends an LF, and keeps lists of the event 
and entity variables that initiate complex terms. Event 
variables associated with tenses are omitted. When the 
program arrives at some part of the LF that can have mul- 
tiple attachment sites, it replaces the explicit argument by 
an existentially quantified variable y, determines whether 
it can be an event variable, an entity variable, or either, 
and then encodes the list of possibilities for what y could 
equal. 
3.2 Eliminating Redundant Logical 
Forms 
In those cases where more than one parse tree, and hence 
more than one logical form, is produced by DIALOGIC, 
it is necessary to eliminate redundant readings. In order 
to do this, once the attachment possibilities are registered, 
the LFs are flattened (thus losing temporarily the gram- 
matical subordination i formation), and some simplifying 
preprocessing is done. Each of the flattened LFs is com- 
pared with the others. Any LF that is subsumed by an- 
other is discarded as redundant. One LF subsumes another 
if the two LFs are the same except hat the first has a list 
of possible attachment sites that includes the correspond- 
ing list in the second. For example, one LF for sentence 
(3) says that "with the telescope" can modify either "'saw" 
or "the man", and one says that it modifies "saw". The 
first LF subsumes the second, and the second is discarded 
and not compared with any other LFs. Thus, although the 
LFs are compared pairwise, if all of the ambiguity is due 
to only one attachment indeterminacy, each LF is looked 
at only once. 
Frequently, only some of the alternatives may be thrown 
out. For 
Andy said he lost yesterday 
affer attachment-finding, one logical form allows "yester- 
day" to be attached to either the saying or the losing, while 
another attaches it only to the saying. The second is sub- 
sumed by the first, and thus discarded. However, there is 
a third reading in which "yesterday" is the direct object of 
"lost" and this neither subsumes nor is subsumed by the 
others and is retained. 
4 Lost  In fo rmat ion  
4.1 Crossing Dependencies 
Our attachment-finding routine constructs a logical form 
that describes all of the standard readings of a sentence, 
but it also describes ome nonstandard readings, namely 
those corresponding to parse trees with crossing branches, 
or crossing dependencies. An example would be a reading 
of (4) in which the seeing was in the park and the man was 
with the telescope. 
For small numbers of possible attachment sites, this is 
an acceptable result. If a sentence is two-ways ambiguous 
(due just to attachment), we get no wrong readings. If it is 
five-ways ambiguous on the standard analysis, we get six 
readings. However, in a sentence with a sequence of four 
PPs, the standard analysis (and the DIALOGIC parser) 
get 42 readings, whereas our single disjuncqve LF stands 
for 120 different readings. 
Two things can be said about what to do in these cases 
where the two approaches diverge widely. We could argue 
that sentences with such crossing dependencies do exist in 
English. There are some plausible sounding examples. 
Specify the length, in bytes, of the word. 
Kate saw a man on Sunday with a wooden leg. 
In the first, the phrase "in bytes" modifies "specify", and 
"of the word" modifies "the length". In the second, "on 
Sunday" modifies "saw" and "with a wooden leg" modifies 
"a man". Stucky \[1987\] argues that such examples are 
acceptable and quite frequent. 
On the other hand, if one feels that these putative ex- 
amples of crossing dependencies can be explained away 
238
and should be ruled out. there is a way to do it within 
our framework. One can encode in the LFs a crossing- 
dependencies constraint, and consult hat constraint when 
doing the pragmatic processing. 
To handle the crossing-dependencies onstraint (which 
we have not yet implemented), the program would need 
to keep the list of the logical variables it constructs. This 
list would contain three kinds of variables, event variables, 
entity variables, and the special variables (the y's in the 
LFs above) representing attachment ambiguities. The list 
would keep track of the order in which variables were en- 
countered in descending the LF. A separate list of just the 
special y variables also needs to be kept. The strategy 
would be that in trying to resolve referents, whenever one 
tries to instantiate a y variable to something, the other y 
variables need to be checked, in accordance with the fol- 
lowing constraint: 
There cannot be Yl, Y2 in the list of y's such that 
B(yx) < B(y2) < Yl < Y2, where B(y~) is the 
proposed variable to which yi will be bound 
or with which it will be coreferential, and the 
< operator means "precedes in the list of vari- 
ables". 
This constraint handles a single phrase that has attach- 
ment ambiguities. It also works in the case where there is 
a string of PPs in the subji~ct NP, and then a string of PPs 
in the object NP, as in 
The man with the telescope in the park lounged 
on the bank of a river in the sun. 
With the appropriate crossing-dependency constraints, the 
logical form for this would be 3 
past(\[el \[lounge'(el, 
\[xl I man(z,) A 
w/th(\[u, l ul = ~, v u, = ed, 
Ix2 \[telescope(x2) A 
in(\[y2 I Y2=x2 V y2=xl V 
Y2~el\], 
\[~31 pa,-k(x3)\])\])\]) A 
on(el, 
\[x4 I bank(x4) A 
of(\[us l u3 = ~ v u~ = ed, 
\ [~ I ' i~(~)  A 
in(\[y4 \[ y4=zs Y y4=z4 V y4=e,\], 
\[~s I ~'n(~)l)\]) l)  A 
crossing-info( <el, xx, Yl, x2, Y2, xa>, 
{Yl, Y2}) A 
crossing-in f o( < el , x 4, Ys, Xs, Y4, xs> , 
{U3, Y,})\]) 
3We are assuming "with the telescope" and "in the park" can mod- 
ify the lounging, which they certainly can if we place commas before 
and after them. 
4 .2  Noncore ference  Const ra in ts  
One kind of information that is provided by the DIA- 
LOGIC system is information about coreference and non- 
coreference insofar as it can be determined from syntactic 
structure. Thus, the logical form for 
John saw him. 
includes the information that "John" and "him" cannot 
be coreferential. This interacts with our localization of 
attachment ambiguity. Consider the sentence, 
John returned Bill's gift to him. 
If we attach "to him" to "gift", "him" can be coreferential 
with "John" but it cannot be coreferential with "Bill". If 
we attach it to "returned", him" can be coreferential with 
"Bill" but not with "John". It is therefore not enough to 
say that the "subject" of "to" is either the gift or the re- 
turning. Each alternative carries its own noncoreference 
constraints with it. We do not have an elegant solution to 
this problem. We mention it because, to our knowledge, 
this interaction of noncoreference onstraints and PP at- 
tachment has not been noticed by other researchers taking 
similar approaches. 
5 A Note  on  L i te ra l  Mean ing  
There is an objection one could make to our whole ap- 
proach. If our logical forms are taken to be a represen- 
tation of the "literal meaning" of the sentence, then we 
would seem to be making the claim that the literal mean- 
ing of sentence (2) is "Using a telescope, John saw a man, 
or John saw a man who had a telescope," whereas the real 
situation is that either the literal meaning is "Using a tele- 
scope, John saw a man," or the literal meaning is "John 
saw a man who had a telescope." The disjunction occurs 
in the metalanguage, whereas we may seem to be claiming 
it is in the language. 
The misunderstanding behind this objection is that the 
logical form is not intended to represent "literal meaning". 
There is no general agreement on precisely what consti- 
tutes "literal meaning", or even whether it is a coherent 
notion. In any case, few would argue that the meaning of 
a sentence could be determined on the basis of syntactic 
information alone. The logical forms produced by the DI- 
ALOGIC system are simply intended to encode all of the 
information that syntactic processing can extract about 
the sentence. Sometimes the best we can come up with 
in this phase of the processing is disjunctive information 
about attachment sites, and that is what the LF records. 
'~'lO 239
6 Future  Extens ions  
6 .1  Extend ing  the  Range o f  Phenomena 
The work that has been done demonstrates the feasibility 
of localizing in logical form information about attachment 
ambiguities. There is some mundane programming to do 
to handle the cases similar to those described here, e.g., 
other forms of postnominai modification. There is also the 
crossing-dependency constraint to implement. 
The principal area in which we intend to extend our 
approach is various kinds of conjunction ambiguities. Our 
approach to some of these cases is quite similar to what 
we have presented already. In the sentence, 
(5) Mary told us John was offended and George left 
the party early. 
it is possible for George's leaving to be conjoined with ei- 
ther John's being offended or Mary's telling. Following 
Hobbs \[1985\], conjunction is represented in logical form by 
the predicate and' taking a self argument and two event 
variables as its arguments. In (5) suppose l stands for the 
telling, e2 for the being offended, es for the leaving, and e0 
for the conjunction. Then the neutral representation for 
(5) would include 
and'(eo, yo, e3) A tell'(el, M, y~) 
^ ((y0 = e~ ^  ul = e2) v (y0 = e2 ^  y~. = e0)) 
That is, there is a conjunction e0 of Y0 and the leaving ca; 
there is a telling el by Mary of Yl; and either y0 is the 
telling el and yl is the being offended e2, or y0 is the being 
offended e2 and yl is the conjunction e0. 
A different kind of ambiguity occurs in noun phrase con- 
junction. In 
(6) Where are the British and American ships? 
there is a set of British ships and a disjoint set of American 
ships, whereas in 
(7) Where are the tall and handsome men? 
the natural interpretation is that a single set of men is 
desired, consisting of men who are both tall and handsome. 
In TACITUS, noun phrase conjunction is encoded with 
the predicate andn, taking three sets as its arguments. 
The expression andn(sl,s2,sa) means that the set sl is 
the union of sets s~ and sa. 4 Following Hobbs \[1983\], the 
representation f plurals involves a set and a typical ele- 
ment of the set, or a reified universally quantified variable 
ranging over the elements of the set. Properties like cardi- 
nality are properties of the set itself, while properties that 
hold for each of the elements are properties of the typical 
element. An axiom schema specifies that any properties of 
4If either st or s2 is not a set, the singleton set consisting of just 
that element isused instead. 
the typical element are inherited by the individual, actual 
dements)  Thus, the phrase "British and American ships" 
is translated into the set sl such that 
andn(ShS~,Sa) A typelt(zl ,s l)  A ship(x1) 
A typelt(x2,s2) A British(x2) 
A typelt(xa, sa) A American(xa) 
That is, the typical element xl of the set sl is a ship, and 
sl is the union of the sets s2 and s3, where the typical 
element x2 of s2 is British, and the typical element xa of 
sa is American. 
The phrase "tall and handsome men" can be represented 
in the same way. 
andn(sl,s2,sa) A typelt(zl ,s l)  A man(x1) 
A typelt(x2, s2) A tall(x2) 
A typelt(za, sa) A handsome(xa) 
Then it is a matter for pragmatic processing to discover 
that the set s2 of tall men and the set sa of handsome men 
are in fact identical. 
In this representational framework, the treatment given 
to the kind of ambiguity il lustrated in 
I like intelligent men and women. 
resembles the treatment given to attachment ambiguities. 
The neutral ogical form would include 
. . .  A andn(sl,s2,sa) A typelt(xl,sl)  
A typelt(x2, s2) A man(x2) 
A typelt(xa, s3) A woman(za) 
A intelligent(y) A \[y = xl Y y = x2\] 
That is, there is a set sl, with typical element zl,  which is 
the union of sets s2 and sa, where the typical element x2 
of s2 is a man and the typical element xa of sa is a woman, 
and something y is intelligent, where y is either the typical 
element xl of s~ (the typical person) or the typical element 
x= of s2 (the typical man). 
Ambiguities in conjoined compound nominals can be 
represented similarly. The representation for 
oil pump and filter 
would include 
. . .  A andn(s,p, f )  A typelt(z,s) A pump(p) 
^f i l te r ( f )  n oil(o) A nn(o,y) 
^\[y=p v y=xl  
That is, there is a set s, with typical element x, composed 
of the elements p and f,  where p is a pump and f is a filter, 
and there is some implicit relation nn between some oil o 
and y, where y is either the pump p or the typical element 
x or s. (In the latter case, the axiom in the TACITUS 
system's knowledge base, 
5The reader may with some justification feel that the term "typical 
element" is ill-chosen. He or she is invited to suggest a better term. 
2d, N 240
(V w, x, y, z, s)nn(w, x) A typelt(x, s) 
A andn(s, y, :) 
=-- nn(w,y) A nn(w,z) 
allows the nn relation to be distributed to the two con- 
juncts.) 
6.2 Ordering Heuristics 
So far we have only been concerned with specifying the 
set of possible attachment sites. However, it is true, em- 
pirically, that certain attachment sites can be favored over 
others, strictly on the basis of syntactic (and simple se- 
mantic) information alone. ~ 
For example, for the prepositional phrase attachment 
problem, an informal study of several hundred examples 
suggests that a very good heuristic is obtained by using 
the following three principles: (1) favor right association; 
(2) override right association if (a) the PP is temporal and 
the second nearest attachment site is a verb or event nom- 
inalization, or (b) if the preposition typically signals an 
argument of the second nearest attachment site (verb or 
relational noun) and not of the nearest attachment site; 
(3) override right association if a comma (or comma into- 
nation) separates the PP from the nearest attachment site. 
The preposition"of" should be treated specially; for "of" 
PPs, right association is correct over 98% of the time. 
There are two roles such a heuristic ordering of possibil- 
ities can play. In a system without sophisticated seman- 
tic or pragmatic processing, the favored attachment could 
simply be selected. On the other hand, in a system such 
as TACITUS in which complex inference procedures access 
world knowledge in interpreting a text, the heuristic order- 
ing can influence an allocation of computational resources 
to the various possibilities. 
Acknowledgements  
The authors have profited from discussions with Stu 
Shieber about this work. The research was funded by the 
Defense Advanced Research Projects Agency under Office 
of Naval Research contract N00014-85-C-0013. 
References 
\[1\] Dowty, David, Lauri Karttunen, and Arnold Zwicky 
(1985) Natural Language Parsing, Cambridge University 
Press. 
\[2\] Church, Kenneth (1980) "On Memory Limitations in 
Natural Language Processing", Technical Note, MIT 
Computer Science Lab, MIT. 
6There is a vast literature on this topic. For a good introduction, 
see Dowty, Karttunen, and Zwicky \[1985\]. 
\[3\] Church, Kenneth, and Ramesh Patil (1982) "Coping 
with Syntactic Ambiguity or How to Put the Block in 
the Box on the Table", AJCL, Voi 8, No 3-4. 
\[4\] Grosz, Barbara, Norman Haas, Gary Hendrix, Jerry 
Hobbs, Paul Martin, Robert Moore, Jane Robin- 
son, Stanley Rosenschein (1982) "DIALOGIC: A Core 
Natural-Language Processing System", Technical Note 
270, Artificial Intelligence Center, SRI International. 
\[5\] Hirst, Graeme (1986) "Semantic Interpretation and 
Ambiguity", to appear in Artificial Intelligence. 
\[6\] Hobbs, Jerry (1982) "Representing Ambiguity", Pro- 
ceedings of the First West Coast Conference on For- 
mal Linguistics, Stanford University Linguistics Depart- 
ment, pp. 15-28. 
\[7\] Hobbs, Jerry (1983) "An Improper Approach to Quan- 
tification in Ordinary English", Proceedings of the 21st 
Annual Meeting of the Association for Computational 
Linguistics, Cambridge, Massachusetts, pp. 57-63. 
\[8\] Hobbs, Jerry (1985) "Ontological Promiscuity", Pro- 
ceedings of the 23rd Annual Meeting of the Association 
for Computational Linguistics, Chicago, Illinois, pp. 61- 
69. 
\[9\] Hobbs, Jerry (1986) "Overview of the TACITUS 
Project", CL, Vol. 12, No. 3. 
\[10\] Hobbs, Jerry, and Paul Martin (1987) "Local Prag- 
matics", Proceedings of the Tenth International Joint 
Conference on Artificial Intelligence, Milano, Italy, pp. 
520-523. 
\[11\] Kimball, John (1973) "Seven Principles of Surface 
Structure Parsing", Cognition, Vol. 2, No. 1, pp. 15-47. 
\[12\] Pereira, Fernando (1983) "Logic for Natural Language 
Analysis", Technical Note 275, Artificial Intelligence 
Center, SRI International. 
\[13\] Rich, Elaine, J im Barnett, Kent Wittenburg, ar, d 
Greg Whittemore (1986) "Ambiguity and Procrastina- 
tion in NL Interfaces", Technical Note HI-073-86, MCC. 
\[14\] Stucky, Susan (1987) "Configurational Variation in 
English: A Study of Extraposition and Related Mat- 
ters", in Syntax and Semantics: Discontinuous Con- 
stituency, Vol. 20, edited by G. Huck and A. Ojeda, 
Academic Press. 
241 
Appendix 
John saw the man with the telescope. 
Logical Form before Attachment-Finding: 
((PAST 
(SELF Ell) 
(SUBJECT 
(E3 
(SEE 
(SELF EJ) 
(SUBJECT (XI (JOHN (SELF E2) (SUBJECT XI)))) 
(OBJECT (X4 (MAN (SELF EL) (SUBJECT X4)) 
(WITH (SELF E6) 
(PP-SUBJECT X4) ; <-- \[with\] modifies \[man\] 
(OBJECT (X7 (TELESCOPE (SELF E8) (SUBJECT X7)) 
(THE (SELF E9) (SUBJECT X7)) 
(NOT= (NP XT) (ANTES (X4)))))) 
(THE (SELF ElO) (SUBJECT X4)) 
(NOT= (NP X4) (ANTES (XI)))))))))) 
Logical Form after Attachment-Finding: 
((PAST 
(SELF Ell) 
(SUBJECT 
(E3 
(SEE 
(SELF EJ) 
(SUBJECT (Xl (JOHN (SELF E2) (SUBJECT Xl)))) 
(OBJECT (X4 (MAN (SELF E5) (SUBJECT X4)) 
(WITH (SELF E6) 
(SUBJECT (YI4 (?= (NP YI4) ; <-- \[with\] modifies \[man\] or \[saw\] 
(ANTES (X4 EJ))))) 
(OBJECT (X7 (TELESCOPE (SELF E8) (SUBJECT X7)) 
(THE (SELF E9) (SUBJECT XT)) 
(NOT= (NP XT) (ANTES (X4)))))) 
(THE (SELF EIO) (SUBJECT X4)) 
(NOT= (NP X4) (ANTES (Xl)))))))))) 
242 
