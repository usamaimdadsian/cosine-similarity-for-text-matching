REPRESENTATION OF FEATURE SYSTEMS IN A NON-CONNECTIONIST 
MOLECULAR MACHINE 
L~z I6  K6im~n 
Institute of Linguist ics 
Hungarian Academy of Sciences 
Budapest I., P.O.Box 19. 
H-1250 HUNGARY 
ABSTRACT 
This paper is part of an enterprise 
whose aim is to represent l inguistic 
knowledge in the form of a molecular 
machine (a dynamic network). That is, the 
molecules of the network not only store, 
but also send, receive, and process 
information. It is claimed that such a 
network can be conceived of as a model of 
the coal it ion structure of a 
connectionist network. The paper 
describes how the class of feature 
systems cal led unary feature hierarchies 
(whose importance is supported by 
phonological theory but will not be 
argued for in the paper) can be 
represented in the molecular machine. 
INTRODUCTION 
Of the various branches of modern 
l inguistic theory, phonology, as usual, 
was the first one to come up with really 
restr ict ive theories of features and 
feature systems, largely supported by 
empirical evidence coming from the study 
of a legion of l inguistic phenomena. 
Phonology wil l  most probably remain main 
source of evidence as far as the 
functioning of feature-based cognit ive 
processes is concerned. 
The present paper sets out to outl ine 
how a part icular kind of feature system, 
close to several recent theories of 
phonological features, can be represented 
in connectionist networks. However, since 
some of the mechanisms involved, 
serial ity and synchronization in 
particular, fall outside the scope of the 
existing connectionist networks, a non- 
connectionist model simulating would-be 
serial connectionist networks wil l  be 
used instead. The automaton described in 
the paper is able to unify feature 
structures as programs to be run on the 
machine itself. 
UNARY FEATURE HIERARCHIES 
The feature systems under scrutiny 
can be termed unary feature hierarchies. 
The underlying concept is close to the 
'feature geometry' approach to 
autosegmental phonology (Clements 1985) 
in that a feature specif icat ion consists 
of features appearing on tiers, and 
features on adjacent tiers can be l inked 
by associat ion ~ines. Tiers are ordered 
in a mult i -dimensional  space, and the set 
of features that may appear on a 
part icular t ier is predefined. Unarity, 
on the other hand, means that a feature 
either appears within a given 'span' (of 
time) or it does not (instead of having 
different values); the absence of a 
feature simply means lack of information 
or undersDecif ication. Features can only 
be l inked to specif ied slots; on the 
other hand, t iers are adjacent to 
features rather than to tiers (hence the 
use of hierarchv instead of qeometry); 
that is, the fol lowing conf igurat ion may 
be ruled out if the H tier is adjacent to 
F but not to G: 
F/G t ier .... F .... G .... 
l I 
H tier .... H .... H .... 
Figure I. This conf igurat ion may be ruled 
out. 
Unarity is opposed to tradit ional 
binary feature systems (with a marked '+' 
and an unmarked '-' value for each 
feature) and to ternary systems (with a 
marked '+', an unmarked '-', and an 
unspecif ied '0' value), while feature 
geometries (and hierarchies) replace the 
old-fashioned 'feature bundle' 
conception, in which each segment 
consisted of an unordered set of feature- 
-value pairs. Compare the fol lowing 
(sketchy) representations of lax vowels 
in English: 
298 
Features Segments  
e~i  A o D u 
Low - + - - - + - 
High - - + - - - + 
Back - - - + + + + 
Round + + + 
Figure 2. Eng l i sh  lax vowels  as feature 
bundles.  
T iers  Segments  
e~z iAo9  u 
Root  t ier  x x x x x x x 
I I I I I I 
H/L/B t ier  L H B B B B 
I I I 
R t ier  R R R 
I I 
H/L t ier  L H 
F igure 3. Unary  feature h ie rarchy  for 
Eng l i sh  lax vowels.  
That  is, in this approach, feature 
h ierarch ies  not only express un iversa l  
rest r ic t ions  on feature s t ructures  (as 
feature geometr ies  do, cf. C lements  
1985), but language spec i f ic  redundancy 
rules and feature co -occur rence  
rest r ic t ions  as well.  In add i t ion  to the 
above, we shal l  assume the poss ib i l i ty  of 
forb idding that  a feature (or, rather, 
any feature of a g iven tier) be l inked to 
another. L ink proh ib i t ions  are not 
intended to be a feature value, hence the 
below representat ions  
a. b. 
Tier  1 . . . .  F . . . . . . . .  F . . . .  
X 
T ier  2 
F igure 4. Conf igurat ions  wi th  and wi thout  
l ink prohib i t ion.  
speci fy  ident ica l  elements,  in spite of 
the fact that  no feature can be l inked to 
F in F igure 4a. (X stands for l ink 
prohibi t ion.)  For example, cons ider  the 
fo l lowing feature hierarchy,  
character i z ing  a language where plural  
and dual nouns usua l ly  behave in the same 
way (e.g. Hebrew):  
1 2 3 4 5 
Category  t ier  - - -N . . . .  N . . . .  N . . . .  N . . . .  N--- 
I x I I 
Number  t ier  . . . . . . .  NSg . . . . . . .  NSg--NSg-- 
I x 
Dual t ier  -D 
i: s ingu lar  noun 
2: p lura l  noun 
3: s inau lare  tantum 
4: dual  noun and duale tantum 
5: p lura le  tantum 
Figure 5. Sample feature system. 
In terms of the above, the features of 
plural  nouns and D lura l ia  tantum are 
identical,  in spi te of the l ink 
proh ib i t ion  concern ing  the 'Non-Singular'  
feature of the la t ter .  
CONNECTIONIST MODEL OF FEATURE 
SYSTEMS 
Obviously,  the presence  of a feature 
in a segment  cor responds  to a re la t ive ly  
h igh act ivat ion  level of a node or a 
coa l i t ion  of nodes in a connect ion is t  
network. The vert ica l  geometry  of t iers  
determines  the poss ib i l i t i es  of l inking; 
the essent ia l  funct ion of l inks is to 
synchron ize  the act ivat ion  of features, 
but they also express  thei r  dependency  
relat ions.  Thus assoc ia t ion  l ines 
corespond to the fact that  the act ivat ion  
of a node or coa l i t ion  contro ls  the 
act ivat ion  of another  node or coal i t ion.  
Final ly,  l ink proh ib i t ions  can be 
represented as the inh ib i t ion of 
par t i cu la r  t iers. The ad jacency  of t iers 
wi l l  co r respond to super-coa l i t ions ,  i.e. 
features on ad jacent  t iers  are features 
whose act ivat ion  can be synchron ized at 
all. 
In our  present  knowledge,  none of the 
ex is t ing connect ion is t  networks can learn 
and encode the sequent ia l  act ivat ion  of 
nodes or coa l i t ions  of nodes, a lbei t  the 
organ izat ion  of human memory is most  
probab ly  h igh ly  ser ia l ized.  To overcome 
this de f i c iency  (and for other  reasons as 
well) we des igned a molecu lar  machine 
(cf. Ka lm~n and Kornai  1985) to model  the 
funct ion ing of a sequent ia l  connect ion is t  
network. 
In this machine,  each molecu le  
conta ins  a more or less stable p iece of 
knowledge encod ing the coa l i t ion  
st ructure  it par t i c ipates  in, in the form 
of a layout of the sur round ing  network. 
299 
Molecules are able to send messages 
to each other; a message has the same 
form as the pieces of information stored 
in the molecules, i.e. it is a directed 
graph representing a substructure of 
molecules with their dependencies. When a 
molecule receives a message, it unif ies 
the message with its own map, and it 
forwards the result ing information. The 
ultimate addressees are the 'output 
molecules', which can perform extra 
actions when receiving a properly 
addressed message. That is, the message 
acts as a program that will, after some 
modif icat ions it undergoes, activate a 
set of output molecules in a wel l -def ined 
order° Modif icat ions correspond to the 
effects of the rules stored in the 
molecules on the path of the message. 
One of the most important 
characterist ics of the messages sent (and 
other maps) is that they may contain 
missing steps, i.e. dist inguished nodes 
encoding lack of information concerning 
the way between two nodes. Missing steps 
can be el iminated by unification, 
provided that the required path is 
specif ied in the map of a processing 
molecule. This mechanism corresponds to 
the function of 'super-coalitions', i.e. 
the synchronization and sequencing of the 
activation of otherwise dist inct 
coalitions. 
INFORMATION PROCESSING WITH 
THE MOLECULAR MACHINE 
The basic operation performed by  the 
molecular machine is a kind of 
unification, di f fer ing from the 
corresponding operation used in 
unif icat ion-based grammars by virtue of 
the dif ferences in the feature structures 
and their representations. Since the map 
graphs of the molecular machine contain 
no node variables, unif icat ion 
essential ly means the el imination of 
missing steps. Missing steps encode both 
alternative and conjunctive relations: 
A B 
V 
C D 
Figure 6. Sample directed graph with 
missing step. 
The missing step (the asterisk) in Figure 
6 can only be el iminated by supplying a 
path from A and B to either C or D, e.g. 
by unifying the graph in Figure 6 with 
the following: 
A B 
C 
Figure 7. Sample directed graph without 
missing step. 
Figure 7 is also the result ing graph. Any 
other uni f icat ion wil l  pr, vide a partial 
solution at best. 
The control function of the directed 
graphs in question is due to the fact 
that the addressed molecules are able to 
reduce the messages they receive. For 
example, in the case of the graph on 
Figure 7, both molecules A and B wil l  
remove their addresses from the top level 
before forwarding the graph. The graph on 
Figure 6, on the other hand, wil l  be 
unable to activate any of the addressees 
because of the missing step it contains. 
The uni f icat ion and control functions 
of the molecular machine together define 
a part icular conception of phonological  
rule systems, which can be argued for on 
independent grounds as well. Under this 
approach, the function of a phonological  
rule system is essential ly to resolve 
problems arising from morphological  
processes, i.e. to fix i l l - formed 
representations result ing from aff ixation 
by supplying missing features (e.g. in 
vowel harmony), l inking or del inking 
features according to the derived context 
(e.g. in voice assimilation). Note that 
del inking in the present form of the 
machine consists of adding an inhibitory 
l ink leading to the feature to be 
delinked. 
FURTHER PLANS, IMPLEMENTATION 
It is far from evident that syntactic 
and semantic rule systems should carry 
out operations similar to those in 
phonological rules. On the other hand, 
the operation of the molecular machine 
are general enough to eventual ly 
encompass syntactic and semantic 
processes such as recognit ion and 
completion of syntactic patterns, 
inference making through unification, 
etc. Some of these operations are 
outl ined in Kalman and Kornai (1985) and 
Kalman (1986). 
300 
A small molecular machine is 
implemented in Zoltan Schreter's (FPSE, 
Geneva University) CNS connectionist 
simulation system running on Olivetti 
M24/M28 PCs. However, owing to the 
capacity of the machines (and of TLC 
Lisp, in which the system has been 
written) the number of molecules is 
extremely limited, and the performance 
obtained is rather poor. 
REFERENCES 
Clements, George N. 1985. The 
geometry of phonological features. 
Phonology yearbook 2, 225-252. 
Kalman, Laszl6 and Andras Kornai. 
1985. A finite-state approach to 
generation and parsing. Paper presented 
at the Generative Grammar Fiesta, 
Salzburg. 
K~im~n, I~szl6. 1986. Semantic 
interpretation in a dynamic knowledge 
representation. Mfihelymunk~k (Working 
Papers of the Institute of Linguistics) 
1, No. 2, pp. 31-51. 
301 
