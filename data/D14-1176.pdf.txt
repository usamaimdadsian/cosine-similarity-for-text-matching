Proceedings of the 2014 Conference on Empirical Methods in Natural Language Processing (EMNLP), pages 1689–1700,
October 25-29, 2014, Doha, Qatar.
c
©2014 Association for Computational Linguistics
Dependency-Based Bilingual Language Models for
Reordering in Statistical Machine Translation
Ekaterina Garmash and Christof Monz
Informatics Institute, University of Amsterdam
Science Park 904, 1098 XH Amsterdam, The Netherlands
{e.garmash,c.monz}@uva.nl
Abstract
This paper presents a novel approach to
improve reordering in phrase-based ma-
chine translation by using richer, syntac-
tic representations of units of bilingual
language models (BiLMs). Our method
to include syntactic information is simple
in implementation and requires minimal
changes in the decoding algorithm. The
approach is evaluated in a series of Arabic-
English and Chinese-English translation
experiments. The best models demon-
strate significant improvements in BLEU
and TER over the phrase-based baseline,
as well as over the lexicalized BiLM by
Niehues et al. (2011). Further improve-
ments of up to 0.45 BLEU for Arabic-
English and up to 0.59 BLEU for Chinese-
English are obtained by combining our de-
pendency BiLM with a lexicalized BiLM.
An improvement of 0.98 BLEU is ob-
tained for Chinese-English in the setting of
an increased distortion limit.
1 Introduction
In statistical machine translation (SMT) reorder-
ing (also called distortion) refers to the order in
which source words are translated to generate the
translation in the target language. Word orders
can differ significantly across languages. For in-
stance, Arabic declarative sentences can be verb-
initial, while the corresponding English translation
should realize the verb after the subject, hence re-
quiring a reordering. Determining the correct re-
ordering during decoding is a major challenge for
SMT. This problem has received a lot of attention
in the literature (see, e.g., Tillmann (2004), Zens
and Ney (2003), Al-Onaizan and Papineni (2006)),
as choosing the correct reordering improves read-
ability of the translation and can have a substan-
tial impact on translation quality (Birch, 2011). In
this paper, we only consider those approaches that
include a reordering feature function into the log-
linear interpolation used during decoding.
The simplest reordering model is linear distor-
tion (Koehn et al., 2003) which scores the distance
between phrases translated at steps t and t + 1 of
the derivation. This model ignores any contex-
tual information, as the distance between trans-
lated phrases is its only parameter. Lexical dis-
tortion modeling (Tillmann, 2004) conditions re-
ordering probabilities on the phrase pairs trans-
lated at the current and previous steps. Unlike
linear distortion, it characterizes reordering not in
terms of distance but type: monotone, swap, or
discontinuous.
In this paper, we base our approach to reorder-
ing on bilingual language models (Marino et al.,
2006; Niehues et al., 2011). Instead of directly
characterizing reordering, they model sequences
of elementary translation events as a Markov pro-
cess.
1
Originally, Marino et al. (2006) used this
kind of model as the translation model, while more
recently it has been used as an additional model
in PBSMT systems (Niehues et al., 2011). We
adopt and generalize the approach of Niehues et al.
(2011) to investigate several variations of bilingual
language models. Our method consists of labeling
elementary translation events (tokens of bilingual
LMs) with their different contextual properties.
What kind of contextual information should be
incorporated in a reordering model? Lexical in-
formation has been used by Tillmann (2004) but
is known to suffer from data sparsity (Galley and
Manning, 2008). Also previous contributions to
bilingual language modeling (Marino et al., 2006;
Niehues et al., 2011) have mostly used lexical
information, although Crego and Yvon (2010a)
and Crego and Yvon (2010b) label bilingual to-
1
Note that the standard PBSMT translation model as-
sumes that events of translating separate phrases in a sentence
are independent.
1689
kens with a rich set of POS tags. But in gen-
eral, reordering is considered to be a syntactic phe-
nomenon and thus the relevant features are syn-
tactic (Fox, 2002; Cherry, 2008). Syntactic in-
formation is incorporated in tree-based approaches
in SMT, allowing one to provide a more detailed
definition of translation events and to redefine de-
coding as parsing of a source string (Liu et al.,
2006; Huang et al., 2006; Marton and Resnik,
2008), of a target string (Shen et al., 2008), or
both (Chiang, 2007; Chiang, 2010). Reordering
is a result of a given derivation, and CYK-based
decoding used in tree-based approaches is more
syntax-aware than the simple PBSMT decoding
algorithm. Although tree-based approaches poten-
tially offer a more accurate model of translation,
they are also a lot more complex and requiring
more intricate optimization and estimation tech-
niques (Huang and Mi, 2010).
Our idea is to keep the simplicity of PBSMT but
move towards the expressiveness typical of tree-
based models. We incrementally build up the syn-
tactic representation of a translation during decod-
ing by adding precomputed fragments from the
source parse tree. The idea to combine the mer-
its of the two SMT paradigms has been proposed
before, where Huang and Mi (2010) introduce in-
cremental decoding for a tree-based model. On a
very general level, our approach is similar to theirs
in that it keeps track of a sequence of source syn-
tactic subtrees that are being translated at consec-
utive decoding steps. An important difference is
that they keep track of whether the visited subtrees
have been fully translated, while in our approach,
once a syntactic structural unit has been added to
the history, it is not updated anymore.
In this paper, we focus on source syntactic in-
formation. During decoding we have full access
to the source sentence, which allows us to obtain
a better syntactic analysis (than for a partial sen-
tence) and to precompute the units that the model
operates with. We investigate the following re-
search questions: How well can we capture re-
ordering regularities of a language pair by incor-
porating source syntactic parameters into the units
of a bilingual language model? What kind of
source syntactic parameters are necessary and suf-
ficient?
Our contributions can be summarized as fol-
lows: We argue that the contextual information
used in the original bilingual models (Niehues et
al., 2011) is insufficient and introduce a simple
model that exploits source-side syntax to improve
reordering (Sections 2 and 3). We perform a thor-
ough comparison between different variants of our
general model and compare them to the original
approach. We carry out translation experiments
on multiple test sets, two language pairs (Arabic-
English and Chinese-English), and with respect to
two metrics (BLEU and TER). Finally, we present
a preliminary analysis of the reorderings resulting
from the proposed models (Section 4).
2 Motivation
In this section, we elaborate on our research ques-
tions and provide background for our approach.
We also discuss existing bilingual n-gram mod-
els and argue that they are often not expressive
enough to differentiate between alternative re-
orderings. We should first note that the most com-
monly used n-gram model to distinguish between
reorderings is a target language model, which does
not take translation correspondence into account
and just models target-side fluency. Al-Onaizan
and Papineni (2006) show that target language
models by themselves are not sufficient to cor-
rectly characterize reordering. In what follows we
only discuss bilingual models.
The word-aligned sentence pair in Figure 1.a
2
demonstrates a common Arabic-English reorder-
ing. As stated in the introduction, bilingual lan-
guage models capture reordering regularities as a
sequence of elementary translation events
3
. In the
given example, one could decompose the sequen-
tial process of translation as follows: First trans-
late the first word Alwzyr as the minister, then ArjE
as attributed, then ArtfAE as the increase and so
on. The sequence of elementary translation events
is modeled as an n-gram model (Equation 1, where
t
i
is a translation event). There are numerous ways
in which t
i
can be defined. Below we first discuss
how they have been defined within previous ap-
proaches, and then introduce our definition.
p(t
1
, . . . , t
m
) =
m
?
i=1
p(t
i
|t
i?n+1
. . . t
i?1
) (1)
2.1 Lexicalized bilingual LMs
By including both source and target information
into the representation of translation events we ob-
2
We used Buckwalter transliteration for Arabic words.
3
By an elementary translation event we mean a translation
of some substructure of a sentence.
1690
the minister attributed the increase of oil prices
w ArjE Alwzyr
ArtfAE AsEAr Albtrwl
(a) The original word alignment.
the
Alwzyr
minister
Alwzyr
attributed
ArjE
the
ArtfAE
increase 
ArtfAE
of 
empty
oil
Albtrwl
prices
AsEAr
(b) BiLM tokens extracted from sentence (a).
empty
w
of 
oil
Albtrwl
prices
AsEAr
the minister
Alwzyr ArjE
the
the increase 
ArtfAE
(c) MTU tokens extracted from sentence (a).
Figure 1: Arabic-English parallel sentence, automatically word-aligned. The bilingual token sequences
are produced according to two alternative definitions (BiLM and MTU).
tain a bilingual LM. The richer representation al-
lows for a finer distinction between reorderings.
For example, Arabic has a morphological marker
of definiteness on both nouns and adjectives. If
we first translate a definite adjective and then an
indefinite noun, it will probably not be a likely se-
quence according to the translation model. This
kind of intuition underlies the model of Niehues et
al. (2011), a bilingual LM (BiLM), which defines
elementary translation events t
1
, ..., t
n
as follows:
t
i
= ?e
i
, {f |f ? A(e
i
)}?, (2)
where e
i
is the i-th target word and A : E ?
P(F ) is an alignment function, E and F refer-
ring to target and source sentences, and P(·) is the
powerset function. In other words, the i-th trans-
lation event consists of the i-th target word and all
source words aligned to it. Niehues et al. (2011)
refer to the defined translation events t
i
as bilin-
gual tokens and we adopt this terminology.
There are alternative definitions of bilingual
language models. Our choice of the above defi-
nition is supported by the fact that it produces an
unambiguous segmentation of a parallel sentence
into tokens. Ambiguous segmentation is unde-
sirable because it increases the token vocabulary,
and thus the model sparsity. Another disadvan-
tage comes from the fact that we want to compare
permutations of the same set of elements. For ex-
ample, the two different segmentations of ba into
[ba] and [b][a] still represent the same permuta-
tion of the sequence ab. In Figure 1 one can pro-
duce a segmentation of (AsEAr Albtrwl, oil prices)
into (Albtrwl, oil) and (AsEAr, prices) or leave
it as is. If we allow for both segmentations, the
learnt probability parameters may be different for
the sum of (Albtrwl, oil) and (AsEAr, prices) and
for the unsegmented phrase.
Durrani et al. (2011) introduce an alternative
method for unambiguous bilingual segmentation
where tokens are defined as minimal phrases,
called minimal translation units (MTUs). Figure 1
compares the BiLM and MTU tokenization for a
specific example. Since Niehues et al. (2011) have
shown their model to work successfully as an addi-
tional feature in combination with commonly used
standard phrase-based features, we use their ap-
proach as the main point of reference and base our
approach on their segmentation method. In the
rest of the text we refer to Niehues et al. (2011)
as the original BiLM.
4
At the same time, we do
not see any specific obstacles for combining our
work with MTUs.
2.2 Suitability of lexicalized BiLM to model
reordering
As mentioned in the introduction, lexical informa-
tion is not very well-suited to capture reordering
regularities. Consider Figure 2.a. The extracted
sequence of bilingual tokens is produced by align-
ing source words with respect to target words (so
that they are in the same order), as demonstrated
by the shaded part of the picture. If we substituted
the Arabic translation of Egyptian for the Arabic
translation of Israeli, the reordering should remain
the same. What matters for reordering is the syn-
tactic role or context of a word. By using unneces-
sarily fine-grained categories we risk running into
sparsity issues.
Niehues et al. (2011) also described an alterna-
tive variant of the original BiLM, where words are
substituted by their POS tags (Figure 2.a, shaded
part). Also, however, POS information by itself
may be insufficiently expressive to separate cor-
4
Although, strictly speaking, it is not the original ap-
proach (see the references in Section 1).
1691
Egyptian
exports
to
trAjEt
SAdrAt mSr l Aldwl AlErbyp
VBD NNS NNP IN DTNN DTJJ
JJ NNS TO
Arabic
countries declined …
…
JJ NNS VBD
trAjEt
SAdrAtmSr
l AldwlAlErbyp
NNSNNP IN DTJJ
…
DTNN VBD
(a)
trAjEt
SAdrAt mSr l Aldwl AlErbyp
VBD NNS NNP IN DTNN DTJJ
Arabic
JJ
AlErbyp
DTJJ
countries
NNS
Aldwl
DTNN
declined
VBD
trAjEt
VBD
Egyptian
exports
to
JJ NNS TO
SAdrAtmSr
l
NNSNNP IN
(b)
Figure 2: Arabic-English parallel sentence, automatically parsed and word-aligned, with corresponding
sequences of bilingual tokens (in the shaded part). Comparison between translations produced via correct
(a) and incorrect (b) reorderings.
JJ NNS TO
JJ NNS VBD
NNS!NNP
VBD!NNS NNS!IN
DTNN!DTJJ
IN!DTNN
ROOT!VBD
(a)
JJ NNS TO
JJ NNS VBD
NNS!NNP
VBD!NNS NNS!INDTNN!DTJJ
IN!DTNN
ROOT!VBD
(b)
Figure 3: Sequences of bilingual tokens with
source words substituted with their and their par-
ents’ POS tags: correct (a) and incorrect (b) re-
orderings.
rect and incorrect reorderings, see Figure 2.b. Al-
though the corresponding sequence of POS-tag-
substituted bilingual tokens is different from the
correct sequence (Figure 2.b, shaded part), it still
is a likely sequence. Indeed, the log-probabilities
of the two sequences with respect to a 4-gram
BiLM model
5
result in a higher probability of
?10.25 for the incorrect reordering than for the
correct one (?10.39).
Since fully lexicalized bilingual tokens suffer
from data sparsity and POS-based bilingual tokens
are insufficiently expressive, the question is which
level of syntactic information strikes the right bal-
ance between expressiveness and generality.
5
Section 4 contains details about data and software setup.
2.3 BiLM with dependency information
Dependency grammar is commonly used in NLP
to formalize role-based relations between words.
The intuitive notion of syntactic modification is
captured by the primitive binary relation of depen-
dence. Dependency relations do not change with
the linear order of words (Figure 2) and therefore
can provide a characterization of a word’s syntac-
tic class that invariant under reordering.
If we incorporate dependency relations into the
representation of bilingual tokens, the incorrect re-
ordering in Figure 2.b will produce a highly un-
likely sequence. For example, we can substitute
each source word with its POS tag and its par-
ent’s POS tag (Figure 3). Again, we computed
4-gram log-probabilities for the corresponding se-
quences: the correct reordering results in a sub-
stantially higher probability of?10.58 than the in-
correct one (?13.48). We may consider situations
where more fine-grained distinctions are required.
In the next section, we explore different represen-
tations based on source dependency trees.
3 Dependency-based BiLM
In this section, we introduce our model which
combines the BiLM from Niehues et al. (2011)
with source dependency information. We fur-
ther give details on how the proposed models are
trained and integrated into a phrase-based decoder.
1692
3.1 The general framework
In the previous section we outlined our framework
as composed of two steps: First, a parallel sen-
tence is tokenized according to the BiLM model
(Niehues et al., 2011). Next, words in the bilingual
tokens are substituted with their contextual prop-
erties. It is thus convenient to use the following
generalized definition for a token sequence t
1
...t
n
in our framework:
t
i
= ?ContE (e
i
), {ContF (f)|f ? A(e
i
)}?, (3)
where e
i
is the i-th target word, A : E ? P(F )
is an alignment function, F and E are source and
target sentences, and ContE and ContF are tar-
get and source contextual functions, respectively.
A contextual function returns a word’s contextual
property, based on its sentential context (source or
target). See Figure 4 for an example of a sequence
of BiLM tokens with a ContF defined as return-
ing the POS tag of the source word combined with
the POS tags of its parent, grandparent and sib-
lings, and ContE defined as an identity function
(see Section 3.2 for a detailed explanation of the
functions and notation).
In this work we focus on source contextual
functions (ContF ). We also exploit some very
simple target contextual functions, but do not go
into an in-depth exploration.
3.2 Dependency-based contextual functions
In NLP approaches exploiting dependency struc-
ture, two kinds of relations are of special impor-
tance: the parent-child relation and the sibling re-
lation. Shen et al. (2008) work with two well-
formed dependency structures, both of which are
defined in such a way that there is one common
parent and a set of siblings. Li et al. (2012) charac-
terize rules in hierarchical SMT by labeling them
with the POS tags of the parents of the words in-
side the rule. Lerner and Petrov (2013) model re-
ordering as a sequence of classification steps based
on a dependency parse of a sentence. Their model
first decides how a word is reordered with respect
to its parent and then how it is reordered with re-
spect to its siblings.
Based on these previous approaches, we pro-
pose to characterize contextual syntactic roles of
a word in terms of POS tags of the words them-
selves and their relatives in a dependency tree. It
is straightforward to incorporate parent informa-
tion since each node has a unique parent. As for
siblings information, we incorporate POS tags of
the closest sibling to the left and the closest to the
right. We do not include all of the siblings to avoid
overfitting. In addition to these basic syntactic re-
lations, we consider the grandparent relation.
The following list is a summary of the source
contextual functions that we use. We describe
a function with respect to the kind of contextual
property of a word it returns: (i) the word itself
(Lex); (ii) POS label of the word (Pos); (iii) POS
label of the word’s parent; (iv) POS of the word’s
closest sibling to the left, concatenated with the
POS tag of the closest sibling to the right; (v)
the POS label of the word’s grandparent. We use
target-side contextual functions returning: (i) an
empty string, (ii) POS of the word, (iii) the word
itself.
Notation. We do not use the above functions
separately to define individual BiLM models, but
use combinations of these functions. We use the
following notation for function combinations: “•”
horizontally connects source (on the left) and tar-
get (on the right) contextual functions for a given
model. For example, Lex•Lex refers to the original
(lexicalized) BiLM. We use arrows (?) to des-
ignate parental information (the arrow goes from
parent to child). Pos?Pos refers to a combination
of a function returning the POS of a word and the
POS of its parent (as in Figure 3). Pos?Pos?Pos
is a combination of the previous with the func-
tion returning the grandparent’s POS. Finally, we
use +sibl to indicate the use of the sibling func-
tion described above: For example, Pos?Pos+sibl
is a source function that returns the word’s POS,
its parent’s POS and the POS labels of the closest
siblings to left and right.
6
Pos+sibl?Pos is a source
function returning the word’s own POS, the POS
of a word’s parent, and the POS tags of the par-
ent’s siblings (left- and right-adjacent).
Figure 4 represents the sentence from Figure 2
during decoding in a system with an integrated
Pos?Pos?Pos+sibl•Lex feature. It shows the se-
quence of produced bilingual tokens and corre-
sponding labels in the introduced notation.
3.3 Training
Training of dependency-based BiLMs consists of
a sequence of extraction steps: After having pro-
duced word-alignments for a bitext (Section 4),
6
In case there is no sibling on one of the sides,  (empty
word) is returned.
1693
Egyptian
exports
trAjEt SAdrAt mSr l Aldwl AlErbyp
VBD NNS NNP IN DTNN
DTJJ
JJ NNS TO
to
Egyptian
VBD NNS NNP
IN
to
VBD NNS
NNP
IN
exports
VBD NNS
…
Figure 4: Sequence of bilingual tokens pro-
duced by a Pos?Pos?Pos+sibl•Lex after
translating three words of the source sentence:
VBD?NNS?+NNS+IN•Egyptian, ROOT?VBD?
+NNS+•exports, VBD?NNS?NNP+IN+•to (if there
is no sibling on either of the sides,  is returned).
sentences are segmented according to Equation 3.
We produce a dependency parse of a source sen-
tence and a POS-tag labeling of a target sen-
tence. For Chinese, we use the Stanford depen-
dency parser (Chang et al., 2009). For Arabic a
dependency parser is not available for public use,
so we produce a constituency parse with the Stan-
ford parser (Green and Manning, 2010) and ex-
tract dependencies based on the rules in Collins
(1999). For English POS-tagging, we use the
Stanford POS-tagger (Toutanova et al., 2003). Af-
ter having produced a labeled sequence of tokens,
we learn a 5-gram model using SRILM (Stolcke
et al., 2011). Kneyser-Ney smoothing is used
for all model variations except for Pos•Pos where
Witten-Bell smoothing is used due to zero count-
of-counts.
3.4 Decoder integration
Dependency-based BiLMs are integrated into our
phrase-based SMT decoder as follows: Before
translating a sentence, we produce its dependency
parse. Phrase-internal word-alignments, needed
to segment the translation hypothesis into tokens,
are stored in the phrase table, based on the most
frequent internal alignment observed during train-
ing. Likewise, we store the most likely target-side
POS-labeling for each phrase pair.
The decoding algorithm is augmented with one
additional feature function and one additional, cor-
responding feature weight. At each step of the
derivation, as a new phrase pair is added to the
Training set N. of lines N. of tokens
Source side of Ar-En set 4,376,320 148M
Target side of Ar-En set 4,376,320 146M
Source side of Ch-En set 2,104,652 20M
Target side of Ch-En set 2,104,652 28M
Table 1: Training data for Arabic-English and
Chinese-English experiments.
partial translation hypothesis, this function seg-
ments the new phrase into bilingual tokens (given
the internal alignment information) and substitutes
the words in the phrase pair with syntactic labels
(given the source parse and the target POS labeling
associated with the phrase). The new syntactified
bilingual tokens are added to the stack of preced-
ing n?1 tokens, and the feature function computes
the weighted updated model probability. During
decoding, the probabilities of the BiLMs are com-
puted in a stream-based fashion, with bilingual
tokens as string tokens, and not in a class-based
fashion, with syntactic source-side representations
emitting the corresponding target words (Bisazza
and Monz, 2014).
4 Experiments
4.1 Setup
We conduct translation experiments with a base-
line PBSMT system with additionally one of the
dependency-based BiLM feature functions speci-
fied in Section 3. We compare the translation per-
formance to a baseline PBSMT system and to a
baseline augmented with the original BiLMs from
(Niehues et al., 2011).
Word-alignment is produced with GIZA++
(Och and Ney, 2003). We use an in-house imple-
mentation of a PBSMT system similar to Moses
(Koehn et al., 2007). Our baseline contains
all standard PBSMT features including language
model, lexical weighting, and lexicalized reorder-
ing. The distortion limit is set to 5. A 5-gram LM
is trained on the English Gigaword corpus (1.6B
tokens) using SRILM with modified Kneyser-Ney
smoothing and interpolation. The BiLMs were
trained as described in Section 3.3. Informa-
tion about the parallel data used for training the
Arabic-English
7
and Chinese-English systems
8
is
7
The following Arabic-English parallel corpora were
used: LDC2006E25, LDC2004T18, several gale corpora,
LDC2004T17, LDC2005E46, LDC2007T08, LDC2004E13.
8
The following Chinese-English parallel corpora
were used: LDC2002E18, LDC2002L27, LDC2003E07,
LDC2003E14, LDC2005T06, LDC2005T10, LDC2005T34,
1694
Configuration MT08 MT09 MT08+MT09
BLEU TER BLEU TER BLEU TER
a PBSMT baseline 45.12 47.94 48.16 44.30 46.57 46.21
b Lex•Lex 45.27 47.79 48.85
N
43.96
M
46.98
N
45.96
M
Pos•Pos 44.80 47.84 48.22 44.14
M,?
46.44 46.07
c Pos?Pos•Pos 45.66
N,M
47.17
N,N
49.00
N,?
43.45
N,N
47.25
N,M
45.40
N,N
d Pos?Pos?sibl•Pos 45.46
M,?
47.45
N,M
48.69
N,?
43.64
N,M
47.00
N,?
45.64
N,?
e Pos?Pos?Pos•Pos 45.68
N,M
47.42
N,M
49.09
N,?
43.59
N,N
47.30
N,M
45.60
N,N
f Lex•Lex + Pos?Pos?Pos•Pos 45.63
N,M
47.48
N,M
49.30
N,N
43.60
N,M
47.38
N,N
45.63
N,N
Table 2: BLEU and TER scores for Arabic-English experiments. Statistically significant improvements
over the baseline (a) are marked
N
at the p < .01 level and
M
at the p < .05 level. Additionally,
·,N
and
·,M
indicate significant improvements with respect to BiLM Lex•Lex (b). Since TER is an error rate, lower
scores are better.
Configuration MT08 MT09 MT08+MT09
BLEU TER BLEU TER BLEU TER
Pos?Pos•  45.66
N,M
47.44
N,M
48.78
N,?
43.94
N,?
47.15
N,?
45.77
N,M
Pos?Pos•Pos 45.66
N,M
47.17
N,N
49.00
N,?
43.45
N,N
47.25
N,M
45.40
N,N
Pos?Pos•Lex 45.48
M,?
47.34
N,N
48.90
N,?
43.87
N,M
47.12
N,?
45.69
N,N
Table 3: Different combinations of a target contextual function with the Pos?Pos source contextual
function for Arabic-English. See Table 2 for the notation regarding statistical significance.
shown in Table 1.
The feature weights were tuned by using pair-
wise ranking optimization (Hopkins and May,
2011) on the MT04 benchmark (for both language
pairs). During tuning, 14 PRO parameter estima-
tion runs are performed in parallel on different
samples of the n-best list after each decoder itera-
tion. The weights of the individual PRO runs are
then averaged and passed on to the next decoding
iteration. Performing weight estimation indepen-
dently for a number of samples corrects for some
of the instability that can be caused by individual
samples. For testing, we used MT08 and MT09 for
Arabic, and MT06 and MT08 for Chinese. We use
approximate randomization (Noreen, 1989; Rie-
zler and Maxwell, 2005) to test for statistically sig-
nificant differences.
In the next two subsections we discuss the gen-
eral results for Arabic and Chinese, where we use
case-insensitive BLEU (Papineni et al., 2002) and
TER (Snover et al., 2006) as evaluation metrics.
This is followed by a preliminary analysis of ob-
served reorderings where we compare 4-gram pre-
cision results and conduct experiments with an in-
creased distortion limit.
4.2 Arabic-English translation experiments
We are interested in how a translation system
with an integrated dependency-based BiLM fea-
and several gale corpora.
ture performs as compared to the standard PB-
SMT baseline and, more importantly, to the orig-
inal BiLM model. We consider two variants of
BiLM discussed by Niehues et al. (2011): the stan-
dard one, Lex•Lex, and the simplest syntactic one,
Pos•Pos. Results for the experiments can be found
in Table 2. In the discussion below we mostly fo-
cus on the experimental results for the large, com-
bined test set MT08+MT09.
Table 2.a–b compares the performance of the
baseline and original BiLM systems. Lex•Lex
yields strongly significant improvements over the
baseline for BLEU and weakly significant im-
provements for TER. Therefore, for the rest of the
experiments we are interested in obtaining further
improvements over Lex•Lex.
Pos?Pos•Pos (Table 2.c) demonstrates the effect
of adding minimal dependency information to a
BiLM.
9
It results in strongly significant improve-
ments over the baseline and weak improvements
over Lex•Lex in terms of BLEU. We additionally
ran experiments with the different target functions
(Table 3). •Pos shows the highest results, and • the
lowest ones: this implies that a rather expressive
source syntactic representation alone still benefits
from target-side syntactic information. Below, our
dependency-based systems only use •Pos.
Next, we tested the effect of adding more source
9
Additional significance testing, which is not shown in
Table 2, shows a strongly significant improvement over the
original syntactic BiLM Pos•Pos.
1695
Configuration MT06 MT08 MT06+MT08
BLEU TER BLEU TER BLEU TER
a PBSMT baseline 31.89 57.79 25.53 60.71 28.99 59.14
b Lex•Lex 32.84
N
57.40
N
25.91
M
60.23
N
29.69
N
58.72
N
Pos•Pos 32.31
N
57.89 25.66 60.79 29.28 59.24
c Pos?Pos•Pos 32.86
N,?
57.05
N,M
26.09
N,?
59.87
N,M
29.78
N,?
58.36
N,N
d Pos?Pos?sibl•Pos 32.27
M,?
56.63
N,M
25.75 59.47
N,N
29.30
M,?
57.95
N,N
e Pos?Pos?Pos•Pos 33.09
N,?
57.54 26.35
N,M
59.70
N,N
30.05
N,N
58.54
N,?
f Lex•Lex + Pos?Pos?Pos•Pos 33.43
N,N
57.00
N,N
26.50
N,N
59.79
N,N
30.28
N,N
58.30
N,N
Table 4: BLEU and TER scores for Chinese-English PBSMT baseline and BiLM pipelines. See Table 2
for the notation regarding statistical significance.
Configuration MT06 MT08 MT06+MT08
BLEU TER BLEU TER BLEU TER
Pos?Pos•  32.43
N,?
57.42
N,?
25.84 60.51 29.43
N,?
58.86
N,?
Pos?Pos•Pos 32.86
N,?
57.05
N,M
26.09
N,?
59.87
N,M
29.78
N,?
58.36
N,N
Pos?Pos•Lex 32.69
N,?
57.03
N,M
25.72 60.17
N,?
29.52
N,?
58.49
N,M
Table 5: Different combinations of a target contextual function with the Pos?Pos source contextual func-
tion for Chinese-English. See Table 2 for the notation regarding statistical significance.
dependency information. Pos?Pos+sibl•Pos (Ta-
ble 2.d) only improves over the PBSMT baseline
(but also shows weak improvements over Lex•Lex
for TER). It significantly degrades the perfor-
mance with respect to the Pos?Pos•Pos system (Ta-
ble 2.c). Pos?Pos?Pos•Pos (Table 2.e) shows the
best results overall for BLEU, although it must be
pointed out that the difference with Pos?Pos•Pos is
very small. With respect to TER, Pos?Pos•Pos out-
performs the grandparent variant.
So far, we can conclude that source par-
ent information helps improve translation perfor-
mance. Increased specificity of a parent (par-
ent specified by a grandparent) tends to further
improve performance. Up to now, we have
only used syntactic information and obtained con-
siderable improvements over Pos•Pos, surpass-
ing the improvement provided by Lex•Lex. Can
we gain further improvements by also adding
lexical information? To this end, we con-
duct experiments combining the best performing
dependency-based BiLM (Pos?Pos?Pos•Pos) and
the lexicalized BiLM (Lex•Lex). We hypothesize
that the two models improve different aspects of
translation: Lex•Lex is biased towards improving
lexical choice and Pos?Pos?Pos•Pos towards im-
proving reordering. Combining these two models,
we may improve both aspects. The metric results
for the combined set indeed support this hypothe-
sis (Table 2.f).
4.3 Chinese-English translation experiments
The results of the Chinese-English experiments
are shown in Table 4. In the discussion below
we mostly focus on the experimental results for
the large, combined test set MT06+MT08. We
observe the same general pattern for the Pos?Pos
source function (Table 4.c) as for Arabic-English:
the system with the •Pos target function has the
highest scores (Table 5). All of the Pos?Pos• con-
figurations show statistically significant improve-
ments over the PBSMT baseline. For TER, two
of the three Pos?Pos• variants significantly out-
perform Lex•Lex. The system with sibling in-
formation (Table 4.d) obtains quite low BLEU
results, just as in the Arabic experiments. On
the other hand, its TER results are the highest
overall. The system with the Pos?Pos?Pos•Pos
function (Table 4.e) achieves the best results
among dependency-based BiLMs for BLEU. Fi-
nally, combining Pos?Pos?Pos•Pos and Lex•Lex re-
sults in the largest and significant improvements
over all competing systems for BLEU.
4.4 Preliminary analysis of reordering in
translation experiments
In general, the experimental results show that us-
ing source dependency information yields consis-
tent improvements for translating from Arabic and
Chinese into English. On the other hand, we have
pointed out some discrepancies between the two
metrics employed, suggesting that different sys-
tem configurations may improve different aspects
1696
Configuration Ar-En Ch-En
MT08 MT09 MT08+MT09 MT06 MT08 MT06+MT08
a PBSMT baseline 26.14 29.81 27.88 14.48 10.96 12.89
b Lex•Lex 26.33 30.55 28.32 15.43 11.45 13.65
Pos•Pos 25.95 30.06 27.89 14.76 11.01 13.07
c Pos?Pos•Pos 26.91 31.08 28.87 15.29 11.52 13.60
e Pos?Pos?sibl•Pos 26.71 30.73 28.60 15.27 11.67 13.66
d Pos?Pos?Pos•Pos 26.78 31.09 28.80 15.42 11.70 13.77
f Lex•Lex + Pos?Pos?Pos•Pos 26.80 31.27 28.90 15.87 11.85 14.07
Table 6: 4-gram precision scores for Arabic-English and Chinese-English baseline and BiLM systems.
Configuration MT08 MT09 MT08+MT09
BLEU TER 4gram BLEU TER 4gram BLEU TER 4gram
Lex•Lex 45.19 47.06 26.41 48.39 44.11 30.23 46.72 45.97 28.21
Pos?Pos?Pos•Pos 45.49 47.31
M
26.66 48.90
N
43.57
N
30.92 47.12
N
45.52
N
28.66
Table 7: BLEU, TER and 4-gram precision scores for Arabic-English Lex•Lex and Pos?Pos?Pos•Pos
with a distortion limit of 10.
Configuration MT06 MT08 MT06+MT08
BLEU TER 4gram BLEU TER 4gram BLEU TER 4gram
Lex•Lex 33.26 56.81 16.06 25.67 60.19 11.42 29.79 58.38 13.96
Pos?Pos?Pos•Pos 33.92
N
56.29
N
16.26 27.00
N
59.58
N
12.26 30.77
N
57.82
N
14.46
Table 8: BLEU, TER and 4-gram precision scores for Chinese-English Lex•Lex and
Pos?Pos?Pos•Pos with a distortion limit of 10.
of translation. To this end, we conducted some ad-
ditional evaluations to understand how reordering
is affected by the proposed features.
We use 4-gram precision as a metric of how
much of the reference set word order is preserved.
Table 6 shows the corresponding results for both
languages. Just as in the previous two sections,
configurations with parental information produce
the best results. For Arabic, all of the depen-
dency configurations outperform Lex•Lex. But the
system with two feature functions, one of which
is Lex•Lex, still obtains the best results, which
may suggest that the lexicalized BiLM also helps
to differentiate between word orders. For Chi-
nese, Pos?Pos?Pos•Pos and the system combining
the latter and Lex•Lex also obtain the best results.
However, other dependency-based configurations
do not outperform Lex•Lex.
All the experiments so far were run with a dis-
tortion limit of 5. But both of the languages, es-
pecially Chinese, often require reorderings over a
longer distance. We performed additional experi-
ments with a distortion limit of 10 for the Lex•Lex
and Pos?Pos?Pos•Pos systems (Tables 7 and 8). It
is more difficult to translate with a higher distor-
tion limit (Green et al., 2010) as the set of permu-
tations grows larger thereby making it more diffi-
cult to differentiate between correct and incorrect
continuations of the current hypothesis. It has also
been noted that higher distortion limits are more
likely to result in improvements for Chinese rather
than Arabic to English translation (Chiang, 2007;
Green et al., 2010).
We compared performance of fixed BiLM mod-
els at distortion lengths of 5 and 10. Arabic-
English results did not reveal statistically signif-
icant differences between the two distortion lim-
its for Pos?Pos?Pos•Pos. On the other hand, for
Lex•Lex BLEU decreases when using a distor-
tion limit of 10 compared to a limit of 5. This
implies that the dependency BiLM is more ro-
bust in the more challenging reordering setting
than the lexicalized BiLM. Chinese-English re-
sults for Pos?Pos?Pos•Pos do show significant im-
provements over the distortion limit of 5 (up to
0.49 BLEU higher than the best result in Table 4).
This indicates that the dependency-based BiLM is
better capable to take advantage of the increased
distortion limit and discriminate between correct
and incorrect reordering choices.
Comparing the results for Pos?Pos?Pos•Pos and
Lex•Lex at a distortion limit of 10, we obtain
strongly significant improvements for all metrics.
For Chinese, a larger distortion limit helps for both
configurations, but more so for our dependency
BiLM, yielding an improvement of 0.98 BLEU
1697
over the original, lexicalized BiLM (Table 8).
5 Conclusions
In this paper, we have introduced a simple, yet ef-
fective way to include syntactic information into
phrase-based SMT. Our method consists of en-
riching the representation of units of a bilingual
language model (BiLM). We argued that the very
limited contextual information used in the original
bilingual models (Niehues et al., 2011) can capture
reorderings only to a limited degree and proposed
a method to incorporate information from a source
dependency tree in bilingual units. In a series
of translation experiments we performed a thor-
ough comparison between various syntactically-
enriched BiLMs and competing models. The re-
sults demonstrated that adding syntactic informa-
tion from a source dependency tree to the repre-
sentations of bilingual tokens in an n-gram model
can yield statistically significant improvements
over the competing systems.
A number of additional evaluations provided an
indication for better modeling of reordering phe-
nomena. The proposed dependency-based BiLMs
resulted in an increase in 4-gram precision and
provided further significant improvements over
all considered metrics in experiments with an in-
creased distortion limit.
In this paper, we have focused on rather elemen-
tary dependency relations, which we are planning
to expand on in future work. Our current approach
is still strictly tied to the number of target tokens.
In particular, we are interested in exploring ways
to better capture the notion of syntactic cohesion
in translation (Fox, 2002; Cherry, 2008) within our
framework.
Acknowledgments
We thank Arianna Bisazza and the reviewers for
their useful comments. This research was funded
in part by the Netherlands Organization for Sci-
entific Research (NWO) under project numbers
639.022.213 and 612.001.218.
References
Yaser Al-Onaizan and Kishore Papineni. 2006. Dis-
tortion models for statistical machine translation. In
Proceedings of the 21st International Conference on
Computational Linguistics and 44th Annual Meet-
ing of the Association for Computational Linguis-
tics, pages 529–536, Sydney, Australia, July. Asso-
ciation for Computational Linguistics.
Alexandra Birch. 2011. Reordering Metrics for Statis-
tical Machine Translation. Ph.D. thesis, University
of Edinburgh.
Arianna Bisazza and Christof Monz. 2014. Class-
based language modeling for translating into mor-
phologically rich languages. In Proceedings of
the 25th International Conference on Computa-
tional Linguistics (COLING 2014), pages 1918–
1927, Dublin, Ireland, August.
Pi-Chuan Chang, Huihsin Tseng, Dan Jurafsky, and
Christopher D. Manning. 2009. Discriminative
reordering with chinese grammatical relations fea-
tures. In Proceedings of the Third Workshop on Syn-
tax and Structure in Statistical Translation, pages
51–59. Association for Computational Linguistics.
Colin Cherry. 2008. Cohesive phrase-based decoding
for statistical machine translation. In Proceedings
of Association for Computational Linguistics, pages
72–80.
David Chiang. 2007. Hierarchical phrase-based trans-
lation. Computational Linguistics, 33(2):201–228.
David Chiang. 2010. Learning to translate with source
and target syntax. In Proceedings of the 48th An-
nual Meeting of the Association for Computational
Linguistics, pages 1443–1452. Association for Com-
putational Linguistics.
Michael Collins. 1999. Head-Driven Statistical Mod-
els for Natural Language Parsing. Ph.D. thesis,
University of Pennsylvania.
Josep M. Crego and Franc¸ois Yvon. 2010a. Factored
bilingual n-gram language models for statistical ma-
chine translation. Machine Translation, 24(2):159–
175.
Josep M. Crego and Franc¸ois Yvon. 2010b. Improv-
ing reordering with linguistically informed bilin-
gual n-grams. In Proceedings of the 23rd Inter-
national Conference on Computational Linguistics,
pages 197–205. Association for Computational Lin-
guistics.
Nadir Durrani, Helmut Schmid, and Alexander Fraser.
2011. A joint sequence translation model with in-
tegrated reordering. In Proceedings of the 49th An-
nual Meeting of the Association for Computational
Linguistics, pages 1045–1054. Association for Com-
putational Linguistics.
Heidi J. Fox. 2002. Phrasal cohesion and statistical
machine translation. In Proceedings of the ACL-
02 conference on Empirical methods in natural lan-
guage processing, pages 304–3111. Association for
Computational Linguistics.
1698
Michel Galley and Christopher D. Manning. 2008. A
simple and effective hierarchical phrase reordering
model. In Proceedings of the Conference on Em-
pirical Methods in Natural Language Processing,
pages 848–856. Association for Computational Lin-
guistics.
Spence Green and Christopher D. Manning. 2010.
Better arabic parsing: Baselines, evaluations, and
analysis. In Proceedings of the 23rd International
Conference on Computational Linguistics, pages
394–402. Association for Computational Linguis-
tics.
Spence Green, Michel Galley, and Christopher D. Man-
ning. 2010. Improved models of distortion cost
for statistical machine translation. In Proceedings
of the 2010 Annual Conference of the North Amer-
ican Chapter of the Association for Computational
Linguistics, pages 867–875. Association for Com-
putational Linguistics.
Mark Hopkins and Jonathan May. 2011. Tuning as
ranking. In Proceedings of the Conference on Em-
pirical Methods in Natural Language Processing,
pages 1352–1362. Association for Computational
Linguistics.
Liang Huang and Haitao Mi. 2010. Efficient incre-
mental decoding for tree-to-string translation. In
Proceedings of the 2010 Conference on Empirical
Methods in Natural Language Processing, pages
273–283. Association for Computational Linguis-
tics.
Liang Huang, Kevin Knight, and Aravind Joshi. 2006.
Statistical syntax-directed translation with extended
domain of locality. In Proceedings of AMTA, pages
223–226.
Philipp Koehn, Franz Josef Och, and Daniel Marcu.
2003. Statistical phrase-based translation. In Pro-
ceedings of the 2003 Conference of the North Amer-
ican Chapter of the Association for Computational
Linguistics on Human Language Technology, pages
48–54. Association for Computational Linguistics.
Philipp Koehn, Hieu Hoang, Alexandra Birch, Chris
Callison-Burch, Marcello Federico, Nicola Bertoldi,
Brooke Cowan, Wade Shen, Christine Moran,
Richard Zens, et al. 2007. Moses: Open source
toolkit for statistical machine translation. In Pro-
ceedings of the 45th Annual Meeting of the Associ-
ation for Computational Linguistics on Interactive
Poster and Demonstration Sessions, pages 177–180.
Association for Computational Linguistics.
Uri Lerner and Slav Petrov. 2013. Source-side classi-
fier preordering for machine translation. In Proceed-
ings of the Empirical Methods in Natural Language
Processing.
Junhui Li, Zhaopeng Tu, Guodong Zhou, and Josef van
Genabith. 2012. Head-driven hierarchical phrase-
based translation. In Proceedings of the 50th An-
nual Meeting of the Association for Computational
Linguistics, pages 33–37. Association for Computa-
tional Linguistics.
Yang Liu, Qun Liu, and Shouxun Lin. 2006. Tree-
to-string alignment template for statistical machine
translation. In Proceedings of the 21st International
Conference on Computational Linguistics and the
44th annual meeting of the Association for Compu-
tational Linguistics, pages 609–616. Association for
Computational Linguistics.
Jos´e B Marino, Rafael E Banchs, Josep M. Crego,
Adria de Gispert, Patrik Lambert, Jos´e A.R. Fonol-
losa, and Marta R. Costa-Juss`a. 2006. N-gram-
based machine translation. Computational Linguis-
tics, 32(4):527–549.
Yuval Marton and Philip Resnik. 2008. Soft syntac-
tic constraints for hierarchical phrased-based trans-
lation. In Proceedings of the Association for Com-
putational Linguistics, pages 1003–1011.
Jan Niehues, Teresa Herrmann, Stephan Vogel, and
Alex Waibel. 2011. Wider context by using bilin-
gual language models in machine translation. In
Proceedings of the Sixth Workshop on Statistical
Machine Translation, pages 198–206. Association
for Computational Linguistics.
Eric W. Noreen. 1989. Computer Intensive Meth-
ods for Testing Hypotheses. An Introduction. Wiley-
Interscience.
Franz Josef Och and Hermann Ney. 2003. A sys-
tematic comparison of various statistical alignment
models. Computational Linguistics, 29(1):19–51.
Kishore Papineni, Salim Roukos, Todd Ward, and Wei-
Jing Zhu. 2002. Bleu: a method for automatic eval-
uation of machine translation. In Proceedings of the
40th annual meeting of the Association for Compu-
tational Linguistics, pages 311–318. Association for
Computational Linguistics.
Stefan Riezler and John T. Maxwell. 2005. On some
pitfalls in automatic evaluation and significance test-
ing for MT. In Proceedings of the ACL Workshop on
Intrinsic and Extrinsic Evaluation Measures for Ma-
chine Translation and/or Summarization.
Libin Shen, Jinxi Xu, and Ralph M. Weischedel. 2008.
A new string-to-dependency machine translation al-
gorithm with a target dependency language model.
In Proceedings of the Association for Computational
Linguistics, pages 577–585.
Matthew Snover, Bonnie Dorr, Richard Schwartz, Lin-
nea Micciulla, and John Makhoul. 2006. A study of
translation edit rate with targeted human annotation.
In Proceedings of AMTA, pages 223–231.
Andreas Stolcke, Jing Zheng, Wen Wang, and Victor
Abrash. 2011. Srilm at sixteen: Update and out-
look. In Proceedings of IEEE Automatic Speech
Recognition and Understanding Workshop, page 5.
1699
Christoph Tillmann. 2004. A unigram orientation
model for statistical machine translation. In Pro-
ceedings of of the North American Chapter of the
Association for Computational Linguistics, pages
101–104. Association for Computational Linguis-
tics.
Kristina Toutanova, Dan Klein, Christopher D. Man-
ning, and Yoram Singer. 2003. Feature-rich part-of-
speech tagging with a cyclic dependency network.
In Proceedings of the 2003 Conference of the North
American Chapter of the Association for Computa-
tional Linguistics on Human Language Technology,
pages 173–180. Association for Computational Lin-
guistics.
Richard Zens and Hermann Ney. 2003. A comparative
study on reordering constraints in statistical machine
translation. In Proceedings of the 41st Annual Meet-
ing on Association for Computational Linguistics-
Volume 1, pages 144–151. Association for Compu-
tational Linguistics.
1700
