Proceedings of the 14th Conference of the European Chapter of the Association for Computational Linguistics, pages 414–423,
Gothenburg, Sweden, April 26-30 2014.
c
©2014 Association for Computational Linguistics
A Knowledge-based Representation
for Cross-Language Document Retrieval and Categorization
Marc Franco-Salvador
1,2
, Paolo Rosso
2
and Roberto Navigli
1
1
Department of Computer Science
Sapienza Universit`a di Roma, Italy
{francosalvador,navigli}@di.uniroma1.it
2
Natural Language Engineering Lab - PRHLT Research Center
Universitat Polit`ecnica de Val`encia, Spain
{mfranco,prosso}@dsic.upv.es
Abstract
Current approaches to cross-language doc-
ument retrieval and categorization are
based on discriminative methods which
represent documents in a low-dimensional
vector space. In this paper we pro-
pose a shift from the supervised to the
knowledge-based paradigm and provide a
document similarity measure which draws
on BabelNet, a large multilingual knowl-
edge resource. Our experiments show
state-of-the-art results in cross-lingual
document retrieval and categorization.
1 Introduction
The huge amount of text that is available on-
line is becoming ever increasingly multilingual,
providing an additional wealth of useful informa-
tion. Most of this information, however, is not eas-
ily accessible to the majority of users because of
language barriers which hamper the cross-lingual
search and retrieval of knowledge.
Today’s search engines would benefit greatly
from effective techniques for the cross-lingual re-
trieval of valuable information that can satisfy
a user’s needs by not only providing (Landauer
and Littman, 1994) and translating (Munteanu and
Marcu, 2005) relevant results into different lan-
guages, but also by reranking the results in a lan-
guage of interest on the basis of the importance of
search results in other languages.
Vector-based models are typically used in the
literature for representing documents both in
monolingual and cross-lingual settings (Manning
et al., 2008). However, because of the large size
of the vocabulary, having each term as a compo-
nent of the vector makes the document represen-
tation very sparse. To address this issue several
approaches to dimensionality reduction have been
proposed, such as Principal Component Analysis
(Jolliffe, 1986), Latent Semantic Indexing (Hull,
1994), Latent Dirichlet Allocation (LDA) (Blei et
al., 2003) and variants thereof, which project these
vectors into a lower-dimensional vector space. In
order to enable multilinguality, the vectors of com-
parable documents written in different languages
are concatenated, making up the document ma-
trix which is then reduced using linear projection
(Platt et al., 2010; Yih et al., 2011). However, to
do so, comparable documents are needed as train-
ing. Additionally, the lower dimensional represen-
tations are not of easy interpretation.
The availability of wide-coverage lexical
knowledge resources extracted automatically
from Wikipedia, such as DBPedia (Bizer et al.,
2009), YAGO (Hoffart et al., 2013) and BabelNet
(Navigli and Ponzetto, 2012a), has considerably
boosted research in several areas, especially where
multilinguality is a concern (Hovy et al., 2013).
Among these latter are cross-language plagiarism
detection (Potthast et al., 2011; Franco-Salvador
et al., 2013), multilingual semantic relatedness
(Navigli and Ponzetto, 2012b; Nastase and
Strube, 2013) and semantic alignment (Navigli
and Ponzetto, 2012a; Matuschek and Gurevych,
2013). One main advantage of knowledge-based
methods is that they provide a human-readable,
semantically interconnected, representation of
the textual item at hand (be it a sentence or a
document).
Following this trend, in this paper we provide
a knowledge-based representation of documents
which goes beyond the lexical surface of text,
while at the same time avoiding the need for train-
ing in a cross-language setting. To achieve this
we leverage a multilingual semantic network, i.e.,
BabelNet, to obtain language-independent repre-
sentations, which contain concepts together with
semantic relations between them, and also include
semantic knowledge which is just implied by the
input text. The integration of our multilingual
graph model with a vector representation enables
us to obtain state-of-the-art results in comparable
414
document retrieval and cross-language text cate-
gorization.
2 Related Work
The mainstream representation of documents
for monolingual and cross-lingual document re-
trieval is vector-based. A document vector, whose
components quantify the relevance of each term in
the document, is usually highly dimensional, be-
cause of the variety of terms used in a document
collection. As a consequence, the resulting docu-
ment matrices are very sparse. To address the data
sparsity issue, several approaches to the reduc-
tion of dimensionality of document vectors have
been proposed in the literature. A popular class of
methods is based on linear projection, which pro-
vides a low-dimensional mapping from a high di-
mensional vector space. A historical approach to
linear projection is Principal Component Analysis
(PCA) (Jolliffe, 1986), which performs a singular
value decomposition (SVD) on a document matrix
D of size n×m, where each row in D is the term
vector representation of a document. PCA uses
an orthogonal transformation to convert a set of
observations of possibly correlated variables into
a set of values of linearly uncorrelated variables
called principal components, which make up the
low-dimensional vector. Latent Semantic Analy-
sis (LSA) (Deerwester et al., 1990) is very simi-
lar to PCA but performs the SVD using the cor-
relation matrix instead of the covariance matrix,
which implies a lower computational cost. LSA
preserves the amount of variance in an eigenvector
~v by maximizing its Rayleigh ratio:
~v
T
C~v
~v
T
~v
, where
C = D
T
D is the correlation matrix of D.
A generalization of PCA, called Oriented Prin-
cipal Component Analysis (OPCA) (Diamantaras
and Kung, 1996), is based on a noise covari-
ance matrix to project the similar components of
D closely. Other projection models such as La-
tent Dirichlet Allocation (LDA) (Blei et al., 2003)
are based on the extraction of generative models
from documents. Another approach, named Ex-
plicit Semantic Analysis (ESA) (Gabrilovich and
Markovitch, 2007), represents each document by
its similarities to a document collection. Using a
low domain specificity document collection such
as Wikipedia, the model has proven to obtain com-
petitive results.
Not only have these methods proven to be suc-
cessful in a monolingual scenario (Deerwester
et al., 1990; Hull, 1994), but they have also
been adapted to perform well in tasks at a cross-
language level (Potthast et al., 2008; Platt et al.,
2010; Yih et al., 2011). Cross-language Latent Se-
mantic Indexing (CL-LSI) (Dumais et al., 1997)
was the first linear projection approach used in
cross-lingual tasks. CL-LSI provides a cross-
lingual representation for documents by reducing
the dimensionality of a matrix D whose rows are
obtained by concatenating comparable documents
from different languages. Similarly, PCA and
OPCA can be adapted to a multilingual setting.
LDA was also adapted to perform in a multilingual
scenario with models such as Polylingual Topic
Models (Mimno et al., 2009), Joint Probabilistic
LSA and Coupled Probabilistic LSA (Platt et al.,
2010), which, however, are constrained to using
word counts, instead of better weighting strate-
gies, such as log(tf)-idf, known to perform bet-
ter with large vocabularies (Salton and McGill,
1986). Another variant, named Canonical Cor-
relation Analysis (CCA) (Thompson, 2005), uses
a cross-covariance matrix of the low-dimensional
vectors to find the projections. Cross-language
Explicit Semantic Analysis (CL-ESA) (Potthast et
al., 2008; Cimiano et al., 2009; Potthast et al.,
2011), instead, adapts ESA to be used at cross-
language level by exploiting the comparable doc-
uments across languages from Wikipedia. CL-
ESA represents each document written in a lan-
guage L by its similarities with a document collec-
tion in the same language L. Using a multilingual
document collection with comparable documents
across languages, the resulting vectors from dif-
ferent languages can be compared directly.
An alternative unsupervised approach, Cross-
language Character n-Grams (CL-CNG) (Mc-
namee and Mayfield, 2004), does not draw upon
linear projections and represents documents as
vectors of character n-grams. It has proven to ob-
tain good results in cross-language document re-
trieval (Potthast et al., 2011) between languages
with lexical and syntactic similarities.
Recently, a novel supervised linear projec-
tion model based on Siamese Neural Networks
(S2Net) (Yih et al., 2011) achieved state-of-the-
art performance in comparable document retrieval.
S2Net performs a linear combination of the terms
of a document vector
~
d to obtain a reduced vector
~r, which is the output layer of a neural network.
Each element in ~r has a weight which is a linear
combination of the original weights of
~
d, and cap-
tures relationships between the original terms.
However, linear projection approaches need a
high number of training documents to achieve
state-of-the-art performance (Platt et al., 2010;
Yih et al., 2011). Moreover, although they are
good at identifying a few principal components,
415
the representations produced are opaque, in that
they cannot explicitly model the semantic content
of documents with a human-interpretable repre-
sentation, thereby making the data analysis diffi-
cult. In this paper, instead, we propose a language-
independent knowledge graph representation for
documents which is obtained from a large multi-
lingual semantic network, without using any train-
ing information. Our knowledge graph represen-
tation explicitly models the semantics of the docu-
ment in terms of the concepts and relations evoked
by its co-occurring terms.
3 A Knowledge-based Document
Representation
We propose a knowledge-based document rep-
resentation aimed at expanding the terms in a doc-
ument’s bag of words by means of a knowledge
graph which provides concepts and semantic rela-
tions between them. Key to our approach is the
use of a graph representation which does not de-
pend on any given language, but, indeed, is multi-
lingual. To build knowledge graphs of this kind we
utilize BabelNet, a multilingual semantic network
that we present in Section 3.1. Then, in Section
3.2, we describe the five steps needed to obtain our
graph-based multilingual representation of docu-
ments. Finally, we introduce our knowledge graph
similarity measure in Section 3.3.
3.1 BabelNet
BabelNet (Navigli and Ponzetto, 2012a) is a
multilingual semantic network whose concepts
and relations are obtained from the largest avail-
able semantic lexicon of English, WordNet (Fell-
baum, 1998), and the largest wide-coverage
collaboratively-edited encyclopedia, Wikipedia,
by means of an automatic mapping algorithm. Ba-
belNet is therefore a multilingual “encyclopedic
dictionary” that combines lexicographic informa-
tion with wide-coverage encyclopedic knowledge.
Concepts in BabelNet are represented similarly to
WordNet, i.e., by grouping sets of synonyms in
the different languages into multilingual synsets.
Multilingual synsets contain lexicalizations from
WordNet synsets, the corresponding Wikipedia
pages and additional translations output by a sta-
tistical machine translation system. The relations
between synsets are collected from WordNet and
from Wikipedia’s hyperlinks between pages.
We note that, in principle, we could use any
multilingual network providing a similar kind of
information, e.g., EuroWordNet (Vossen, 2004).
However, in our work we chose BabelNet be-
cause of its larger size, its coverage of both lex-
icographic and encyclopedic knowledge, and its
free availability.
1
In our work we used BabelNet
1.0, which encodes knowledge for six languages,
namely: Catalan, English, French, German, Italian
and Spanish.
3.2 From Document to Knowledge Graph
We now introduce our five-step method for repre-
senting a given document d from a collection D of
documents written in language L as a language-
independent knowledge graph.
Building a Basic Vector Representation Ini-
tially we transform a document d into a traditional
vector representation. To do this, we score each
term t
i
? d with a weight w
i
. This weight is usu-
ally a function of term and document frequency.
Following the literature, one method that works
well is the log tf-idf weighting (Salton et al., 1983;
Salton and McGill, 1986):
w
i
= log
2
(f
i
+ 1)log
2
(n/n
i
). (1)
where f
i
is the number of times term i occurs in
document d, n is the total number of documents in
the collection and n
i
is the number of documents
that contain t
i
. We then create a weighted term
vector ~v = (w
1
, ..., w
n
), where w
i
is the weight
corresponding to term t
i
. We exclude stopwords
from the vector.
Selecting the Relevant Document Terms We
then create the set T of base forms, i.e., lemmas
2
,
of the terms in the document d. In order to keep
only the most relevant terms, we sort the terms T
according to their weight in vector ~v and retain a
maximum number of K terms, obtaining a set of
terms T
K
.
3
The value of K is calculated as a func-
tion of the vector size, as follows:
K = (log
2
(1 + |~v|))
2
, (2)
The rationale is that K must be high enough to
ensure a good conceptual representation but not
too high, so as to avoid as much noise as possi-
ble in the set T
K
.
Populating the Graph with Initial Concepts
Next, we create an initially-empty knowledge
graph G = (V,E), i.e., such that V = E = ?.
We populate the vertex set V with the set S
K
of
all the synsets in BabelNet which contain any term
in T
K
in the document language L, that is:
1
http://babelnet.org
2
Following the setup of (Platt et al., 2010), our initial data
is represented using term vectors. For this reason we lemma-
tize in this step.
3
Since the vector ~v provides weights for all the word
forms, and not only lemmas, occurring in d, we take the best
weight among those word forms of the considered lemma.
416
Figure 1: (a) initial graph from T
K
= {“European”, “apple”, “tree”, “Malus”, “species”, “America”}; (b)
knowledge graph obtained by retrieving all paths from BabelNet. Gray nodes are the original concepts.
S
K
=
?
t?T
K
Synsets
L
(t), (3)
where Synsets
L
(t) is the set of synsets in Ba-
belNet which contain a term t in the language
of interest L. For example, in Figure 1(a) we
show the initial graph obtained from the set T
K
=
{“European”, “apple”, “tree”, “Malus”, “species”,
“America”}. Note, however, that each retrieved
synset is multilingual, i.e., it contains lexicaliza-
tions for the same concept in other languages too.
Therefore, the nodes of our knowledge graph pro-
vide a language-independent representation of the
document’s content.
Creating the Knowledge Graph Similarly to
Navigli and Lapata (2010), we create the knowl-
edge graph by searching BabelNet for paths con-
necting pairs of synsets in V . Formally, for each
pair v, v
?
? V such that v and v
?
do not share any
lexicalization
4
in T
K
, for each path in BabelNet
v ? v
1
? . . . ? v
n
? v
?
, we set: V := V ?
{v
1
, . . . , v
n
} and E := E?{(v, v
1
), . . . , (v
n
, v
?
)},
that is, we add all the path vertices and edges to
G. After prototyping, the path length is limited
to maximum length 3, so as to avoid an excessive
semantic drift.
As a result of populating the graph with inter-
mediate edges and vertices, we obtain a knowl-
edge graph which models the semantic context of
document d. We point out that our knowledge
graph might have different isolated components.
We view each component as a different interpreta-
tion of document d. To select the main interpre-
tation, we keep only the largest component, i.e.,
the one with the highest number of vertices, which
we consider as the most likely semantic represen-
tation of the document content.
Figure 1(b) shows the knowledge graph ob-
tained for our example term set. Note that our
approach retains, and therefore weights, only the
subgraph focused on the “apple fruit” meaning.
4
This prevents different senses of the same term from be-
ing connected via a path in the resulting knowledge graph.
Knowledge Graph Weighting The final step
consists of weighting all the concepts and se-
mantic relations of the knowledge graph G. For
weighting relations we use the original weights
from BabelNet, which provide the degree of re-
latedness between the synset end points of each
edge (Navigli and Ponzetto, 2012a). As for con-
cepts, we weight them on the basis of the origi-
nal weights of the terms in the vector ~v. In or-
der to score each concept in our knowledge graph
G, we applied the topic-sensitive PageRank al-
gorithm (Haveliwala et al., 2003) to G. While
the well-known PageRank algorithm (Page et al.,
1998) calculates the global importance of vertices
in a graph, topic-sensitive PageRank is a variant
in which the importance of vertices is biased us-
ing a set of representative “topics”. Formally, the
topic-sensitive PageRank vector ~p is calculated by
means of an iterative process until convergence as
follows: ~p = cM~p+(1?c)~u, where c is the damp-
ing factor (conventionally set to 0.85), 1? c repre-
sents the probability of a surfer randomly jumping
to any node in the graph, M is the transition proba-
bility matrix of graph G, with M
ji
= degree(i)
?1
if an edge from i to j exists, 0 otherwise, ~u is
the random-jumping transition probability vector,
where each u
i
represents the probability of jump-
ing randomly to the node i, and ~p is the resulting
PageRank vector which scores the nodes of G. In
contrast to vanilla PageRank, the “topic-sensitive”
variant gives more probability mass to some nodes
in G and less to others. In our case we perturbate
~u by concentrating the probability mass to the ver-
tices in S
K
, which are the synsets corresponding
to the document terms T
K
(cf. Formula 3).
3.3 Similarity between Knowledge Graphs
We can now determine the similarity between two
documents d, d
?
? D in terms of the similarity of
their knowledge graph representations G and G
?
.
Following the literature (Montes y G´omez et
al., 2001) we calculate the similarity between the
vertex sets in the two graphs using Dice’s coeffi-
cient (Jackson et al., 1989):
417
Figure 2: Knowledge graph examples from two comparable documents in different languages.
S
c
(G,G
?
) =
2 ·
?
c?V (G)?V (G
?
)
w(c)
?
c?V (G)
w(c) +
?
c?V (G
?
)
w(c)
, (4)
where w(c) is the weight of a concept c (see Sec-
tion 3.2). Likewise, we calculate the similarity be-
tween the two edge sets as:
S
r
(G,G
?
) =
2 ·
?
r?E(G)?E(G
?
)
w(r)
?
r?E(G)
w(r) +
?
r?E(G
?
)
w(r)
, (5)
where w(r) is the weight of a semantic relation
edge r.
We combine the two above measures of concep-
tual (S
c
) and relational (S
r
) similarity to obtain an
integrated measure S
g
(G,G
?
) between knowledge
graphs:
S
g
(G,G
?
) =
S
c
(G,G
?
) + S
r
(G,G
?
)
2
. (6)
Notably, since we are working with a language-
independent representation of documents, this
similarity measure can be applied to the knowl-
edge graphs built from documents written in any
language. In Figure 2 we show two knowledge
graphs for comparable documents written in dif-
ferent languages (for clarity, labels are in English
in both graphs). As expected, the graphs share sev-
eral key concepts and relations.
4 A Multilingual Vector Representation
4.1 From Document to Multilingual Vector
Since our knowledge graphs will only cover the
most central concepts of a document, we comple-
ment this core representation with a more tradi-
tional vector-based representation. However, as
we are interested in the cross-language compari-
son of documents, we translate our monolingual
vector ~v
L
of a document d written in language L
into its corresponding vector ~v
L
?
in language L
?
Algorithm 1 Dictionary-based term-vector translation.
Input: a weighted document vector ~v
L
= (w
1
, . . . , w
n
), a
source language L and a target language L
?
Output: a translated vector ~v
L
?
1: ~v
L
?
? (0, . . . , 0) of length n
2: for i = 1 to n
3: if w
i
= 0 continue
4: // let t
i
be the term corresponding to w
i
in ~v
L
5: S
L
? Synsets
L
(t
i
)
6: for each synset s ? S
L
7: T ? getTranslations(s, L
?
)
8: if T 6= ? then
9: for each tr ? T
10: w
new
= w
i
· confidence(tr, t
i
)
11: // let index(tr) be the index of tr in ~v
L
12: if ? index(tr) then
13: v
L
?
(index(tr)) = w
new
14: return ~v
L
?
using BabelNet as our multilingual dictionary. We
detail the document-vector translation process in
Algorithm 1.
The translated vector ~v
L
?
is obtained as follows:
for each term t
i
with non-zero weight in v
L
we
obtain all the possible meanings of t
i
in BabelNet
(see line 5) and, for each of these, we retrieve all
the translations (line 7), i.e., lexicalizations of the
concept, in language L
?
available in the synset. We
set a non-zero value in the translation vector ~v
L
?
,
5
in correspondence with each such translation tr,
proportional to the weight of t
i
in the original vec-
tor and the confidence of the translation (line 10),
as provided by the BabelNet semantic network.
6
In order to increase the amount of information
available in the vector and counterbalance possible
wrong translations, we avoid translating all vec-
tors to one language. Instead, in the present work
we create a multilingual vector representation of a
5
To make the translation possible, while at the same time
keeping the same number of dimensions in our vector repre-
sentation, we use a shared vocabulary which covers both lan-
guages. See Section 6 for details on the experimental setup.
6
Non-English lexicalizations in BabelNet have confi-
dence 1 if originating from Wikipedia inter-language links
and ? 1 if obtained by means of statistical machine transla-
tion (Navigli and Ponzetto, 2012a).
418
document d written in language L by concatenat-
ing the corresponding vector ~v
L
with the translated
vector ~v
L
?
of d for language L
?
. As a result, we
obtain a multilingual vector ~v
LL
?
, which contains
lexicalizations in both languages.
4.2 Similarity between Multilingual Vectors
Following common practice for document similar-
ity in the literature (Manning et al., 2008), we use
the cosine similarity as the similarity measure be-
tween multilingual vectors:
S
v
(~v
LL
?
, ~v
?
LL
?) =
~v
LL
?
· ~v
?
LL
?
||~v
LL
?
|| ||~v
?
LL
?
||
. (7)
5 Knowledge-based Document Similarity
Given a source document d and a target docu-
ment d
?
, we calculate the similarities between the
respective knowledge-graph and multilingual vec-
tor representations, and combine them to obtain a
knowledge-based similarity as follows:
KBSim(d, d
?
) = c(G)S
g
(G,G
?
) + (1? c(G))S
v
(~v
LL
?
, ~v
?
LL
?
),
(8)
where c(G) is an interpolation factor calculated as
the edge density of knowledge graph G:
c(G) =
|E(G)|
|V (G)|(|V (G)| ? 1)
. (9)
Note that, using the factor c(G) to interpolate
the two similarities in Eq. 8, we determine the rel-
evance for the knowledge graphs and the multi-
lingual vectors in a dynamic way. Indeed, c(G)
makes the contribution of graph similarity depend
on the richness of the knowledge graph.
6 Evaluation
In this section we compare our knowledge-
based document similarity measure, KBSim,
against state-of-the-art models on two different
tasks: comparable document retrieval and cross-
lingual text categorization.
6.1 Comparable Document Retrieval
In our first experiment we determine the effective-
ness of our knowledge-based approach in a com-
parable document retrieval task. Given a docu-
ment d written in language L and a collection D
L
?
of documents written in another language L
?
, the
task of comparable document retrieval consists of
finding the document in D
L
?
which is most simi-
lar to d, under the assumption that there exists one
document d
?
? D
L
?
which is comparable with d.
6.1.1 Corpus and Task Setting
Dataset We followed the experimental setting
described in (Platt et al., 2010; Yih et al., 2011)
and evaluated KBSim on the Wikipedia dataset
made available by the authors of those papers.
The dataset is composed of Wikipedia compara-
ble encyclopedic entries in English and Spanish.
For each document in English there exists a “real”
pair in Spanish which was defined as a compara-
ble entry by the Wikipedia user community. The
dataset of each language was split into three parts:
43,380 training, 8,675 development and 8,675 test
documents. The documents were tokenized, with-
out stemming, and represented as vectors using a
log(tf)-idf weighting (Salton and Buckley, 1988).
The vocabulary of the corpus was restricted to
20,000 terms, which were the most frequent terms
in the two languages after removing the top 50
terms.
Methodology To evaluate the models we com-
pared each English document against the Spanish
dataset and vice versa. Following the original set-
ting, the results are given as the average perfor-
mance between these two experiments. For eval-
uation we employed the averaged top-1 accuracy
and Mean Reciprocal Rank (MMR) at finding the
real comparable document in the other language.
We compared KBSim against the state-of-the-art
supervised models S2Net, OPCA, CCA, and CL-
LSI (cf. Section 2). In contrast to these models,
KBSim does not need a training step, so we ap-
plied it directly to the testing partition.
In addition we also included the results of
CL-ESA
7
, CL-C3G
8
and two simple vector-based
models which translate all documents into English
on a word-by-word basis and compared them us-
ing cosine similarity: the first model (CosSim
E
)
uses a statistical dictionary trained with Europarl
using Wavelet-Domain Hidden Markov Models
(He, 2007), a model similar to IBM Model 4;
the second model (CosSim
BN
) instead uses Algo-
rithm 1 to translate the vectors with BabelNet.
6.1.2 Results
As we can see from Table 1,
9
the CosSim
BN
model, which uses BabelNet to translate the docu-
ment vectors, achieves better results than CCA and
CL-LSI. We hypothesize that this is due to these
linear projection models losing information during
the projection. CosSim
E
yields results similar to
CosSim
BN
, showing that BabelNet is a good al-
ternative statistical dictionary. In contrast to CCA
7
Document collections with sizes higher than 10
5
provide
high performance (Potthast et al., 2008). Here we used 15k
documents from the training set to index the test documents.
8
CL-C3G is CL-CNG using character 3-grams, which has
proven to be the best length (Mcnamee and Mayfield, 2004).
9
In this work, statistically significant results according to
a ?
2
test are highlighted in bold.
419
Model Dimension Accuracy MMR
S2Net 2000 0.7447 0.7973
KBSim N/A 0.7342 0.7750
OPCA 2000 0.7255 0.7734
CosSim
E
N/A 0.7033 0.7467
CosSim
BN
N/A 0.7029 0.7550
CCA 1500 0.6894 0.7378
CL-LSI 5000 0.5302 0.6130
CL-ESA 15000 0.2660 0.3305
CL-C3G N/A 0.2511 0.3025
Table 1: Test results for comparable document re-
trieval in Wikipedia. S2Net, OPCA, CosSim
E
,
CCA and CL-LSI are from (Yih et al., 2011).
and CL-LSI, OPCA performs better thanks to its
improved projection method using a noise covari-
ance matrix, which enables it to obtain the main
components in a low-dimensional space.
CL-C3G and CL-ESA obtain the lowest results.
Considering that English and Spanish do not have
many lexical similarities, the low performance of
CL-C3G is justified because these languages do
not share many character n-grams. The reason be-
hind the low results of CL-ESA can be explained
by the low number of intersecting concepts be-
tween Spanish and English in Wikipedia, as con-
firmed by Potthast et al. (2008). Despite both us-
ing Wikipedia in some way, KBSim obtains much
higher performance than CL-ESA thanks to the
use of our multilingual knowledge graph repre-
sentation of documents, which makes it possible
to expand and semantically relate its original con-
cepts. As a result, in contrast to CL-ESA, KB-
Sim can integrate conceptual and relational simi-
larity functions which provide more accurate per-
formance. Interestingly, KBSim also outperforms
OPCA which, in contrast to our system, is super-
vised, and in terms of accuracy is only 1 point be-
low S2Net, the supervised state-of-the-art model
using neural networks.
6.2 Cross-language Text Categorization
The second task in which we tested the differ-
ent models was cross-language text categorization.
The task is defined as follows: given a document
d
L
in a language L and a corpus D
?
L
?
with docu-
ments in a different language L
?
, and C possible
categories, a system has to classify d
L
into one of
the categories C using the labeled collection D
?
L
?
.
6.2.1 Corpus and Task Setting
Dataset To perform this task we used the Mul-
tilingual Reuters Collection (Amini et al., 2009),
which is composed of five datasets of news from
five different languages (English, French, German,
Spanish and Italian) and classified into six possi-
Model Dim. EN News ES News
Accuracy Accuracy
KBSim N/A 0.8189 0.6997
Full MT 50 0.8483 0.6484
CosSim
BN
N/A 0.8023 0.6737
OPCA 100 0.8412 0.5954
CCA 150 0.8388 0.5323
CL-LSI 5000 0.8401 0.5105
CosSim
E
N/A 0.8046 0.4481
Table 2: Test results for cross-language text cat-
egorization. Full MT, OPCA, CCA, CL-LSI and
CosSim
E
are from (Platt et al., 2010).
ble categories. In addition, each dataset of news
is translated into the other four languages using
the Portage translation system (Sadat et al., 2005).
As a result, we have five different multilingual
datasets, each containing source news documents
in one language and four sets of translated doc-
uments in the other languages. Each of the lan-
guages has an independent vocabulary. Document
vectors in the collection are created using TFIDF-
based weighting.
Methodology To evaluate our approach we used
the English and Spanish news datasets. From
the English news dataset we randomly selected
13,131 news as training and 1,875 as test docu-
ments. From the Spanish news dataset we selected
all 12,342 news as test documents. To classify
both test sets we used the English news training
set. We performed the experiment at cross-lingual
level using Spanish and English languages avail-
able for both Spanish and English news datasets,
therefore we classified each test set selecting the
documents in English and using the Spanish doc-
uments in the training dataset, and vice versa. We
followed Platt et al. (2010) and averaged the val-
ues obtained from the two comparisons for each
test set to obtain the final result. To categorize
the documents we applied k-NN to the ranked
list of documents according to the similarity mea-
sure employed for each model. We evaluated each
model by estimating its accuracy in the classifica-
tion of the English and Spanish test sets.
We compared our approach against the state-
of-the-art supervised models in this task: OPCA,
CCA and CL-LSI (Platt et al., 2010). In addi-
tion, we include the results of the CosSim
BN
and
CosSim
E
models that we introduced in Section
6.1.1, as well as the results of a full statistical ma-
chine translation system trained with Europarl and
post-processed by LSA (Full MT), as reported by
Platt et al. (2010).
420
6.2.2 Results
Table 2 shows the cross-language text categoriza-
tion accuracy. CosSim
E
obtained the lowest re-
sults. This is because there is a significant number
of untranslated terms in the translation process that
the statistical dictionary cannot cover. This is not
the case in the CosSim
BN
model which achieves
higher results using BabelNet as a statistical dic-
tionary, especially on the Spanish news corpus.
On the other hand, however, the linear projec-
tion methods as well as Full MT obtained the high-
est results on the English corpus. The differences
between the linear projection methods are evident
when looking at the Spanish corpus results; OPCA
performed best with a considerable improvement,
which indicates again that it is one of the most ef-
fective linear projection methods. Finally, our ap-
proach, KBSim, obtained competitive results on
the English corpus, performing best among the un-
supervised systems, and the highest results on the
Spanish news, surpassing all alternatives.
Since KBSim does not need any training for
document comparison, and because it based,
moreover, on a multilingual lexical resource, we
performed an additional experiment to demon-
strate its ability to carry out the same text cate-
gorization task in many languages. To do this, we
used the Multilingual Reuters Collection to cre-
ate a 3,000 document test dataset and 9,000 train-
ing dataset
10
for five languages: English, German,
Spanish, French and Italian. Then we calculated
the classification accuracy on each test set using
each training set. Results are shown in Table 3.
The best results for each language were ob-
tained when working at the monolingual level,
which suggests that KBSim might be a good
untrained alternative in monolingual tasks, too.
In general, cross-language comparisons produced
similar results, demonstrating the general applica-
bility of KBSim to arbitrary language pairs in mul-
tilingual text categorization. However, we note
that German, Italian and Spanish training parti-
tions produced low results compared to the oth-
ers. After analyzing the length of the documents
in the different datasets we discovered that they
have different average lengths in words: 79 (EN),
76 (FR), 75 (DE), 60 (ES) and 55 (IT). German,
Spanish and especially Italian documents have the
lowest average length, which makes it more diffi-
cult to build a representative knowledge graph of
the content of each document when it is perform-
ing at cross-language level.
10
Note that training is needed for the k-NN classifier, but
not for document comparison.
Testing Training datasets
datasets DE EN ES FR IT
DE 0.8053 0.6872 0.5373 0.6417 0.5920
EN 0.5827 0.8463 0.5540 0.6530 0.5820
ES 0.5883 0.6153 0.8707 0.6237 0.7010
FR 0.6867 0.7103 0.6667 0.8227 0.6887
IT 0.5973 0.5487 0.6263 0.5973 0.8317
Table 3: KBSim accuracy in a multilingual setup.
7 Conclusions
In this paper we introduced a knowledge-based
approach to represent and compare documents
written in different languages. The two main
contributions of this work are: i) a new graph-
based model for the language-independent rep-
resentation of documents based on the Babel-
Net multilingual semantic network; ii) KBSim, a
knowledge-based cross-language similarity mea-
sure between documents, which integrates our
multilingual graph-based model with a traditional
vector representation.
In two different cross-lingual tasks, i.e., compa-
rable document retrieval and cross-language text
categorization, KBSim has proven to perform on
a par or better than the supervised state-of-the-art
models which make use of linear projections to
obtain the main components of the term vectors.
We remark that, in contrast to the best systems in
the literature, KBSim does not need any parameter
tuning phase nor does it use any training informa-
tion. Moreover, when scaling to many languages,
supervised systems need to be trained on each pair,
which can be very costly.
The gist of our approach is in the knowl-
edge graph representation of documents, which re-
lates the original terms using expanded concepts
and relations from BabelNet. The knowledge
graphs also have the nice feature of being human-
interpretable, a feature that we want to exploit in
future work. We will also explore the integration
of linear projection models, such as OPCA and
S2Net, into our multilingual vector-based similar-
ity measure. Also, to ensure a level playing field,
following the competing models, in this work we
did not use multi-word expressions as vector com-
ponents. We will study their impact on KBSim in
future work.
Acknowledgments
The authors gratefully acknowledge the support
of the ERC Starting Grant MultiJEDI No. 259234,
EC WIQ-EI IRSES (Grant No. 269180) and
MICINN DIANA-Applications (TIN2012-38603-
C02-01). Thanks go to Yih et al. for their support
and Jim McManus for his comments.
421
References
Massih-Reza Amini, Nicolas Usunier, and Cyril
Goutte. 2009. Learning from multiple partially ob-
served views - an application to multilingual text
categorization. In Advances in Neural Information
Processing Systems 22 (NIPS 2009), pages 28–36.
Christian Bizer, Jens Lehmann, Georgi Kobilarov,
S¨oren Auer, Christian Becker, Richard Cyganiak,
and Sebastian Hellmann. 2009. Dbpedia - a crys-
tallization point for the web of data. J. Web Sem.,
7(3):154–165.
David M. Blei, Andrew Y. Ng, and Michael I. Jordan.
2003. Latent dirichlet allocation. the Journal of ma-
chine Learning research, 3:993–1022.
Philipp Cimiano, Antje Schultz, Sergej Sizov, Philipp
Sorg, and Steffen Staab. 2009. Explicit versus la-
tent concept models for cross-language information
retrieval. In Proceedings of the International Joint
Conference on Artificial Intelligence (IJCAI), vol-
ume 9, pages 1513–1518.
Scott Deerwester, Susan T. Dumais, George W. Fur-
nas, Thomas K. Landauer, and Richard Harshman.
1990. Indexing by latent semantic analysis. Jour-
nal of the American society for information science,
41(6):391–407.
Konstantinos I. Diamantaras and Sun Y. Kung. 1996.
Principal component neural networks. Wiley New
York.
Susan T. Dumais, Todd A. Letsche, Michael L.
Littman, and Thomas K. Landauer. 1997. Auto-
matic cross-language retrieval using latent seman-
tic indexing. In Proc. of AAAI Spring Symposium
on Cross-language Text and Speech Retrieval, pages
18–24.
Christiane Fellbaum. 1998. WordNet: An electronic
lexical database. Bradford Books.
Marc Franco-Salvador, Parth Gupta, and Paolo Rosso.
2013. Cross-language plagiarism detection using
a multilingual semantic network. In Proc. of the
35th European Conference on Information Retrieval
(ECIR’13), volume LNCS(7814), pages 710–713.
Springer-Verlag.
Evgeniy Gabrilovich and Shaul Markovitch. 2007.
Computing semantic relatedness using wikipedia-
based explicit semantic analysis. In Proc. of the 20th
International Joint Conference on Artifical Intelli-
gence (IJCAI), pages 1606–1611.
Taher Haveliwala, Sepandar Kamvar, and Glen Jeh.
2003. An analytical comparison of approaches to
personalizing pagerank. Technical Report 2003-35,
Stanford InfoLab, June.
Xiaodong He. 2007. Using word dependent transition
models in hmm based word alignment for statistical
machine translation. In Proceedings of the Second
Workshop on Statistical Machine Translation, pages
80–87. Association for Computational Linguistics.
Johannes Hoffart, Fabian M. Suchanek, Klaus
Berberich, and Gerhard Weikum. 2013. Yago2: A
spatially and temporally enhanced knowledge base
from wikipedia. Artificial Intelligence, 194:28–61.
Eduard H. Hovy, Roberto Navigli, and Simone Paolo
Ponzetto. 2013. Collaboratively built semi-
structured content and Artificial Intelligence: The
story so far. Artificial Intelligence, 194:2–27.
David Hull. 1994. Improving text retrieval for the
routing problem using latent semantic indexing. In
Proceedings of the 17th Annual International ACM
SIGIR Conference on Research and Development
in Information Retrieval (SIGIR), pages 282–291.
Springer.
Donald A. Jackson, Keith M. Somers, and Harold H.
Harvey. 1989. Similarity coefficients: measures of
co-occurrence and association or simply measures of
occurrence? American Naturalist, pages 436–453.
Ian T. Jolliffe. 1986. Principal component analysis,
volume 487. Springer-Verlag New York.
Thomas K. Landauer and Michael L. Littman. 1994.
Computerized cross-language document retrieval
using latent semantic indexing, April 5. US Patent
5,301,109.
Christopher D. Manning, Prabhakar Raghavan, and
Hinrich Sch¨utze. 2008. Introduction to Information
Retrieval. Cambridge University Press, New York,
NY, USA.
Michael Matuschek and Iryna Gurevych. 2013.
Dijkstra-WSA: A graph-based approach to word
sense alignment. Transactions of the Association for
Computational Linguistics (TACL), 1:151–164.
Paul Mcnamee and James Mayfield. 2004. Charac-
ter n-gram tokenization for european language text
retrieval. Information Retrieval, 7(1-2):73–97.
David Mimno, Hanna M. Wallach, Jason Naradowsky,
David A. Smith, and Andrew McCallum. 2009.
Polylingual topic models. In Proceedings of the
2009 Conference on Empirical Methods in Natural
Language Processing: Volume 2-Volume 2, pages
880–889. Association for Computational Linguis-
tics.
Manuel Montes y G´omez, Alexander F. Gelbukh, Au-
relio L´opez-L´opez, and Ricardo A. Baeza-Yates.
2001. Flexible comparison of conceptual graphs.
In Proc. of the 12th International Conference on
Database and Expert Systems Applications (DEXA),
pages 102–111.
Dragos Stefan Munteanu and Daniel Marcu. 2005. Im-
proving machine translation performance by exploit-
ing non-parallel corpora. Computational Linguis-
tics, 31(4):477–504.
422
Vivi Nastase and Michael Strube. 2013. Transform-
ing wikipedia into a large scale multilingual concept
network. Artificial Intelligence, 194:62–85.
Roberto Navigli and Mirella Lapata. 2010. An ex-
perimental study of graph connectivity for unsuper-
vised word sense disambiguation. IEEE Transac-
tions on Pattern Analysis and Machine Intelligence,
32(4):678–692.
Roberto Navigli and Simone Paolo Ponzetto. 2012a.
BabelNet: The automatic construction, evaluation
and application of a wide-coverage multilingual se-
mantic network. Artificial Intelligence, 193:217–
250.
Roberto Navigli and Simone Paolo Ponzetto. 2012b.
BabelRelate! a joint multilingual approach to com-
puting semantic relatedness. In Proceedings of the
Twenty-Sixth AAAI Conference on Artificial Intelli-
gence (AAAI-12), pages 108–114, Toronto, Canada.
Lawrence Page, Sergey Brin, Rajeev Motwani, and
Terry Winograd. 1998. The PageRank Citation
Ranking: Bringing Order to the Web. Technical re-
port, Stanford Digital Library Technologies Project.
John C. Platt, Kristina Toutanova, and Wen-tau Yih.
2010. Translingual document representations from
discriminative projections. In Proceedings of the
2010 Conference on Empirical Methods in Natural
Language Processing, pages 251–261.
Martin Potthast, Benno Stein, and Maik Anderka.
2008. A wikipedia-based multilingual retrieval
model. In Advances in Information Retrieval, pages
522–530. Springer.
Martin Potthast, Alberto Barr´on-Cede˜no, Benno Stein,
and Paolo Rosso. 2011. Cross-language plagia-
rism detection. Language Resources and Evalua-
tion, 45(1):45–62.
Fatiha Sadat, Howard Johnson, Akakpo Agbago,
George Foster, Joel Martin, and Aaron Tikuisis.
2005. Portage: A phrase-based machine translation
system. In Proceedings of the ACL Workshop on
Building and Using Parallel Texts, Ann Arbor, USA.
Gerard Salton and Christopher Buckley. 1988. Term-
weighting approaches in automatic text retrieval. In-
formation processing & management, 24(5):513–
523.
Gerard Salton and Michael J. McGill. 1986. Intro-
duction to Modern Information Retrieval. McGraw-
Hill, Inc., New York, NY, USA.
Gerard Salton, Edward A. Fox, and Harry Wu. 1983.
Extended boolean information retrieval. Communi-
cations of the ACM, 26(11):1022–1036.
Bruce Thompson. 2005. Canonical correlation analy-
sis. Encyclopedia of statistics in behavioral science.
Piek Vossen. 2004. EuroWordNet: A multilin-
gual database of autonomous and language-specific
wordnets connected via an inter-lingual index. In-
ternational Journal of Lexicography, 17(2):161–
173.
Wen-tau Yih, Kristina Toutanova, John C. Platt, and
Christopher Meek. 2011. Learning discriminative
projections for text similarity measures. In Proceed-
ings of the Fifteenth Conference on Computational
Natural Language Learning, pages 247–256.
423
